"use strict";(self.webpackChunkstorybook_app=self.webpackChunkstorybook_app||[]).push([[5483],{"../../node_modules/hls.js/dist/hls.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AbrController:()=>AbrController,AttrList:()=>AttrList,AudioStreamController:()=>AudioStreamController,AudioTrackController:()=>AudioTrackController,BasePlaylistController:()=>BasePlaylistController,BaseSegment:()=>BaseSegment,BaseStreamController:()=>BaseStreamController,BufferController:()=>BufferController,CMCDController:()=>CMCDController,CapLevelController:()=>CapLevelController,ChunkMetadata:()=>ChunkMetadata,ContentSteeringController:()=>ContentSteeringController,Cues:()=>Cues,DateRange:()=>DateRange,EMEController:()=>EMEController,ErrorActionFlags:()=>ErrorActionFlags,ErrorController:()=>ErrorController,ErrorDetails:()=>ErrorDetails,ErrorTypes:()=>ErrorTypes,Events:()=>Events,FPSController:()=>FPSController,FetchLoader:()=>FetchLoader,Fragment:()=>Fragment,Hls:()=>Hls,HlsSkip:()=>HlsSkip,HlsUrlParameters:()=>HlsUrlParameters,KeySystemFormats:()=>KeySystemFormats,KeySystems:()=>KeySystems,Level:()=>Level,LevelDetails:()=>LevelDetails,LevelKey:()=>LevelKey,LoadStats:()=>LoadStats,M3U8Parser:()=>M3U8Parser,MetadataSchema:()=>MetadataSchema,NetworkErrorAction:()=>NetworkErrorAction,Part:()=>Part,PlaylistLevelType:()=>PlaylistLevelType,SubtitleStreamController:()=>SubtitleStreamController,SubtitleTrackController:()=>SubtitleTrackController,TimelineController:()=>TimelineController,XhrLoader:()=>XhrLoader,default:()=>Hls,fetchSupported:()=>fetchSupported,getMediaSource:()=>getMediaSource,isMSESupported:()=>isMSESupported,isSupported:()=>isSupported,requestMediaKeySystemAccess:()=>requestMediaKeySystemAccess});var console=__webpack_require__("../../node_modules/console-browserify/index.js");const isFiniteNumber=Number.isFinite||function(value){return"number"==typeof value&&isFinite(value)},isSafeInteger=Number.isSafeInteger||function(value){return"number"==typeof value&&Math.abs(value)<=MAX_SAFE_INTEGER},MAX_SAFE_INTEGER=Number.MAX_SAFE_INTEGER||9007199254740991;let ErrorTypes=function(ErrorTypes){return ErrorTypes.NETWORK_ERROR="networkError",ErrorTypes.MEDIA_ERROR="mediaError",ErrorTypes.KEY_SYSTEM_ERROR="keySystemError",ErrorTypes.MUX_ERROR="muxError",ErrorTypes.OTHER_ERROR="otherError",ErrorTypes}({}),ErrorDetails=function(ErrorDetails){return ErrorDetails.KEY_SYSTEM_NO_KEYS="keySystemNoKeys",ErrorDetails.KEY_SYSTEM_NO_ACCESS="keySystemNoAccess",ErrorDetails.KEY_SYSTEM_NO_SESSION="keySystemNoSession",ErrorDetails.KEY_SYSTEM_NO_CONFIGURED_LICENSE="keySystemNoConfiguredLicense",ErrorDetails.KEY_SYSTEM_LICENSE_REQUEST_FAILED="keySystemLicenseRequestFailed",ErrorDetails.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED="keySystemServerCertificateRequestFailed",ErrorDetails.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED="keySystemServerCertificateUpdateFailed",ErrorDetails.KEY_SYSTEM_SESSION_UPDATE_FAILED="keySystemSessionUpdateFailed",ErrorDetails.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED="keySystemStatusOutputRestricted",ErrorDetails.KEY_SYSTEM_STATUS_INTERNAL_ERROR="keySystemStatusInternalError",ErrorDetails.KEY_SYSTEM_DESTROY_MEDIA_KEYS_ERROR="keySystemDestroyMediaKeysError",ErrorDetails.KEY_SYSTEM_DESTROY_CLOSE_SESSION_ERROR="keySystemDestroyCloseSessionError",ErrorDetails.KEY_SYSTEM_DESTROY_REMOVE_SESSION_ERROR="keySystemDestroyRemoveSessionError",ErrorDetails.MANIFEST_LOAD_ERROR="manifestLoadError",ErrorDetails.MANIFEST_LOAD_TIMEOUT="manifestLoadTimeOut",ErrorDetails.MANIFEST_PARSING_ERROR="manifestParsingError",ErrorDetails.MANIFEST_INCOMPATIBLE_CODECS_ERROR="manifestIncompatibleCodecsError",ErrorDetails.LEVEL_EMPTY_ERROR="levelEmptyError",ErrorDetails.LEVEL_LOAD_ERROR="levelLoadError",ErrorDetails.LEVEL_LOAD_TIMEOUT="levelLoadTimeOut",ErrorDetails.LEVEL_PARSING_ERROR="levelParsingError",ErrorDetails.LEVEL_SWITCH_ERROR="levelSwitchError",ErrorDetails.AUDIO_TRACK_LOAD_ERROR="audioTrackLoadError",ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT="audioTrackLoadTimeOut",ErrorDetails.SUBTITLE_LOAD_ERROR="subtitleTrackLoadError",ErrorDetails.SUBTITLE_TRACK_LOAD_TIMEOUT="subtitleTrackLoadTimeOut",ErrorDetails.FRAG_LOAD_ERROR="fragLoadError",ErrorDetails.FRAG_LOAD_TIMEOUT="fragLoadTimeOut",ErrorDetails.FRAG_DECRYPT_ERROR="fragDecryptError",ErrorDetails.FRAG_PARSING_ERROR="fragParsingError",ErrorDetails.FRAG_GAP="fragGap",ErrorDetails.REMUX_ALLOC_ERROR="remuxAllocError",ErrorDetails.KEY_LOAD_ERROR="keyLoadError",ErrorDetails.KEY_LOAD_TIMEOUT="keyLoadTimeOut",ErrorDetails.BUFFER_ADD_CODEC_ERROR="bufferAddCodecError",ErrorDetails.BUFFER_INCOMPATIBLE_CODECS_ERROR="bufferIncompatibleCodecsError",ErrorDetails.BUFFER_APPEND_ERROR="bufferAppendError",ErrorDetails.BUFFER_APPENDING_ERROR="bufferAppendingError",ErrorDetails.BUFFER_STALLED_ERROR="bufferStalledError",ErrorDetails.BUFFER_FULL_ERROR="bufferFullError",ErrorDetails.BUFFER_SEEK_OVER_HOLE="bufferSeekOverHole",ErrorDetails.BUFFER_NUDGE_ON_STALL="bufferNudgeOnStall",ErrorDetails.ASSET_LIST_LOAD_ERROR="assetListLoadError",ErrorDetails.ASSET_LIST_LOAD_TIMEOUT="assetListLoadTimeout",ErrorDetails.ASSET_LIST_PARSING_ERROR="assetListParsingError",ErrorDetails.INTERSTITIAL_ASSET_ITEM_ERROR="interstitialAssetItemError",ErrorDetails.INTERNAL_EXCEPTION="internalException",ErrorDetails.INTERNAL_ABORTED="aborted",ErrorDetails.ATTACH_MEDIA_ERROR="attachMediaError",ErrorDetails.UNKNOWN="unknown",ErrorDetails}({}),Events=function(Events){return Events.MEDIA_ATTACHING="hlsMediaAttaching",Events.MEDIA_ATTACHED="hlsMediaAttached",Events.MEDIA_DETACHING="hlsMediaDetaching",Events.MEDIA_DETACHED="hlsMediaDetached",Events.MEDIA_ENDED="hlsMediaEnded",Events.STALL_RESOLVED="hlsStallResolved",Events.BUFFER_RESET="hlsBufferReset",Events.BUFFER_CODECS="hlsBufferCodecs",Events.BUFFER_CREATED="hlsBufferCreated",Events.BUFFER_APPENDING="hlsBufferAppending",Events.BUFFER_APPENDED="hlsBufferAppended",Events.BUFFER_EOS="hlsBufferEos",Events.BUFFERED_TO_END="hlsBufferedToEnd",Events.BUFFER_FLUSHING="hlsBufferFlushing",Events.BUFFER_FLUSHED="hlsBufferFlushed",Events.MANIFEST_LOADING="hlsManifestLoading",Events.MANIFEST_LOADED="hlsManifestLoaded",Events.MANIFEST_PARSED="hlsManifestParsed",Events.LEVEL_SWITCHING="hlsLevelSwitching",Events.LEVEL_SWITCHED="hlsLevelSwitched",Events.LEVEL_LOADING="hlsLevelLoading",Events.LEVEL_LOADED="hlsLevelLoaded",Events.LEVEL_UPDATED="hlsLevelUpdated",Events.LEVEL_PTS_UPDATED="hlsLevelPtsUpdated",Events.LEVELS_UPDATED="hlsLevelsUpdated",Events.AUDIO_TRACKS_UPDATED="hlsAudioTracksUpdated",Events.AUDIO_TRACK_SWITCHING="hlsAudioTrackSwitching",Events.AUDIO_TRACK_SWITCHED="hlsAudioTrackSwitched",Events.AUDIO_TRACK_LOADING="hlsAudioTrackLoading",Events.AUDIO_TRACK_LOADED="hlsAudioTrackLoaded",Events.AUDIO_TRACK_UPDATED="hlsAudioTrackUpdated",Events.SUBTITLE_TRACKS_UPDATED="hlsSubtitleTracksUpdated",Events.SUBTITLE_TRACKS_CLEARED="hlsSubtitleTracksCleared",Events.SUBTITLE_TRACK_SWITCH="hlsSubtitleTrackSwitch",Events.SUBTITLE_TRACK_LOADING="hlsSubtitleTrackLoading",Events.SUBTITLE_TRACK_LOADED="hlsSubtitleTrackLoaded",Events.SUBTITLE_TRACK_UPDATED="hlsSubtitleTrackUpdated",Events.SUBTITLE_FRAG_PROCESSED="hlsSubtitleFragProcessed",Events.CUES_PARSED="hlsCuesParsed",Events.NON_NATIVE_TEXT_TRACKS_FOUND="hlsNonNativeTextTracksFound",Events.INIT_PTS_FOUND="hlsInitPtsFound",Events.FRAG_LOADING="hlsFragLoading",Events.FRAG_LOAD_EMERGENCY_ABORTED="hlsFragLoadEmergencyAborted",Events.FRAG_LOADED="hlsFragLoaded",Events.FRAG_DECRYPTED="hlsFragDecrypted",Events.FRAG_PARSING_INIT_SEGMENT="hlsFragParsingInitSegment",Events.FRAG_PARSING_USERDATA="hlsFragParsingUserdata",Events.FRAG_PARSING_METADATA="hlsFragParsingMetadata",Events.FRAG_PARSED="hlsFragParsed",Events.FRAG_BUFFERED="hlsFragBuffered",Events.FRAG_CHANGED="hlsFragChanged",Events.FPS_DROP="hlsFpsDrop",Events.FPS_DROP_LEVEL_CAPPING="hlsFpsDropLevelCapping",Events.MAX_AUTO_LEVEL_UPDATED="hlsMaxAutoLevelUpdated",Events.ERROR="hlsError",Events.DESTROYING="hlsDestroying",Events.KEY_LOADING="hlsKeyLoading",Events.KEY_LOADED="hlsKeyLoaded",Events.LIVE_BACK_BUFFER_REACHED="hlsLiveBackBufferReached",Events.BACK_BUFFER_REACHED="hlsBackBufferReached",Events.STEERING_MANIFEST_LOADED="hlsSteeringManifestLoaded",Events.ASSET_LIST_LOADING="hlsAssetListLoading",Events.ASSET_LIST_LOADED="hlsAssetListLoaded",Events.INTERSTITIALS_UPDATED="hlsInterstitialsUpdated",Events.INTERSTITIALS_BUFFERED_TO_BOUNDARY="hlsInterstitialsBufferedToBoundary",Events.INTERSTITIAL_ASSET_PLAYER_CREATED="hlsInterstitialAssetPlayerCreated",Events.INTERSTITIAL_STARTED="hlsInterstitialStarted",Events.INTERSTITIAL_ASSET_STARTED="hlsInterstitialAssetStarted",Events.INTERSTITIAL_ASSET_ENDED="hlsInterstitialAssetEnded",Events.INTERSTITIAL_ASSET_ERROR="hlsInterstitialAssetError",Events.INTERSTITIAL_ENDED="hlsInterstitialEnded",Events.INTERSTITIALS_PRIMARY_RESUMED="hlsInterstitialsPrimaryResumed",Events.PLAYOUT_LIMIT_REACHED="hlsPlayoutLimitReached",Events.EVENT_CUE_ENTER="hlsEventCueEnter",Events}({});var PlaylistContextType_MANIFEST="manifest",PlaylistContextType_LEVEL="level",PlaylistContextType_AUDIO_TRACK="audioTrack",PlaylistContextType_SUBTITLE_TRACK="subtitleTrack",PlaylistLevelType={MAIN:"main",AUDIO:"audio",SUBTITLE:"subtitle"};class EWMA{constructor(halfLife,estimate=0,weight=0){this.halfLife=void 0,this.alpha_=void 0,this.estimate_=void 0,this.totalWeight_=void 0,this.halfLife=halfLife,this.alpha_=halfLife?Math.exp(Math.log(.5)/halfLife):0,this.estimate_=estimate,this.totalWeight_=weight}sample(weight,value){const adjAlpha=Math.pow(this.alpha_,weight);this.estimate_=value*(1-adjAlpha)+adjAlpha*this.estimate_,this.totalWeight_+=weight}getTotalWeight(){return this.totalWeight_}getEstimate(){if(this.alpha_){const zeroFactor=1-Math.pow(this.alpha_,this.totalWeight_);if(zeroFactor)return this.estimate_/zeroFactor}return this.estimate_}}class EwmaBandWidthEstimator{constructor(slow,fast,defaultEstimate,defaultTTFB=100){this.defaultEstimate_=void 0,this.minWeight_=void 0,this.minDelayMs_=void 0,this.slow_=void 0,this.fast_=void 0,this.defaultTTFB_=void 0,this.ttfb_=void 0,this.defaultEstimate_=defaultEstimate,this.minWeight_=.001,this.minDelayMs_=50,this.slow_=new EWMA(slow),this.fast_=new EWMA(fast),this.defaultTTFB_=defaultTTFB,this.ttfb_=new EWMA(slow)}update(slow,fast){const{slow_,fast_,ttfb_}=this;slow_.halfLife!==slow&&(this.slow_=new EWMA(slow,slow_.getEstimate(),slow_.getTotalWeight())),fast_.halfLife!==fast&&(this.fast_=new EWMA(fast,fast_.getEstimate(),fast_.getTotalWeight())),ttfb_.halfLife!==slow&&(this.ttfb_=new EWMA(slow,ttfb_.getEstimate(),ttfb_.getTotalWeight()))}sample(durationMs,numBytes){const durationS=(durationMs=Math.max(durationMs,this.minDelayMs_))/1e3,bandwidthInBps=8*numBytes/durationS;this.fast_.sample(durationS,bandwidthInBps),this.slow_.sample(durationS,bandwidthInBps)}sampleTTFB(ttfb){const seconds=ttfb/1e3,weight=Math.sqrt(2)*Math.exp(-Math.pow(seconds,2)/2);this.ttfb_.sample(weight,Math.max(ttfb,5))}canEstimate(){return this.fast_.getTotalWeight()>=this.minWeight_}getEstimate(){return this.canEstimate()?Math.min(this.fast_.getEstimate(),this.slow_.getEstimate()):this.defaultEstimate_}getEstimateTTFB(){return this.ttfb_.getTotalWeight()>=this.minWeight_?this.ttfb_.getEstimate():this.defaultTTFB_}get defaultEstimate(){return this.defaultEstimate_}destroy(){}}function _defineProperty(e,r,t){return(r=function _toPropertyKey(t){var i=function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r);if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}(t,"string");return"symbol"==typeof i?i:i+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function _objectSpread2(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){_defineProperty(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}class Logger{constructor(label,logger){this.trace=void 0,this.debug=void 0,this.log=void 0,this.warn=void 0,this.info=void 0,this.error=void 0;const lb=`[${label}]:`;this.trace=noop,this.debug=logger.debug.bind(null,lb),this.log=logger.log.bind(null,lb),this.warn=logger.warn.bind(null,lb),this.info=logger.info.bind(null,lb),this.error=logger.error.bind(null,lb)}}const noop=function noop(){},fakeLogger={trace:noop,debug:noop,log:noop,warn:noop,info:noop,error:noop};function createLogger(){return _extends({},fakeLogger)}function getLoggerFn(key,debugConfig,id){return debugConfig[key]?debugConfig[key].bind(debugConfig):function consolePrintFn(type,id){const func=self.console[type];return func?func.bind(self.console,`${id?"["+id+"] ":""}[${type}] >`):noop}(key,id)}const exportedLogger=createLogger();const logger=exportedLogger;function getMediaSource(preferManagedMediaSource=!0){if("undefined"==typeof self)return;return(preferManagedMediaSource||!self.MediaSource)&&self.ManagedMediaSource||self.MediaSource||self.WebKitMediaSource}function isCompatibleTrackChange(currentTracks,requiredTracks){const trackNames=Object.keys(currentTracks),requiredTrackNames=Object.keys(requiredTracks),trackCount=trackNames.length,requiredTrackCount=requiredTrackNames.length;return!trackCount||!requiredTrackCount||trackCount===requiredTrackCount&&!trackNames.some((name=>-1===requiredTrackNames.indexOf(name)))}function utf8ArrayToStr(array,exitOnNull=!1){if("undefined"!=typeof TextDecoder){const decoded=new TextDecoder("utf-8").decode(array);if(exitOnNull){const idx=decoded.indexOf("\0");return-1!==idx?decoded.substring(0,idx):decoded}return decoded.replace(/\0/g,"")}const len=array.length;let c,char2,char3,out="",i=0;for(;i<len;){if(c=array[i++],0===c&&exitOnNull)return out;if(0!==c&&3!==c)switch(c>>4){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:out+=String.fromCharCode(c);break;case 12:case 13:char2=array[i++],out+=String.fromCharCode((31&c)<<6|63&char2);break;case 14:char2=array[i++],char3=array[i++],out+=String.fromCharCode((15&c)<<12|(63&char2)<<6|63&char3)}}return out}const Hex_hexDump=function(array){let str="";for(let i=0;i<array.length;i++){let h=array[i].toString(16);h.length<2&&(h="0"+h),str+=h}return str};function hexToArrayBuffer(str){return Uint8Array.from(str.replace(/^0x/,"").replace(/([\da-fA-F]{2}) ?/g,"0x$1 ").replace(/ +$/,"").split(" ")).buffer}function getDefaultExportFromCjs(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}var hasRequiredUrlToolkit,urlToolkit={exports:{}};var urlToolkitExports=function requireUrlToolkit(){return hasRequiredUrlToolkit||(hasRequiredUrlToolkit=1,URL_REGEX=/^(?=((?:[a-zA-Z0-9+\-.]+:)?))\1(?=((?:\/\/[^\/?#]*)?))\2(?=((?:(?:[^?#\/]*\/)*[^;?#\/]*)?))\3((?:;[^?#]*)?)(\?[^#]*)?(#[^]*)?$/,FIRST_SEGMENT_REGEX=/^(?=([^\/?#]*))\1([^]*)$/,SLASH_DOT_REGEX=/(?:\/|^)\.(?=\/)/g,SLASH_DOT_DOT_REGEX=/(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g,urlToolkit.exports=URLToolkit={buildAbsoluteURL:function(baseURL,relativeURL,opts){if(opts=opts||{},baseURL=baseURL.trim(),!(relativeURL=relativeURL.trim())){if(!opts.alwaysNormalize)return baseURL;var basePartsForNormalise=URLToolkit.parseURL(baseURL);if(!basePartsForNormalise)throw new Error("Error trying to parse base URL.");return basePartsForNormalise.path=URLToolkit.normalizePath(basePartsForNormalise.path),URLToolkit.buildURLFromParts(basePartsForNormalise)}var relativeParts=URLToolkit.parseURL(relativeURL);if(!relativeParts)throw new Error("Error trying to parse relative URL.");if(relativeParts.scheme)return opts.alwaysNormalize?(relativeParts.path=URLToolkit.normalizePath(relativeParts.path),URLToolkit.buildURLFromParts(relativeParts)):relativeURL;var baseParts=URLToolkit.parseURL(baseURL);if(!baseParts)throw new Error("Error trying to parse base URL.");if(!baseParts.netLoc&&baseParts.path&&"/"!==baseParts.path[0]){var pathParts=FIRST_SEGMENT_REGEX.exec(baseParts.path);baseParts.netLoc=pathParts[1],baseParts.path=pathParts[2]}baseParts.netLoc&&!baseParts.path&&(baseParts.path="/");var builtParts={scheme:baseParts.scheme,netLoc:relativeParts.netLoc,path:null,params:relativeParts.params,query:relativeParts.query,fragment:relativeParts.fragment};if(!relativeParts.netLoc&&(builtParts.netLoc=baseParts.netLoc,"/"!==relativeParts.path[0]))if(relativeParts.path){var baseURLPath=baseParts.path,newPath=baseURLPath.substring(0,baseURLPath.lastIndexOf("/")+1)+relativeParts.path;builtParts.path=URLToolkit.normalizePath(newPath)}else builtParts.path=baseParts.path,relativeParts.params||(builtParts.params=baseParts.params,relativeParts.query||(builtParts.query=baseParts.query));return null===builtParts.path&&(builtParts.path=opts.alwaysNormalize?URLToolkit.normalizePath(relativeParts.path):relativeParts.path),URLToolkit.buildURLFromParts(builtParts)},parseURL:function(url){var parts=URL_REGEX.exec(url);return parts?{scheme:parts[1]||"",netLoc:parts[2]||"",path:parts[3]||"",params:parts[4]||"",query:parts[5]||"",fragment:parts[6]||""}:null},normalizePath:function(path){for(path=path.split("").reverse().join("").replace(SLASH_DOT_REGEX,"");path.length!==(path=path.replace(SLASH_DOT_DOT_REGEX,"")).length;);return path.split("").reverse().join("")},buildURLFromParts:function(parts){return parts.scheme+parts.netLoc+parts.path+parts.params+parts.query+parts.fragment}}),urlToolkit.exports;var URL_REGEX,FIRST_SEGMENT_REGEX,SLASH_DOT_REGEX,SLASH_DOT_DOT_REGEX,URLToolkit}();class LoadStats{constructor(){this.aborted=!1,this.loaded=0,this.retry=0,this.total=0,this.chunkCount=0,this.bwEstimate=0,this.loading={start:0,first:0,end:0},this.parsing={start:0,end:0},this.buffering={start:0,first:0,end:0}}}var ElementaryStreamTypes_AUDIO="audio",ElementaryStreamTypes_VIDEO="video",ElementaryStreamTypes_AUDIOVIDEO="audiovideo";class BaseSegment{constructor(base){this._byteRange=null,this._url=null,this._stats=null,this._streams=null,this.base=void 0,this.relurl=void 0,"string"==typeof base&&(base={url:base}),this.base=base,function makeEnumerable(object,property){const d=getOwnPropertyDescriptorFromPrototypeChain(object,property);d&&(d.enumerable=!0,Object.defineProperty(object,property,d))}(this,"stats")}setByteRange(value,previous){const params=value.split("@",2);let start;start=1===params.length?(null==previous?void 0:previous.byteRangeEndOffset)||0:parseInt(params[1]),this._byteRange=[start,parseInt(params[0])+start]}get baseurl(){return this.base.url}get byteRange(){return null===this._byteRange?[]:this._byteRange}get byteRangeStartOffset(){return this.byteRange[0]}get byteRangeEndOffset(){return this.byteRange[1]}get elementaryStreams(){return null===this._streams&&(this._streams={[ElementaryStreamTypes_AUDIO]:null,[ElementaryStreamTypes_VIDEO]:null,[ElementaryStreamTypes_AUDIOVIDEO]:null}),this._streams}set elementaryStreams(value){this._streams=value}get hasStats(){return null!==this._stats}get hasStreams(){return null!==this._streams}get stats(){return null===this._stats&&(this._stats=new LoadStats),this._stats}set stats(value){this._stats=value}get url(){return!this._url&&this.baseurl&&this.relurl&&(this._url=urlToolkitExports.buildAbsoluteURL(this.baseurl,this.relurl,{alwaysNormalize:!0})),this._url||""}set url(value){this._url=value}clearElementaryStreamInfo(){const{elementaryStreams}=this;elementaryStreams[ElementaryStreamTypes_AUDIO]=null,elementaryStreams[ElementaryStreamTypes_VIDEO]=null,elementaryStreams[ElementaryStreamTypes_AUDIOVIDEO]=null}}function isMediaFragment(frag){return"initSegment"!==frag.sn}class Fragment extends BaseSegment{constructor(type,base){super(base),this._decryptdata=null,this._programDateTime=null,this._ref=null,this._bitrate=void 0,this.rawProgramDateTime=null,this.tagList=[],this.duration=0,this.sn=0,this.levelkeys=void 0,this.type=void 0,this.loader=null,this.keyLoader=null,this.level=-1,this.cc=0,this.startPTS=void 0,this.endPTS=void 0,this.startDTS=void 0,this.endDTS=void 0,this.start=0,this.playlistOffset=0,this.deltaPTS=void 0,this.maxStartPTS=void 0,this.minEndPTS=void 0,this.data=void 0,this.bitrateTest=!1,this.title=null,this.initSegment=null,this.endList=void 0,this.gap=void 0,this.urlId=0,this.type=type}get byteLength(){if(this.hasStats){const total=this.stats.total;if(total)return total}if(this.byteRange.length){const start=this.byteRange[0],end=this.byteRange[1];if(isFiniteNumber(start)&&isFiniteNumber(end))return end-start}return null}get bitrate(){return this.byteLength?8*this.byteLength/this.duration:this._bitrate?this._bitrate:null}set bitrate(value){this._bitrate=value}get decryptdata(){const{levelkeys}=this;if(!levelkeys&&!this._decryptdata)return null;if(!this._decryptdata&&this.levelkeys&&!this.levelkeys.NONE){const key=this.levelkeys.identity;if(key)this._decryptdata=key.getDecryptData(this.sn);else{const keyFormats=Object.keys(this.levelkeys);if(1===keyFormats.length){const levelKey=this._decryptdata=this.levelkeys[keyFormats[0]]||null;if(levelKey)return levelKey.getDecryptData(this.sn)}}}return this._decryptdata}get end(){return this.start+this.duration}get endProgramDateTime(){if(null===this.programDateTime)return null;const duration=isFiniteNumber(this.duration)?this.duration:0;return this.programDateTime+1e3*duration}get encrypted(){var _this$_decryptdata;if(null!=(_this$_decryptdata=this._decryptdata)&&_this$_decryptdata.encrypted)return!0;if(this.levelkeys){var _this$levelkeys$keyFo;const keyFormats=Object.keys(this.levelkeys),len=keyFormats.length;if(len>1||1===len&&null!=(_this$levelkeys$keyFo=this.levelkeys[keyFormats[0]])&&_this$levelkeys$keyFo.encrypted)return!0}return!1}get programDateTime(){return null===this._programDateTime&&this.rawProgramDateTime&&(this.programDateTime=Date.parse(this.rawProgramDateTime)),this._programDateTime}set programDateTime(value){isFiniteNumber(value)?this._programDateTime=value:this._programDateTime=this.rawProgramDateTime=null}get ref(){return isMediaFragment(this)?(this._ref||(this._ref={base:this.base,start:this.start,duration:this.duration,sn:this.sn,programDateTime:this.programDateTime}),this._ref):null}addStart(value){this.setStart(this.start+value)}setStart(value){this.start=value,this._ref&&(this._ref.start=value)}setDuration(value){this.duration=value,this._ref&&(this._ref.duration=value)}setKeyFormat(keyFormat){if(this.levelkeys){const key=this.levelkeys[keyFormat];key&&!this._decryptdata&&(this._decryptdata=key.getDecryptData(this.sn))}}abortRequests(){var _this$loader,_this$keyLoader;null==(_this$loader=this.loader)||_this$loader.abort(),null==(_this$keyLoader=this.keyLoader)||_this$keyLoader.abort()}setElementaryStreamInfo(type,startPTS,endPTS,startDTS,endDTS,partial=!1){const{elementaryStreams}=this,info=elementaryStreams[type];info?(info.startPTS=Math.min(info.startPTS,startPTS),info.endPTS=Math.max(info.endPTS,endPTS),info.startDTS=Math.min(info.startDTS,startDTS),info.endDTS=Math.max(info.endDTS,endDTS)):elementaryStreams[type]={startPTS,endPTS,startDTS,endDTS,partial}}}class Part extends BaseSegment{constructor(partAttrs,frag,base,index,previous){super(base),this.fragOffset=0,this.duration=0,this.gap=!1,this.independent=!1,this.relurl=void 0,this.fragment=void 0,this.index=void 0,this.duration=partAttrs.decimalFloatingPoint("DURATION"),this.gap=partAttrs.bool("GAP"),this.independent=partAttrs.bool("INDEPENDENT"),this.relurl=partAttrs.enumeratedString("URI"),this.fragment=frag,this.index=index;const byteRange=partAttrs.enumeratedString("BYTERANGE");byteRange&&this.setByteRange(byteRange,previous),previous&&(this.fragOffset=previous.fragOffset+previous.duration)}get start(){return this.fragment.start+this.fragOffset}get end(){return this.start+this.duration}get loaded(){const{elementaryStreams}=this;return!!(elementaryStreams.audio||elementaryStreams.video||elementaryStreams.audiovideo)}}function getOwnPropertyDescriptorFromPrototypeChain(object,property){const prototype=Object.getPrototypeOf(object);if(prototype){const propertyDescriptor=Object.getOwnPropertyDescriptor(prototype,property);return propertyDescriptor||getOwnPropertyDescriptorFromPrototypeChain(prototype,property)}}const UINT32_MAX$1=Math.pow(2,32)-1,push=[].push,RemuxerTrackIdConfig={video:1,audio:2,id3:3,text:4};function bin2str(data){return String.fromCharCode.apply(null,data)}function readUint16(buffer,offset){const val=buffer[offset]<<8|buffer[offset+1];return val<0?65536+val:val}function readUint32(buffer,offset){const val=readSint32(buffer,offset);return val<0?4294967296+val:val}function readUint64(buffer,offset){let result=readUint32(buffer,offset);return result*=Math.pow(2,32),result+=readUint32(buffer,offset+4),result}function readSint32(buffer,offset){return buffer[offset]<<24|buffer[offset+1]<<16|buffer[offset+2]<<8|buffer[offset+3]}function findBox(data,path){const results=[];if(!path.length)return results;const end=data.byteLength;for(let i=0;i<end;){const size=readUint32(data,i),endbox=size>1?i+size:end;if(bin2str(data.subarray(i+4,i+8))===path[0])if(1===path.length)results.push(data.subarray(i+8,endbox));else{const subresults=findBox(data.subarray(i+8,endbox),path.slice(1));subresults.length&&push.apply(results,subresults)}i=endbox}return results}function parseSegmentIndex(sidx){const references=[],version=sidx[0];let index=8;const timescale=readUint32(sidx,index);index+=4;let earliestPresentationTime=0,firstOffset=0;0===version?(earliestPresentationTime=readUint32(sidx,index),firstOffset=readUint32(sidx,index+4),index+=8):(earliestPresentationTime=readUint64(sidx,index),firstOffset=readUint64(sidx,index+8),index+=16),index+=2;let startByte=sidx.length+firstOffset;const referencesCount=readUint16(sidx,index);index+=2;for(let i=0;i<referencesCount;i++){let referenceIndex=index;const referenceInfo=readUint32(sidx,referenceIndex);referenceIndex+=4;const referenceSize=2147483647&referenceInfo;if(1===(2147483648&referenceInfo)>>>31)return logger.warn("SIDX has hierarchical references (not supported)"),null;const subsegmentDuration=readUint32(sidx,referenceIndex);referenceIndex+=4,references.push({referenceSize,subsegmentDuration,info:{duration:subsegmentDuration/timescale,start:startByte,end:startByte+referenceSize-1}}),startByte+=referenceSize,referenceIndex+=4,index=referenceIndex}return{earliestPresentationTime,timescale,version,referencesCount,references}}function parseInitSegment(initSegment){const result=[],traks=findBox(initSegment,["moov","trak"]);for(let i=0;i<traks.length;i++){const trak=traks[i],tkhd=findBox(trak,["tkhd"])[0];if(tkhd){let version=tkhd[0];const trackId=readUint32(tkhd,0===version?12:20),mdhd=findBox(trak,["mdia","mdhd"])[0];if(mdhd){version=mdhd[0];const timescale=readUint32(mdhd,0===version?12:20),hdlr=findBox(trak,["mdia","hdlr"])[0];if(hdlr){const hdlrType=bin2str(hdlr.subarray(8,12)),type={soun:ElementaryStreamTypes_AUDIO,vide:ElementaryStreamTypes_VIDEO}[hdlrType],stsd=parseStsd(findBox(trak,["mdia","minf","stbl","stsd"])[0]);type?(result[trackId]={timescale,type,stsd},result[type]=_objectSpread2({timescale,id:trackId},stsd)):result[trackId]={timescale,type:hdlrType,stsd}}}}}return findBox(initSegment,["moov","mvex","trex"]).forEach((trex=>{const trackId=readUint32(trex,4),track=result[trackId];track&&(track.default={duration:readUint32(trex,12),flags:readUint32(trex,20)})})),result}function parseStsd(stsd){const sampleEntries=stsd.subarray(8),sampleEntriesEnd=sampleEntries.subarray(86),fourCC=bin2str(sampleEntries.subarray(4,8));let supplemental,codec=fourCC;const encrypted="enca"===fourCC||"encv"===fourCC;if(encrypted){const encBox=findBox(sampleEntries,[fourCC])[0];findBox(encBox.subarray("enca"===fourCC?28:78),["sinf"]).forEach((sinf=>{const schm=findBox(sinf,["schm"])[0];if(schm){const scheme=bin2str(schm.subarray(4,8));if("cbcs"===scheme||"cenc"===scheme){const frma=findBox(sinf,["frma"])[0];frma&&(codec=bin2str(frma))}}}))}const codecFourCC=codec;switch(codec){case"avc1":case"avc2":case"avc3":case"avc4":{const avcCBox=findBox(sampleEntriesEnd,["avcC"])[0];avcCBox&&avcCBox.length>3&&(codec+="."+toHex(avcCBox[1])+toHex(avcCBox[2])+toHex(avcCBox[3]),supplemental=parseSupplementalDoViCodec("avc1"===codecFourCC?"dva1":"dvav",sampleEntriesEnd));break}case"mp4a":{const codecBox=findBox(sampleEntries,[fourCC])[0],esdsBox=findBox(codecBox.subarray(28),["esds"])[0];if(esdsBox&&esdsBox.length>7){let i=4;if(3!==esdsBox[i++])break;i=skipBERInteger(esdsBox,i),i+=2;const flags=esdsBox[i++];if(128&flags&&(i+=2),64&flags&&(i+=esdsBox[i++]),4!==esdsBox[i++])break;i=skipBERInteger(esdsBox,i);const objectType=esdsBox[i++];if(64!==objectType)break;if(codec+="."+toHex(objectType),i+=12,5!==esdsBox[i++])break;i=skipBERInteger(esdsBox,i);const firstByte=esdsBox[i++];let audioObjectType=(248&firstByte)>>3;31===audioObjectType&&(audioObjectType+=1+((7&firstByte)<<3)+((224&esdsBox[i])>>5)),codec+="."+audioObjectType}break}case"hvc1":case"hev1":{const hvcCBox=findBox(sampleEntriesEnd,["hvcC"])[0];if(hvcCBox&&hvcCBox.length>12){const profileByte=hvcCBox[1],profileSpace=["","A","B","C"][profileByte>>6],generalProfileIdc=31&profileByte,profileCompat=readUint32(hvcCBox,2),tierFlag=(32&profileByte)>>5?"H":"L",levelIDC=hvcCBox[12],constraintIndicator=hvcCBox.subarray(6,12);codec+="."+profileSpace+generalProfileIdc,codec+="."+function reverse32BitInt(val){let result=0;for(let i=0;i<32;i++)result|=(val>>i&1)<<31-i;return result>>>0}(profileCompat).toString(16).toUpperCase(),codec+="."+tierFlag+levelIDC;let constraintString="";for(let i=constraintIndicator.length;i--;){const byte=constraintIndicator[i];if(byte||constraintString){constraintString="."+byte.toString(16).toUpperCase()+constraintString}}codec+=constraintString}supplemental=parseSupplementalDoViCodec("hev1"==codecFourCC?"dvhe":"dvh1",sampleEntriesEnd);break}case"dvh1":case"dvhe":case"dvav":case"dva1":case"dav1":codec=parseSupplementalDoViCodec(codec,sampleEntriesEnd)||codec;break;case"vp09":{const vpcCBox=findBox(sampleEntriesEnd,["vpcC"])[0];if(vpcCBox&&vpcCBox.length>6){const profile=vpcCBox[4],level=vpcCBox[5],bitDepth=vpcCBox[6]>>4&15;codec+="."+addLeadingZero(profile)+"."+addLeadingZero(level)+"."+addLeadingZero(bitDepth)}break}case"av01":{const av1CBox=findBox(sampleEntriesEnd,["av1C"])[0];if(av1CBox&&av1CBox.length>2){const profile=av1CBox[1]>>>5,level=31&av1CBox[1],tierFlag=av1CBox[2]>>>7?"H":"M",highBitDepth=(64&av1CBox[2])>>6,twelveBit=(32&av1CBox[2])>>5,bitDepth=2===profile&&highBitDepth?twelveBit?12:10:highBitDepth?10:8,monochrome=(16&av1CBox[2])>>4,chromaSubsamplingX=(8&av1CBox[2])>>3,chromaSubsamplingY=(4&av1CBox[2])>>2,chromaSamplePosition=3&av1CBox[2],colorPrimaries=1,transferCharacteristics=1,matrixCoefficients=1,videoFullRangeFlag=0;codec+="."+profile+"."+addLeadingZero(level)+tierFlag+"."+addLeadingZero(bitDepth)+"."+monochrome+"."+chromaSubsamplingX+chromaSubsamplingY+chromaSamplePosition+"."+addLeadingZero(colorPrimaries)+"."+addLeadingZero(transferCharacteristics)+"."+addLeadingZero(matrixCoefficients)+"."+videoFullRangeFlag,supplemental=parseSupplementalDoViCodec("dav1",sampleEntriesEnd)}break}}return{codec,encrypted,supplemental}}function parseSupplementalDoViCodec(fourCC,sampleEntriesEnd){const dvvCResult=findBox(sampleEntriesEnd,["dvvC"]),dvXCBox=dvvCResult.length?dvvCResult[0]:findBox(sampleEntriesEnd,["dvcC"])[0];if(dvXCBox){const doViProfile=dvXCBox[2]>>1&127,doViLevel=dvXCBox[2]<<5&32|dvXCBox[3]>>3&31;return fourCC+"."+addLeadingZero(doViProfile)+"."+addLeadingZero(doViLevel)}}function skipBERInteger(bytes,i){const limit=i+5;for(;128&bytes[i++]&&i<limit;);return i}function toHex(x){return("0"+x.toString(16).toUpperCase()).slice(-2)}function addLeadingZero(num){return(num<10?"0":"")+num}function parseSinf(sinf){const schm=findBox(sinf,["schm"])[0];if(schm){const scheme=bin2str(schm.subarray(4,8));if("cbcs"===scheme||"cenc"===scheme)return findBox(sinf,["schi","tenc"])[0]}return null}function appendUint8Array(data1,data2){const temp=new Uint8Array(data1.length+data2.length);return temp.set(data1),temp.set(data2,data1.length),temp}function parseSamples(timeOffset,track){const seiSamples=[],videoData=track.samples,timescale=track.timescale,trackId=track.id;let isHEVCFlavor=!1;return findBox(videoData,["moof"]).map((moof=>{const moofOffset=moof.byteOffset-8;findBox(moof,["traf"]).map((traf=>{const baseTime=findBox(traf,["tfdt"]).map((tfdt=>{const version=tfdt[0];let result=readUint32(tfdt,4);return 1===version&&(result*=Math.pow(2,32),result+=readUint32(tfdt,8)),result/timescale}))[0];return void 0!==baseTime&&(timeOffset=baseTime),findBox(traf,["tfhd"]).map((tfhd=>{const id=readUint32(tfhd,4),tfhdFlags=16777215&readUint32(tfhd,0);let defaultSampleDuration=0;const defaultSampleSizePresent=!!(16&tfhdFlags);let defaultSampleSize=0;const defaultSampleFlagsPresent=!!(32&tfhdFlags);let tfhdOffset=8;id===trackId&&(!!(1&tfhdFlags)&&(tfhdOffset+=8),!!(2&tfhdFlags)&&(tfhdOffset+=4),!!(8&tfhdFlags)&&(defaultSampleDuration=readUint32(tfhd,tfhdOffset),tfhdOffset+=4),defaultSampleSizePresent&&(defaultSampleSize=readUint32(tfhd,tfhdOffset),tfhdOffset+=4),defaultSampleFlagsPresent&&(tfhdOffset+=4),"video"===track.type&&(isHEVCFlavor=isHEVC(track.codec)),findBox(traf,["trun"]).map((trun=>{const version=trun[0],flags=16777215&readUint32(trun,0),dataOffsetPresent=!!(1&flags);let dataOffset=0;const firstSampleFlagsPresent=!!(4&flags),sampleDurationPresent=!!(256&flags);let sampleDuration=0;const sampleSizePresent=!!(512&flags);let sampleSize=0;const sampleFlagsPresent=!!(1024&flags),sampleCompositionOffsetsPresent=!!(2048&flags);let compositionOffset=0;const sampleCount=readUint32(trun,4);let trunOffset=8;dataOffsetPresent&&(dataOffset=readUint32(trun,trunOffset),trunOffset+=4),firstSampleFlagsPresent&&(trunOffset+=4);let sampleOffset=dataOffset+moofOffset;for(let ix=0;ix<sampleCount;ix++){if(sampleDurationPresent?(sampleDuration=readUint32(trun,trunOffset),trunOffset+=4):sampleDuration=defaultSampleDuration,sampleSizePresent?(sampleSize=readUint32(trun,trunOffset),trunOffset+=4):sampleSize=defaultSampleSize,sampleFlagsPresent&&(trunOffset+=4),sampleCompositionOffsetsPresent&&(compositionOffset=0===version?readUint32(trun,trunOffset):readSint32(trun,trunOffset),trunOffset+=4),track.type===ElementaryStreamTypes_VIDEO){let naluTotalSize=0;for(;naluTotalSize<sampleSize;){const naluSize=readUint32(videoData,sampleOffset);if(sampleOffset+=4,isSEIMessage(isHEVCFlavor,videoData[sampleOffset])){parseSEIMessageFromNALu(videoData.subarray(sampleOffset,sampleOffset+naluSize),isHEVCFlavor?2:1,timeOffset+compositionOffset/timescale,seiSamples)}sampleOffset+=naluSize,naluTotalSize+=naluSize+4}}timeOffset+=sampleDuration/timescale}})))}))}))})),seiSamples}function isHEVC(codec){if(!codec)return!1;const baseCodec=codec.substring(0,4);return"hvc1"===baseCodec||"hev1"===baseCodec||"dvh1"===baseCodec||"dvhe"===baseCodec}function isSEIMessage(isHEVCFlavor,naluHeader){if(isHEVCFlavor){const naluType=naluHeader>>1&63;return 39===naluType||40===naluType}return 6===(31&naluHeader)}function parseSEIMessageFromNALu(unescapedData,headerSize,pts,samples){const data=discardEPB(unescapedData);let seiPtr=0;seiPtr+=headerSize;let payloadType=0,payloadSize=0,b=0;for(;seiPtr<data.length;){payloadType=0;do{if(seiPtr>=data.length)break;b=data[seiPtr++],payloadType+=b}while(255===b);payloadSize=0;do{if(seiPtr>=data.length)break;b=data[seiPtr++],payloadSize+=b}while(255===b);const leftOver=data.length-seiPtr;let payPtr=seiPtr;if(payloadSize<leftOver)seiPtr+=payloadSize;else if(payloadSize>leftOver){logger.error(`Malformed SEI payload. ${payloadSize} is too small, only ${leftOver} bytes left to parse.`);break}if(4===payloadType){if(181===data[payPtr++]){const providerCode=readUint16(data,payPtr);if(payPtr+=2,49===providerCode){const userStructure=readUint32(data,payPtr);if(payPtr+=4,1195456820===userStructure){const userDataType=data[payPtr++];if(3===userDataType){const firstByte=data[payPtr++],enabled=64&firstByte,totalBytes=enabled?2+3*(31&firstByte):0,byteArray=new Uint8Array(totalBytes);if(enabled){byteArray[0]=firstByte;for(let i=1;i<totalBytes;i++)byteArray[i]=data[payPtr++]}samples.push({type:userDataType,payloadType,pts,bytes:byteArray})}}}}}else if(5===payloadType&&payloadSize>16){const uuidStrArray=[];for(let i=0;i<16;i++){const _b=data[payPtr++].toString(16);uuidStrArray.push(1==_b.length?"0"+_b:_b),3!==i&&5!==i&&7!==i&&9!==i||uuidStrArray.push("-")}const length=payloadSize-16,userDataBytes=new Uint8Array(length);for(let i=0;i<length;i++)userDataBytes[i]=data[payPtr++];samples.push({payloadType,pts,uuid:uuidStrArray.join(""),userData:utf8ArrayToStr(userDataBytes),userDataBytes})}}}function discardEPB(data){const length=data.byteLength,EPBPositions=[];let i=1;for(;i<length-2;)0===data[i]&&0===data[i+1]&&3===data[i+2]?(EPBPositions.push(i+2),i+=2):i++;if(0===EPBPositions.length)return data;const newLength=length-EPBPositions.length,newData=new Uint8Array(newLength);let sourceIndex=0;for(i=0;i<newLength;sourceIndex++,i++)sourceIndex===EPBPositions[0]&&(sourceIndex++,EPBPositions.shift()),newData[i]=data[sourceIndex];return newData}function mp4pssh(systemId,keyids,data){if(16!==systemId.byteLength)throw new RangeError("Invalid system id");let version,kids,kidCount;version=0,kids=new Uint8Array,kidCount=new Uint8Array;const dataSize=new Uint8Array(4);return data.byteLength>0&&new DataView(dataSize.buffer).setUint32(0,data.byteLength,!1),function mp4Box(type,...payload){const len=payload.length;let size=8,i=len;for(;i--;)size+=payload[i].byteLength;const result=new Uint8Array(size);for(result[0]=size>>24&255,result[1]=size>>16&255,result[2]=size>>8&255,result[3]=255&size,result.set(type,4),i=0,size=8;i<len;i++)result.set(payload[i],size),size+=payload[i].byteLength;return result}([112,115,115,104],new Uint8Array([0,0,0,0]),systemId,kidCount,kids,dataSize,data)}const userAgentHevcSupportIsInaccurate=()=>/\(Windows.+Firefox\//i.test(navigator.userAgent),sampleEntryCodesISO={audio:{a3ds:1,"ac-3":.95,"ac-4":1,alac:.9,alaw:1,dra1:1,"dts+":1,"dts-":1,dtsc:1,dtse:1,dtsh:1,"ec-3":.9,enca:1,fLaC:.9,flac:.9,FLAC:.9,g719:1,g726:1,m4ae:1,mha1:1,mha2:1,mhm1:1,mhm2:1,mlpa:1,mp4a:1,"raw ":1,Opus:1,opus:1,samr:1,sawb:1,sawp:1,sevc:1,sqcp:1,ssmv:1,twos:1,ulaw:1},video:{avc1:1,avc2:1,avc3:1,avc4:1,avcp:1,av01:.8,dav1:.8,drac:1,dva1:1,dvav:1,dvh1:.7,dvhe:.7,encv:1,hev1:.75,hvc1:.75,mjp2:1,mp4v:1,mvc1:1,mvc2:1,mvc3:1,mvc4:1,resv:1,rv60:1,s263:1,svc1:1,svc2:1,"vc-1":1,vp08:1,vp09:.9},text:{stpp:1,wvtt:1}};function isCodecType(codec,type){const typeCodes=sampleEntryCodesISO[type];return!!typeCodes&&!!typeCodes[codec.slice(0,4)]}function areCodecsMediaSourceSupported(codecs,type,preferManagedMediaSource=!0){return!codecs.split(",").some((codec=>!isCodecMediaSourceSupported(codec,type,preferManagedMediaSource)))}function isCodecMediaSourceSupported(codec,type,preferManagedMediaSource=!0){var _MediaSource$isTypeSu;const MediaSource=getMediaSource(preferManagedMediaSource);return null!=(_MediaSource$isTypeSu=null==MediaSource?void 0:MediaSource.isTypeSupported(mimeTypeForCodec(codec,type)))&&_MediaSource$isTypeSu}function mimeTypeForCodec(codec,type){return`${type}/mp4;codecs=${codec}`}function videoCodecPreferenceValue(videoCodec){if(videoCodec){const fourCC=videoCodec.substring(0,4);return sampleEntryCodesISO.video[fourCC]}return 2}function codecsSetSelectionPreferenceValue(codecSet){const limitedHevcSupport=userAgentHevcSupportIsInaccurate();return codecSet.split(",").reduce(((num,fourCC)=>{const preferenceValue=limitedHevcSupport&&isHEVC(fourCC)?9:sampleEntryCodesISO.video[fourCC];return preferenceValue?(2*preferenceValue+num)/(num?3:2):(sampleEntryCodesISO.audio[fourCC]+num)/(num?2:1)}),0)}const CODEC_COMPATIBLE_NAMES={};const AUDIO_CODEC_REGEXP=/flac|opus|mp4a\.40\.34/i;function getCodecCompatibleName(codec,preferManagedMediaSource=!0){return codec.replace(AUDIO_CODEC_REGEXP,(m=>function getCodecCompatibleNameLower(lowerCaseCodec,preferManagedMediaSource=!0){if(CODEC_COMPATIBLE_NAMES[lowerCaseCodec])return CODEC_COMPATIBLE_NAMES[lowerCaseCodec];const codecsToCheck={flac:["flac","fLaC","FLAC"],opus:["opus","Opus"],"mp4a.40.34":["mp3"]}[lowerCaseCodec];for(let i=0;i<codecsToCheck.length;i++){var _getMediaSource;if(isCodecMediaSourceSupported(codecsToCheck[i],"audio",preferManagedMediaSource))return CODEC_COMPATIBLE_NAMES[lowerCaseCodec]=codecsToCheck[i],codecsToCheck[i];if("mp3"===codecsToCheck[i]&&null!=(_getMediaSource=getMediaSource(preferManagedMediaSource))&&_getMediaSource.isTypeSupported("audio/mpeg"))return""}return lowerCaseCodec}(m.toLowerCase(),preferManagedMediaSource)))}function pickMostCompleteCodecName(parsedCodec,levelCodec){if(parsedCodec&&(parsedCodec.length>4||-1!==["ac-3","ec-3","alac","fLaC","Opus"].indexOf(parsedCodec))&&(isCodecSupportedAsType(parsedCodec,"audio")||isCodecSupportedAsType(parsedCodec,"video")))return parsedCodec;if(levelCodec){const levelCodecs=levelCodec.split(",");if(levelCodecs.length>1){if(parsedCodec)for(let i=levelCodecs.length;i--;)if(levelCodecs[i].substring(0,4)===parsedCodec.substring(0,4))return levelCodecs[i];return levelCodecs[0]}}return levelCodec||parsedCodec}function isCodecSupportedAsType(codec,type){return isCodecType(codec,type)&&isCodecMediaSourceSupported(codec,type)}function fillInMissingAV01Params(videoCodec){if(videoCodec.startsWith("av01.")){const av1params=videoCodec.split("."),placeholders=["0","111","01","01","01","0"];for(let i=av1params.length;i>4&&i<10;i++)av1params[i]=placeholders[i-4];return av1params.join(".")}return videoCodec}function getM2TSSupportedAudioTypes(preferManagedMediaSource){const MediaSource=getMediaSource(preferManagedMediaSource)||{isTypeSupported:()=>!1};return{mpeg:MediaSource.isTypeSupported("audio/mpeg"),mp3:MediaSource.isTypeSupported('audio/mp4; codecs="mp3"'),ac3:MediaSource.isTypeSupported('audio/mp4; codecs="ac-3"')}}function getCodecsForMimeType(mimeType){return mimeType.replace(/^.+codecs=["']?([^"']+).*$/,"$1")}const SUPPORTED_INFO_DEFAULT={supported:!0,configurations:[],decodingInfoResults:[{supported:!0,powerEfficient:!0,smooth:!0}]};function getUnsupportedResult(error,configurations){return{supported:!1,configurations,decodingInfoResults:[{supported:!1,smooth:!1,powerEfficient:!1}],error}}function requiresMediaCapabilitiesDecodingInfo(level,audioTracksByGroup,currentVideoRange,currentFrameRate,currentBw,audioPreference){const videoCodecs=level.videoCodec,audioGroups=level.audioCodec?level.audioGroups:null,audioCodecPreference=null==audioPreference?void 0:audioPreference.audioCodec,channelsPreference=null==audioPreference?void 0:audioPreference.channels,maxChannels=channelsPreference?parseInt(channelsPreference):audioCodecPreference?1/0:2;let audioChannels=null;if(null!=audioGroups&&audioGroups.length)try{audioChannels=1===audioGroups.length&&audioGroups[0]?audioTracksByGroup.groups[audioGroups[0]].channels:audioGroups.reduce(((acc,groupId)=>{if(groupId){const audioTrackGroup=audioTracksByGroup.groups[groupId];if(!audioTrackGroup)throw new Error(`Audio track group ${groupId} not found`);Object.keys(audioTrackGroup.channels).forEach((key=>{acc[key]=(acc[key]||0)+audioTrackGroup.channels[key]}))}return acc}),{2:0})}catch(error){return!0}return void 0!==videoCodecs&&(videoCodecs.split(",").some((videoCodec=>isHEVC(videoCodec)))||level.width>1920&&level.height>1088||level.height>1920&&level.width>1088||level.frameRate>Math.max(currentFrameRate,30)||"SDR"!==level.videoRange&&level.videoRange!==currentVideoRange||level.bitrate>Math.max(currentBw,8e6))||!!audioChannels&&isFiniteNumber(maxChannels)&&Object.keys(audioChannels).some((channels=>parseInt(channels)>maxChannels))}function getMediaDecodingInfoPromise(level,audioTracksByGroup,mediaCapabilities,cache={}){const videoCodecs=level.videoCodec;if(!videoCodecs&&!level.audioCodec||!mediaCapabilities)return Promise.resolve(SUPPORTED_INFO_DEFAULT);const configurations=[],videoDecodeList=function makeVideoConfigurations(level){var _level$videoCodec;const videoCodecs=null==(_level$videoCodec=level.videoCodec)?void 0:_level$videoCodec.split(","),bitrate=getVariantDecodingBitrate(level),width=level.width||640,height=level.height||480,framerate=level.frameRate||30,videoRange=level.videoRange.toLowerCase();return videoCodecs?videoCodecs.map((videoCodec=>{const videoConfiguration={contentType:mimeTypeForCodec(fillInMissingAV01Params(videoCodec),"video"),width,height,bitrate,framerate};return"sdr"!==videoRange&&(videoConfiguration.transferFunction=videoRange),videoConfiguration})):[]}(level),videoCount=videoDecodeList.length,audioDecodeList=function makeAudioConfigurations(level,audioTracksByGroup,hasVideo){var _level$audioCodec;const audioCodecs=null==(_level$audioCodec=level.audioCodec)?void 0:_level$audioCodec.split(","),combinedBitrate=getVariantDecodingBitrate(level);if(audioCodecs&&level.audioGroups)return level.audioGroups.reduce(((configurations,audioGroupId)=>{var _audioTracksByGroup$g;const tracks=audioGroupId?null==(_audioTracksByGroup$g=audioTracksByGroup.groups[audioGroupId])?void 0:_audioTracksByGroup$g.tracks:null;return tracks?tracks.reduce(((configs,audioTrack)=>{if(audioTrack.groupId===audioGroupId){const channelsNumber=parseFloat(audioTrack.channels||"");audioCodecs.forEach((audioCodec=>{const audioConfiguration={contentType:mimeTypeForCodec(audioCodec,"audio"),bitrate:hasVideo?estimatedAudioBitrate(audioCodec,combinedBitrate):combinedBitrate};channelsNumber&&(audioConfiguration.channels=""+channelsNumber),configs.push(audioConfiguration)}))}return configs}),configurations):configurations}),[]);return[]}(level,audioTracksByGroup,videoCount>0),audioCount=audioDecodeList.length;for(let i=videoCount||1*audioCount||1;i--;){const configuration={type:"media-source"};if(videoCount&&(configuration.video=videoDecodeList[i%videoCount]),audioCount){configuration.audio=audioDecodeList[i%audioCount];const audioBitrate=configuration.audio.bitrate;configuration.video&&audioBitrate&&(configuration.video.bitrate-=audioBitrate)}configurations.push(configuration)}if(videoCodecs){const ua=navigator.userAgent;if(videoCodecs.split(",").some((videoCodec=>isHEVC(videoCodec)))&&userAgentHevcSupportIsInaccurate())return Promise.resolve(getUnsupportedResult(new Error(`Overriding Windows Firefox HEVC MediaCapabilities result based on user-agent string: (${ua})`),configurations))}return Promise.all(configurations.map((configuration=>{const decodingInfoKey=function getMediaDecodingInfoKey(config){let key="";const{audio,video}=config;if(video){key+=`${getCodecsForMimeType(video.contentType)}_r${video.height}x${video.width}f${Math.ceil(video.framerate)}${video.transferFunction||"sd"}_${Math.ceil(video.bitrate/1e5)}`}if(audio){key+=`${video?"_":""}${getCodecsForMimeType(audio.contentType)}_c${audio.channels}`}return key}(configuration);return cache[decodingInfoKey]||(cache[decodingInfoKey]=mediaCapabilities.decodingInfo(configuration))}))).then((decodingInfoResults=>({supported:!decodingInfoResults.some((info=>!info.supported)),configurations,decodingInfoResults}))).catch((error=>({supported:!1,configurations,decodingInfoResults:[],error})))}function estimatedAudioBitrate(audioCodec,levelBitrate){if(levelBitrate<=1)return 1;let audioBitrate=128e3;return"ec-3"===audioCodec?audioBitrate=768e3:"ac-3"===audioCodec&&(audioBitrate=64e4),Math.min(levelBitrate/2,audioBitrate)}function getVariantDecodingBitrate(level){return 1e3*Math.ceil(Math.max(.9*level.bitrate,level.averageBitrate)/1e3)||1}const HdcpLevels=["NONE","TYPE-0","TYPE-1",null];const VideoRangeValues=["SDR","PQ","HLG"];var HlsSkip={No:"",Yes:"YES",v2:"v2"};function getSkipValue(details){const{canSkipUntil,canSkipDateRanges,age}=details;return canSkipUntil&&age<canSkipUntil/2?canSkipDateRanges?HlsSkip.v2:HlsSkip.Yes:HlsSkip.No}class HlsUrlParameters{constructor(msn,part,skip){this.msn=void 0,this.part=void 0,this.skip=void 0,this.msn=msn,this.part=part,this.skip=skip}addDirectives(uri){const url=new self.URL(uri);return void 0!==this.msn&&url.searchParams.set("_HLS_msn",this.msn.toString()),void 0!==this.part&&url.searchParams.set("_HLS_part",this.part.toString()),this.skip&&url.searchParams.set("_HLS_skip",this.skip),url.href}}class Level{constructor(data){if(this._attrs=void 0,this.audioCodec=void 0,this.bitrate=void 0,this.codecSet=void 0,this.url=void 0,this.frameRate=void 0,this.height=void 0,this.id=void 0,this.name=void 0,this.supplemental=void 0,this.videoCodec=void 0,this.width=void 0,this.details=void 0,this.fragmentError=0,this.loadError=0,this.loaded=void 0,this.realBitrate=0,this.supportedPromise=void 0,this.supportedResult=void 0,this._avgBitrate=0,this._audioGroups=void 0,this._subtitleGroups=void 0,this._urlId=0,this.url=[data.url],this._attrs=[data.attrs],this.bitrate=data.bitrate,data.details&&(this.details=data.details),this.id=data.id||0,this.name=data.name,this.width=data.width||0,this.height=data.height||0,this.frameRate=data.attrs.optionalFloat("FRAME-RATE",0),this._avgBitrate=data.attrs.decimalInteger("AVERAGE-BANDWIDTH"),this.audioCodec=data.audioCodec,this.videoCodec=data.videoCodec,this.codecSet=[data.videoCodec,data.audioCodec].filter((c=>!!c)).map((s=>s.substring(0,4))).join(","),"supplemental"in data){var _data$supplemental;this.supplemental=data.supplemental;const supplementalVideo=null==(_data$supplemental=data.supplemental)?void 0:_data$supplemental.videoCodec;supplementalVideo&&supplementalVideo!==data.videoCodec&&(this.codecSet+=`,${supplementalVideo.substring(0,4)}`)}this.addGroupId("audio",data.attrs.AUDIO),this.addGroupId("text",data.attrs.SUBTITLES)}get maxBitrate(){return Math.max(this.realBitrate,this.bitrate)}get averageBitrate(){return this._avgBitrate||this.realBitrate||this.bitrate}get attrs(){return this._attrs[0]}get codecs(){return this.attrs.CODECS||""}get pathwayId(){return this.attrs["PATHWAY-ID"]||"."}get videoRange(){return this.attrs["VIDEO-RANGE"]||"SDR"}get score(){return this.attrs.optionalFloat("SCORE",0)}get uri(){return this.url[0]||""}hasAudioGroup(groupId){return hasGroup(this._audioGroups,groupId)}hasSubtitleGroup(groupId){return hasGroup(this._subtitleGroups,groupId)}get audioGroups(){return this._audioGroups}get subtitleGroups(){return this._subtitleGroups}addGroupId(type,groupId){if(groupId)if("audio"===type){let audioGroups=this._audioGroups;audioGroups||(audioGroups=this._audioGroups=[]),-1===audioGroups.indexOf(groupId)&&audioGroups.push(groupId)}else if("text"===type){let subtitleGroups=this._subtitleGroups;subtitleGroups||(subtitleGroups=this._subtitleGroups=[]),-1===subtitleGroups.indexOf(groupId)&&subtitleGroups.push(groupId)}}get urlId(){return 0}set urlId(value){}get audioGroupIds(){return this.audioGroups?[this.audioGroupId]:void 0}get textGroupIds(){return this.subtitleGroups?[this.textGroupId]:void 0}get audioGroupId(){var _this$audioGroups;return null==(_this$audioGroups=this.audioGroups)?void 0:_this$audioGroups[0]}get textGroupId(){var _this$subtitleGroups;return null==(_this$subtitleGroups=this.subtitleGroups)?void 0:_this$subtitleGroups[0]}addFallback(){}}function hasGroup(groups,groupId){return!(!groupId||!groups)&&-1!==groups.indexOf(groupId)}function getVideoSelectionOptions(currentVideoRange,videoPreference){let preferHDR=!1,allowedVideoRanges=[];if(currentVideoRange&&(preferHDR="SDR"!==currentVideoRange,allowedVideoRanges=[currentVideoRange]),videoPreference){allowedVideoRanges=videoPreference.allowedVideoRanges||VideoRangeValues.slice(0);const allowAutoPreferHDR="SDR"!==allowedVideoRanges.join("")&&!videoPreference.videoCodec;preferHDR=void 0!==videoPreference.preferHDR?videoPreference.preferHDR:allowAutoPreferHDR&&function isHdrSupported(){if("function"==typeof matchMedia){const mediaQueryList=matchMedia("(dynamic-range: high)"),badQuery=matchMedia("bad query");if(mediaQueryList.media!==badQuery.media)return!0===mediaQueryList.matches}return!1}(),preferHDR||(allowedVideoRanges=["SDR"])}return{preferHDR,allowedVideoRanges}}const stringify=(object,replacer)=>JSON.stringify(object,(replacer=>{const known=new WeakSet;return(_,value)=>{if(replacer&&(value=replacer(_,value)),"object"==typeof value&&null!==value){if(known.has(value))return;known.add(value)}return value}})(replacer));function logStartCodecCandidateIgnored(codeSet,reason){logger.log(`[abr] start candidates with "${codeSet}" ignored because ${reason}`)}function getAudioTracksByGroup(allAudioTracks){return allAudioTracks.reduce(((audioTracksByGroup,track)=>{let trackGroup=audioTracksByGroup.groups[track.groupId];trackGroup||(trackGroup=audioTracksByGroup.groups[track.groupId]={tracks:[],channels:{2:0},hasDefault:!1,hasAutoSelect:!1}),trackGroup.tracks.push(track);const channelsKey=track.channels||"2";return trackGroup.channels[channelsKey]=(trackGroup.channels[channelsKey]||0)+1,trackGroup.hasDefault=trackGroup.hasDefault||track.default,trackGroup.hasAutoSelect=trackGroup.hasAutoSelect||track.autoselect,trackGroup.hasDefault&&(audioTracksByGroup.hasDefaultAudio=!0),trackGroup.hasAutoSelect&&(audioTracksByGroup.hasAutoSelectAudio=!0),audioTracksByGroup}),{hasDefaultAudio:!1,hasAutoSelectAudio:!1,groups:{}})}function getBasicSelectionOption(option){if(!option)return option;const{lang,assocLang,characteristics,channels,audioCodec}=option;return{lang,assocLang,characteristics,channels,audioCodec}}function findMatchingOption(option,tracks,matchPredicate){if("attrs"in option){const index=tracks.indexOf(option);if(-1!==index)return index}for(let i=0;i<tracks.length;i++){if(matchesOption(option,tracks[i],matchPredicate))return i}return-1}function matchesOption(option,track,matchPredicate){const{groupId,name,lang,assocLang,default:isDefault}=option,forced=option.forced;return(void 0===groupId||track.groupId===groupId)&&(void 0===name||track.name===name)&&(void 0===lang||function languagesMatch(languageA,languageB="--"){if(languageA.length===languageB.length)return languageA===languageB;return languageA.startsWith(languageB)||languageB.startsWith(languageA)}(lang,track.lang))&&(void 0===lang||track.assocLang===assocLang)&&(void 0===isDefault||track.default===isDefault)&&(void 0===forced||track.forced===forced)&&(!("characteristics"in option)||function characteristicsMatch(characteristicsA,characteristicsB=""){const arrA=characteristicsA.split(","),arrB=characteristicsB.split(",");return arrA.length===arrB.length&&!arrA.some((el=>-1===arrB.indexOf(el)))}(option.characteristics||"",track.characteristics))&&(void 0===matchPredicate||matchPredicate(option,track))}function audioMatchPredicate(option,track){const{audioCodec,channels}=option;return!(void 0!==audioCodec&&(track.audioCodec||"").substring(0,4)!==audioCodec.substring(0,4)||void 0!==channels&&channels!==(track.channels||"2"))}function searchDownAndUpList(arr,searchIndex,predicate){for(let i=searchIndex;i>-1;i--)if(predicate(arr[i]))return i;for(let i=searchIndex+1;i<arr.length;i++)if(predicate(arr[i]))return i;return-1}function useAlternateAudio(audioTrackUrl,hls){var _hls$loadLevelObj;return!!audioTrackUrl&&audioTrackUrl!==(null==(_hls$loadLevelObj=hls.loadLevelObj)?void 0:_hls$loadLevelObj.uri)}class AbrController extends Logger{constructor(_hls){super("abr",_hls.logger),this.hls=void 0,this.lastLevelLoadSec=0,this.lastLoadedFragLevel=-1,this.firstSelection=-1,this._nextAutoLevel=-1,this.nextAutoLevelKey="",this.audioTracksByGroup=null,this.codecTiers=null,this.timer=-1,this.fragCurrent=null,this.partCurrent=null,this.bitrateTestDelay=0,this.rebufferNotice=-1,this.supportedCache={},this.bwEstimator=void 0,this._abandonRulesCheck=levelLoaded=>{var _ref;const{fragCurrent:frag,partCurrent:part,hls}=this,{autoLevelEnabled,media}=hls;if(!frag||!media)return;const now=performance.now(),stats=part?part.stats:frag.stats,duration=part?part.duration:frag.duration,timeLoading=now-stats.loading.start,minAutoLevel=hls.minAutoLevel,loadingFragForLevel=frag.level,currentAutoLevel=this._nextAutoLevel;if(stats.aborted||stats.loaded&&stats.loaded===stats.total||loadingFragForLevel<=minAutoLevel)return this.clearTimer(),void(this._nextAutoLevel=-1);if(!autoLevelEnabled)return;const fragBlockingSwitch=currentAutoLevel>-1&&currentAutoLevel!==loadingFragForLevel,levelChange=!!levelLoaded||fragBlockingSwitch;if(!levelChange&&(media.paused||!media.playbackRate||!media.readyState))return;const bufferInfo=hls.mainForwardBufferInfo;if(!levelChange&&null===bufferInfo)return;const ttfbEstimate=this.bwEstimator.getEstimateTTFB(),playbackRate=Math.abs(media.playbackRate);if(timeLoading<=Math.max(ttfbEstimate,duration/(2*playbackRate)*1e3))return;const bufferStarvationDelay=bufferInfo?bufferInfo.len/playbackRate:0,ttfb=stats.loading.first?stats.loading.first-stats.loading.start:-1,loadedFirstByte=stats.loaded&&ttfb>-1,bwEstimate=this.getBwEstimate(),levels=hls.levels,level=levels[loadingFragForLevel],expectedLen=Math.max(stats.loaded,Math.round(duration*(frag.bitrate||level.averageBitrate)/8));let timeStreaming=loadedFirstByte?timeLoading-ttfb:timeLoading;timeStreaming<1&&loadedFirstByte&&(timeStreaming=Math.min(timeLoading,8*stats.loaded/bwEstimate));const loadRate=loadedFirstByte?1e3*stats.loaded/timeStreaming:0,ttfbSeconds=ttfbEstimate/1e3,fragLoadedDelay=loadRate?(expectedLen-stats.loaded)/loadRate:8*expectedLen/bwEstimate+ttfbSeconds;if(fragLoadedDelay<=bufferStarvationDelay)return;const bwe=loadRate?8*loadRate:bwEstimate,live=!0===(null==(_ref=(null==levelLoaded?void 0:levelLoaded.details)||this.hls.latestLevelDetails)?void 0:_ref.live),abrBandWidthUpFactor=this.hls.config.abrBandWidthUpFactor;let nextLoadLevel,fragLevelNextLoadedDelay=Number.POSITIVE_INFINITY;for(nextLoadLevel=loadingFragForLevel-1;nextLoadLevel>minAutoLevel;nextLoadLevel--){const levelNextBitrate=levels[nextLoadLevel].maxBitrate,requiresLevelLoad=!levels[nextLoadLevel].details||live;if(fragLevelNextLoadedDelay=this.getTimeToLoadFrag(ttfbSeconds,bwe,duration*levelNextBitrate,requiresLevelLoad),fragLevelNextLoadedDelay<Math.min(bufferStarvationDelay,duration+ttfbSeconds))break}if(fragLevelNextLoadedDelay>=fragLoadedDelay)return;if(fragLevelNextLoadedDelay>10*duration)return;loadedFirstByte?this.bwEstimator.sample(timeLoading-Math.min(ttfbEstimate,ttfb),stats.loaded):this.bwEstimator.sampleTTFB(timeLoading);const nextLoadLevelBitrate=levels[nextLoadLevel].maxBitrate;this.getBwEstimate()*abrBandWidthUpFactor>nextLoadLevelBitrate&&this.resetEstimator(nextLoadLevelBitrate);const bestSwitchLevel=this.findBestLevel(nextLoadLevelBitrate,minAutoLevel,nextLoadLevel,0,bufferStarvationDelay,1,1);bestSwitchLevel>-1&&(nextLoadLevel=bestSwitchLevel),this.warn(`Fragment ${frag.sn}${part?" part "+part.index:""} of level ${loadingFragForLevel} is loading too slowly;\n      Fragment duration: ${frag.duration.toFixed(3)}\n      Time to underbuffer: ${bufferStarvationDelay.toFixed(3)} s\n      Estimated load time for current fragment: ${fragLoadedDelay.toFixed(3)} s\n      Estimated load time for down switch fragment: ${fragLevelNextLoadedDelay.toFixed(3)} s\n      TTFB estimate: ${0|ttfb} ms\n      Current BW estimate: ${isFiniteNumber(bwEstimate)?0|bwEstimate:"Unknown"} bps\n      New BW estimate: ${0|this.getBwEstimate()} bps\n      Switching to level ${nextLoadLevel} @ ${0|nextLoadLevelBitrate} bps`),hls.nextLoadLevel=hls.nextAutoLevel=nextLoadLevel,this.clearTimer();const abortAndSwitch=()=>{if(this.clearTimer(),this.fragCurrent===frag&&this.hls.loadLevel===nextLoadLevel&&nextLoadLevel>0){const bufferStarvationDelay=this.getStarvationDelay();if(this.warn(`Aborting inflight request ${nextLoadLevel>0?"and switching down":""}\n      Fragment duration: ${frag.duration.toFixed(3)} s\n      Time to underbuffer: ${bufferStarvationDelay.toFixed(3)} s`),frag.abortRequests(),this.fragCurrent=this.partCurrent=null,nextLoadLevel>minAutoLevel){let lowestSwitchLevel=this.findBestLevel(this.hls.levels[minAutoLevel].bitrate,minAutoLevel,nextLoadLevel,0,bufferStarvationDelay,1,1);-1===lowestSwitchLevel&&(lowestSwitchLevel=minAutoLevel),this.hls.nextLoadLevel=this.hls.nextAutoLevel=lowestSwitchLevel,this.resetEstimator(this.hls.levels[lowestSwitchLevel].bitrate)}}};fragBlockingSwitch||fragLoadedDelay>2*fragLevelNextLoadedDelay?abortAndSwitch():this.timer=self.setInterval(abortAndSwitch,1e3*fragLevelNextLoadedDelay),hls.trigger(Events.FRAG_LOAD_EMERGENCY_ABORTED,{frag,part,stats})},this.hls=_hls,this.bwEstimator=this.initEstimator(),this.registerListeners()}resetEstimator(abrEwmaDefaultEstimate){abrEwmaDefaultEstimate&&(this.log(`setting initial bwe to ${abrEwmaDefaultEstimate}`),this.hls.config.abrEwmaDefaultEstimate=abrEwmaDefaultEstimate),this.firstSelection=-1,this.bwEstimator=this.initEstimator()}initEstimator(){const config=this.hls.config;return new EwmaBandWidthEstimator(config.abrEwmaSlowVoD,config.abrEwmaFastVoD,config.abrEwmaDefaultEstimate)}registerListeners(){const{hls}=this;hls.on(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.on(Events.FRAG_LOADING,this.onFragLoading,this),hls.on(Events.FRAG_LOADED,this.onFragLoaded,this),hls.on(Events.FRAG_BUFFERED,this.onFragBuffered,this),hls.on(Events.LEVEL_SWITCHING,this.onLevelSwitching,this),hls.on(Events.LEVEL_LOADED,this.onLevelLoaded,this),hls.on(Events.LEVELS_UPDATED,this.onLevelsUpdated,this),hls.on(Events.MAX_AUTO_LEVEL_UPDATED,this.onMaxAutoLevelUpdated,this),hls.on(Events.ERROR,this.onError,this)}unregisterListeners(){const{hls}=this;hls&&(hls.off(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.off(Events.FRAG_LOADING,this.onFragLoading,this),hls.off(Events.FRAG_LOADED,this.onFragLoaded,this),hls.off(Events.FRAG_BUFFERED,this.onFragBuffered,this),hls.off(Events.LEVEL_SWITCHING,this.onLevelSwitching,this),hls.off(Events.LEVEL_LOADED,this.onLevelLoaded,this),hls.off(Events.LEVELS_UPDATED,this.onLevelsUpdated,this),hls.off(Events.MAX_AUTO_LEVEL_UPDATED,this.onMaxAutoLevelUpdated,this),hls.off(Events.ERROR,this.onError,this))}destroy(){this.unregisterListeners(),this.clearTimer(),this.hls=this._abandonRulesCheck=this.supportedCache=null,this.fragCurrent=this.partCurrent=null}onManifestLoading(event,data){this.lastLoadedFragLevel=-1,this.firstSelection=-1,this.lastLevelLoadSec=0,this.supportedCache={},this.fragCurrent=this.partCurrent=null,this.onLevelsUpdated(),this.clearTimer()}onLevelsUpdated(){this.lastLoadedFragLevel>-1&&this.fragCurrent&&(this.lastLoadedFragLevel=this.fragCurrent.level),this._nextAutoLevel=-1,this.onMaxAutoLevelUpdated(),this.codecTiers=null,this.audioTracksByGroup=null}onMaxAutoLevelUpdated(){this.firstSelection=-1,this.nextAutoLevelKey=""}onFragLoading(event,data){const frag=data.frag;if(!this.ignoreFragment(frag)){var _data$part;if(!frag.bitrateTest)this.fragCurrent=frag,this.partCurrent=null!=(_data$part=data.part)?_data$part:null;this.clearTimer(),this.timer=self.setInterval(this._abandonRulesCheck,100)}}onLevelSwitching(event,data){this.clearTimer()}onError(event,data){if(!data.fatal)switch(data.details){case ErrorDetails.BUFFER_ADD_CODEC_ERROR:case ErrorDetails.BUFFER_APPEND_ERROR:this.lastLoadedFragLevel=-1,this.firstSelection=-1;break;case ErrorDetails.FRAG_LOAD_TIMEOUT:{const frag=data.frag,{fragCurrent,partCurrent:part}=this;if(frag&&fragCurrent&&frag.sn===fragCurrent.sn&&frag.level===fragCurrent.level){const now=performance.now(),stats=part?part.stats:frag.stats,timeLoading=now-stats.loading.start,ttfb=stats.loading.first?stats.loading.first-stats.loading.start:-1;if(stats.loaded&&ttfb>-1){const ttfbEstimate=this.bwEstimator.getEstimateTTFB();this.bwEstimator.sample(timeLoading-Math.min(ttfbEstimate,ttfb),stats.loaded)}else this.bwEstimator.sampleTTFB(timeLoading)}break}}}getTimeToLoadFrag(timeToFirstByteSec,bandwidth,fragSizeBits,isSwitch){return timeToFirstByteSec+fragSizeBits/bandwidth+(isSwitch?timeToFirstByteSec+this.lastLevelLoadSec:0)}onLevelLoaded(event,data){const config=this.hls.config,{loading}=data.stats,timeLoadingMs=loading.end-loading.first;isFiniteNumber(timeLoadingMs)&&(this.lastLevelLoadSec=timeLoadingMs/1e3),data.details.live?this.bwEstimator.update(config.abrEwmaSlowLive,config.abrEwmaFastLive):this.bwEstimator.update(config.abrEwmaSlowVoD,config.abrEwmaFastVoD),this.timer>-1&&this._abandonRulesCheck(data.levelInfo)}onFragLoaded(event,{frag,part}){const stats=part?part.stats:frag.stats;if(frag.type===PlaylistLevelType.MAIN&&this.bwEstimator.sampleTTFB(stats.loading.first-stats.loading.start),!this.ignoreFragment(frag)){if(this.clearTimer(),frag.level===this._nextAutoLevel&&(this._nextAutoLevel=-1),this.firstSelection=-1,this.hls.config.abrMaxWithRealBitrate){const duration=part?part.duration:frag.duration,level=this.hls.levels[frag.level],loadedBytes=(level.loaded?level.loaded.bytes:0)+stats.loaded,loadedDuration=(level.loaded?level.loaded.duration:0)+duration;level.loaded={bytes:loadedBytes,duration:loadedDuration},level.realBitrate=Math.round(8*loadedBytes/loadedDuration)}if(frag.bitrateTest){const fragBufferedData={stats,frag,part,id:frag.type};this.onFragBuffered(Events.FRAG_BUFFERED,fragBufferedData),frag.bitrateTest=!1}else this.lastLoadedFragLevel=frag.level}}onFragBuffered(event,data){const{frag,part}=data,stats=null!=part&&part.stats.loaded?part.stats:frag.stats;if(stats.aborted)return;if(this.ignoreFragment(frag))return;const processingMs=stats.parsing.end-stats.loading.start-Math.min(stats.loading.first-stats.loading.start,this.bwEstimator.getEstimateTTFB());this.bwEstimator.sample(processingMs,stats.loaded),stats.bwEstimate=this.getBwEstimate(),frag.bitrateTest?this.bitrateTestDelay=processingMs/1e3:this.bitrateTestDelay=0}ignoreFragment(frag){return frag.type!==PlaylistLevelType.MAIN||"initSegment"===frag.sn}clearTimer(){this.timer>-1&&(self.clearInterval(this.timer),this.timer=-1)}get firstAutoLevel(){const{maxAutoLevel,minAutoLevel}=this.hls,bwEstimate=this.getBwEstimate(),maxStartDelay=this.hls.config.maxStarvationDelay,abrAutoLevel=this.findBestLevel(bwEstimate,minAutoLevel,maxAutoLevel,0,maxStartDelay,1,1);if(abrAutoLevel>-1)return abrAutoLevel;const firstLevel=this.hls.firstLevel,clamped=Math.min(Math.max(firstLevel,minAutoLevel),maxAutoLevel);return this.warn(`Could not find best starting auto level. Defaulting to first in playlist ${firstLevel} clamped to ${clamped}`),clamped}get forcedAutoLevel(){return this.nextAutoLevelKey?-1:this._nextAutoLevel}get nextAutoLevel(){const forcedAutoLevel=this.forcedAutoLevel,useEstimate=this.bwEstimator.canEstimate(),loadedFirstFrag=this.lastLoadedFragLevel>-1;if(!(-1===forcedAutoLevel||useEstimate&&loadedFirstFrag&&this.nextAutoLevelKey!==this.getAutoLevelKey()))return forcedAutoLevel;const nextABRAutoLevel=useEstimate&&loadedFirstFrag?this.getNextABRAutoLevel():this.firstAutoLevel;if(-1!==forcedAutoLevel){const levels=this.hls.levels;if(levels.length>Math.max(forcedAutoLevel,nextABRAutoLevel)&&levels[forcedAutoLevel].loadError<=levels[nextABRAutoLevel].loadError)return forcedAutoLevel}return this._nextAutoLevel=nextABRAutoLevel,this.nextAutoLevelKey=this.getAutoLevelKey(),nextABRAutoLevel}getAutoLevelKey(){return`${this.getBwEstimate()}_${this.getStarvationDelay().toFixed(2)}`}getNextABRAutoLevel(){const{fragCurrent,partCurrent,hls}=this;if(hls.levels.length<=1)return hls.loadLevel;const{maxAutoLevel,config,minAutoLevel}=hls,currentFragDuration=partCurrent?partCurrent.duration:fragCurrent?fragCurrent.duration:0,avgbw=this.getBwEstimate(),bufferStarvationDelay=this.getStarvationDelay();let bwFactor=config.abrBandWidthFactor,bwUpFactor=config.abrBandWidthUpFactor;if(bufferStarvationDelay){const _bestLevel=this.findBestLevel(avgbw,minAutoLevel,maxAutoLevel,bufferStarvationDelay,0,bwFactor,bwUpFactor);if(_bestLevel>=0)return this.rebufferNotice=-1,_bestLevel}let maxStarvationDelay=currentFragDuration?Math.min(currentFragDuration,config.maxStarvationDelay):config.maxStarvationDelay;if(!bufferStarvationDelay){const bitrateTestDelay=this.bitrateTestDelay;if(bitrateTestDelay){maxStarvationDelay=(currentFragDuration?Math.min(currentFragDuration,config.maxLoadingDelay):config.maxLoadingDelay)-bitrateTestDelay,this.info(`bitrate test took ${Math.round(1e3*bitrateTestDelay)}ms, set first fragment max fetchDuration to ${Math.round(1e3*maxStarvationDelay)} ms`),bwFactor=bwUpFactor=1}}const bestLevel=this.findBestLevel(avgbw,minAutoLevel,maxAutoLevel,bufferStarvationDelay,maxStarvationDelay,bwFactor,bwUpFactor);if(this.rebufferNotice!==bestLevel&&(this.rebufferNotice=bestLevel,this.info(`${bufferStarvationDelay?"rebuffering expected":"buffer is empty"}, optimal quality level ${bestLevel}`)),bestLevel>-1)return bestLevel;const minLevel=hls.levels[minAutoLevel],autoLevel=hls.loadLevelObj;return autoLevel&&(null==minLevel?void 0:minLevel.bitrate)<autoLevel.bitrate?minAutoLevel:hls.loadLevel}getStarvationDelay(){const hls=this.hls,media=hls.media;if(!media)return 1/0;const playbackRate=media&&0!==media.playbackRate?Math.abs(media.playbackRate):1,bufferInfo=hls.mainForwardBufferInfo;return(bufferInfo?bufferInfo.len:0)/playbackRate}getBwEstimate(){return this.bwEstimator.canEstimate()?this.bwEstimator.getEstimate():this.hls.config.abrEwmaDefaultEstimate}findBestLevel(currentBw,minAutoLevel,maxAutoLevel,bufferStarvationDelay,maxStarvationDelay,bwFactor,bwUpFactor){var _this$hls$latestLevel;const maxFetchDuration=bufferStarvationDelay+maxStarvationDelay,lastLoadedFragLevel=this.lastLoadedFragLevel,selectionBaseLevel=-1===lastLoadedFragLevel?this.hls.firstLevel:lastLoadedFragLevel,{fragCurrent,partCurrent}=this,{levels,allAudioTracks,loadLevel,config}=this.hls;if(1===levels.length)return 0;const level=levels[selectionBaseLevel],live=!(null==(_this$hls$latestLevel=this.hls.latestLevelDetails)||!_this$hls$latestLevel.live),firstSelection=-1===loadLevel||-1===lastLoadedFragLevel;let currentCodecSet,currentVideoRange="SDR",currentFrameRate=(null==level?void 0:level.frameRate)||0;const{audioPreference,videoPreference}=config,audioTracksByGroup=this.audioTracksByGroup||(this.audioTracksByGroup=getAudioTracksByGroup(allAudioTracks));let minStartIndex=-1;if(firstSelection){if(-1!==this.firstSelection)return this.firstSelection;const codecTiers=this.codecTiers||(this.codecTiers=function getCodecTiers(levels,audioTracksByGroup,minAutoLevel,maxAutoLevel){return levels.slice(minAutoLevel,maxAutoLevel+1).reduce(((tiers,level,index)=>{if(!level.codecSet)return tiers;const audioGroups=level.audioGroups;let tier=tiers[level.codecSet];tier||(tiers[level.codecSet]=tier={minBitrate:1/0,minHeight:1/0,minFramerate:1/0,minIndex:index,maxScore:0,videoRanges:{SDR:0},channels:{2:0},hasDefaultAudio:!audioGroups,fragmentError:0}),tier.minBitrate=Math.min(tier.minBitrate,level.bitrate);const lesserWidthOrHeight=Math.min(level.height,level.width);return tier.minHeight=Math.min(tier.minHeight,lesserWidthOrHeight),tier.minFramerate=Math.min(tier.minFramerate,level.frameRate),tier.minIndex=Math.min(tier.minIndex,index),tier.maxScore=Math.max(tier.maxScore,level.score),tier.fragmentError+=level.fragmentError,tier.videoRanges[level.videoRange]=(tier.videoRanges[level.videoRange]||0)+1,audioGroups&&audioGroups.forEach((audioGroupId=>{if(!audioGroupId)return;const audioGroup=audioTracksByGroup.groups[audioGroupId];audioGroup&&(tier.hasDefaultAudio=tier.hasDefaultAudio||audioTracksByGroup.hasDefaultAudio?audioGroup.hasDefault:audioGroup.hasAutoSelect||!audioTracksByGroup.hasDefaultAudio&&!audioTracksByGroup.hasAutoSelectAudio,Object.keys(audioGroup.channels).forEach((channels=>{tier.channels[channels]=(tier.channels[channels]||0)+audioGroup.channels[channels]})))})),tiers}),{})}(levels,audioTracksByGroup,minAutoLevel,maxAutoLevel)),startTier=function getStartCodecTier(codecTiers,currentVideoRange,currentBw,audioPreference,videoPreference){const codecSets=Object.keys(codecTiers),channelsPreference=null==audioPreference?void 0:audioPreference.channels,audioCodecPreference=null==audioPreference?void 0:audioPreference.audioCodec,videoCodecPreference=null==videoPreference?void 0:videoPreference.videoCodec,preferStereo=channelsPreference&&2===parseInt(channelsPreference);let hasStereo=!1,hasCurrentVideoRange=!1,minHeight=1/0,minFramerate=1/0,minBitrate=1/0,minIndex=1/0,selectedScore=0,videoRanges=[];const{preferHDR,allowedVideoRanges}=getVideoSelectionOptions(currentVideoRange,videoPreference);for(let i=codecSets.length;i--;){const tier=codecTiers[codecSets[i]];hasStereo||(hasStereo=tier.channels[2]>0),minHeight=Math.min(minHeight,tier.minHeight),minFramerate=Math.min(minFramerate,tier.minFramerate),minBitrate=Math.min(minBitrate,tier.minBitrate),allowedVideoRanges.filter((range=>tier.videoRanges[range]>0)).length>0&&(hasCurrentVideoRange=!0)}minHeight=isFiniteNumber(minHeight)?minHeight:0,minFramerate=isFiniteNumber(minFramerate)?minFramerate:0;const maxHeight=Math.max(1080,minHeight),maxFramerate=Math.max(30,minFramerate);minBitrate=isFiniteNumber(minBitrate)?minBitrate:currentBw,currentBw=Math.max(minBitrate,currentBw),hasCurrentVideoRange||(currentVideoRange=void 0);const hasMultipleSets=codecSets.length>1;return{codecSet:codecSets.reduce(((selected,candidate)=>{const candidateTier=codecTiers[candidate];if(candidate===selected)return selected;if(videoRanges=hasCurrentVideoRange?allowedVideoRanges.filter((range=>candidateTier.videoRanges[range]>0)):[],hasMultipleSets){if(candidateTier.minBitrate>currentBw)return logStartCodecCandidateIgnored(candidate,`min bitrate of ${candidateTier.minBitrate} > current estimate of ${currentBw}`),selected;if(!candidateTier.hasDefaultAudio)return logStartCodecCandidateIgnored(candidate,"no renditions with default or auto-select sound found"),selected;if(audioCodecPreference&&candidate.indexOf(audioCodecPreference.substring(0,4))%5!=0)return logStartCodecCandidateIgnored(candidate,`audio codec preference "${audioCodecPreference}" not found`),selected;if(channelsPreference&&!preferStereo){if(!candidateTier.channels[channelsPreference])return logStartCodecCandidateIgnored(candidate,`no renditions with ${channelsPreference} channel sound found (channels options: ${Object.keys(candidateTier.channels)})`),selected}else if((!audioCodecPreference||preferStereo)&&hasStereo&&0===candidateTier.channels[2])return logStartCodecCandidateIgnored(candidate,"no renditions with stereo sound found"),selected;if(candidateTier.minHeight>maxHeight)return logStartCodecCandidateIgnored(candidate,`min resolution of ${candidateTier.minHeight} > maximum of ${maxHeight}`),selected;if(candidateTier.minFramerate>maxFramerate)return logStartCodecCandidateIgnored(candidate,`min framerate of ${candidateTier.minFramerate} > maximum of ${maxFramerate}`),selected;if(!videoRanges.some((range=>candidateTier.videoRanges[range]>0)))return logStartCodecCandidateIgnored(candidate,`no variants with VIDEO-RANGE of ${stringify(videoRanges)} found`),selected;if(videoCodecPreference&&candidate.indexOf(videoCodecPreference.substring(0,4))%5!=0)return logStartCodecCandidateIgnored(candidate,`video codec preference "${videoCodecPreference}" not found`),selected;if(candidateTier.maxScore<selectedScore)return logStartCodecCandidateIgnored(candidate,`max score of ${candidateTier.maxScore} < selected max of ${selectedScore}`),selected}return selected&&(codecsSetSelectionPreferenceValue(candidate)>=codecsSetSelectionPreferenceValue(selected)||candidateTier.fragmentError>codecTiers[selected].fragmentError)?selected:(minIndex=candidateTier.minIndex,selectedScore=candidateTier.maxScore,candidate)}),void 0),videoRanges,preferHDR,minFramerate,minBitrate,minIndex}}(codecTiers,currentVideoRange,currentBw,audioPreference,videoPreference),{codecSet,videoRanges,minFramerate,minBitrate,minIndex,preferHDR}=startTier;minStartIndex=minIndex,currentCodecSet=codecSet,currentVideoRange=preferHDR?videoRanges[videoRanges.length-1]:videoRanges[0],currentFrameRate=minFramerate,currentBw=Math.max(currentBw,minBitrate),this.log(`picked start tier ${stringify(startTier)}`)}else currentCodecSet=null==level?void 0:level.codecSet,currentVideoRange=null==level?void 0:level.videoRange;const currentFragDuration=partCurrent?partCurrent.duration:fragCurrent?fragCurrent.duration:0,ttfbEstimateSec=this.bwEstimator.getEstimateTTFB()/1e3,levelsSkipped=[];for(let i=maxAutoLevel;i>=minAutoLevel;i--){var _levelInfo$supportedR;const levelInfo=levels[i],upSwitch=i>selectionBaseLevel;if(!levelInfo)continue;if(config.useMediaCapabilities&&!levelInfo.supportedResult&&!levelInfo.supportedPromise){const mediaCapabilities=navigator.mediaCapabilities;"function"==typeof(null==mediaCapabilities?void 0:mediaCapabilities.decodingInfo)&&requiresMediaCapabilitiesDecodingInfo(levelInfo,audioTracksByGroup,currentVideoRange,currentFrameRate,currentBw,audioPreference)?(levelInfo.supportedPromise=getMediaDecodingInfoPromise(levelInfo,audioTracksByGroup,mediaCapabilities,this.supportedCache),levelInfo.supportedPromise.then((decodingInfo=>{if(!this.hls)return;levelInfo.supportedResult=decodingInfo;const levels=this.hls.levels,index=levels.indexOf(levelInfo);decodingInfo.error?this.warn(`MediaCapabilities decodingInfo error: "${decodingInfo.error}" for level ${index} ${stringify(decodingInfo)}`):decodingInfo.supported?decodingInfo.decodingInfoResults.some((info=>!1===info.smooth||!1===info.powerEfficient))&&this.log(`MediaCapabilities decodingInfo for level ${index} not smooth or powerEfficient: ${stringify(decodingInfo)}`):(this.warn(`Unsupported MediaCapabilities decodingInfo result for level ${index} ${stringify(decodingInfo)}`),index>-1&&levels.length>1&&(this.log(`Removing unsupported level ${index}`),this.hls.removeLevel(index),-1===this.hls.loadLevel&&(this.hls.nextLoadLevel=0)))}))):levelInfo.supportedResult=SUPPORTED_INFO_DEFAULT}if((currentCodecSet&&levelInfo.codecSet!==currentCodecSet||currentVideoRange&&levelInfo.videoRange!==currentVideoRange||upSwitch&&currentFrameRate>levelInfo.frameRate||!upSwitch&&currentFrameRate>0&&currentFrameRate<levelInfo.frameRate||null!=(_levelInfo$supportedR=levelInfo.supportedResult)&&null!=(_levelInfo$supportedR=_levelInfo$supportedR.decodingInfoResults)&&_levelInfo$supportedR.some((info=>!1===info.smooth)))&&(!firstSelection||i!==minStartIndex)){levelsSkipped.push(i);continue}const levelDetails=levelInfo.details,avgDuration=(partCurrent?null==levelDetails?void 0:levelDetails.partTarget:null==levelDetails?void 0:levelDetails.averagetargetduration)||currentFragDuration;let adjustedbw;adjustedbw=upSwitch?bwUpFactor*currentBw:bwFactor*currentBw;const bitrate=currentFragDuration&&bufferStarvationDelay>=2*currentFragDuration&&0===maxStarvationDelay?levelInfo.averageBitrate:levelInfo.maxBitrate,fetchDuration=this.getTimeToLoadFrag(ttfbEstimateSec,adjustedbw,bitrate*avgDuration,void 0===levelDetails);if(adjustedbw>=bitrate&&(i===lastLoadedFragLevel||0===levelInfo.loadError&&0===levelInfo.fragmentError)&&(fetchDuration<=ttfbEstimateSec||!isFiniteNumber(fetchDuration)||live&&!this.bitrateTestDelay||fetchDuration<maxFetchDuration)){const forcedAutoLevel=this.forcedAutoLevel;return i===loadLevel||-1!==forcedAutoLevel&&forcedAutoLevel===loadLevel||(levelsSkipped.length&&this.trace(`Skipped level(s) ${levelsSkipped.join(",")} of ${maxAutoLevel} max with CODECS and VIDEO-RANGE:"${levels[levelsSkipped[0]].codecs}" ${levels[levelsSkipped[0]].videoRange}; not compatible with "${currentCodecSet}" ${currentVideoRange}`),this.info(`switch candidate:${selectionBaseLevel}->${i} adjustedbw(${Math.round(adjustedbw)})-bitrate=${Math.round(adjustedbw-bitrate)} ttfb:${ttfbEstimateSec.toFixed(1)} avgDuration:${avgDuration.toFixed(1)} maxFetchDuration:${maxFetchDuration.toFixed(1)} fetchDuration:${fetchDuration.toFixed(1)} firstSelection:${firstSelection} codecSet:${levelInfo.codecSet} videoRange:${levelInfo.videoRange} hls.loadLevel:${loadLevel}`)),firstSelection&&(this.firstSelection=i),i}}return-1}set nextAutoLevel(nextLevel){const value=this.deriveNextAutoLevel(nextLevel);this._nextAutoLevel!==value&&(this.nextAutoLevelKey="",this._nextAutoLevel=value)}deriveNextAutoLevel(nextLevel){const{maxAutoLevel,minAutoLevel}=this.hls;return Math.min(Math.max(nextLevel,minAutoLevel),maxAutoLevel)}}const BinarySearch_search=function(list,comparisonFn){let minIndex=0,maxIndex=list.length-1,currentIndex=null,currentElement=null;for(;minIndex<=maxIndex;){currentIndex=(minIndex+maxIndex)/2|0,currentElement=list[currentIndex];const comparisonResult=comparisonFn(currentElement);if(comparisonResult>0)minIndex=currentIndex+1;else{if(!(comparisonResult<0))return currentElement;maxIndex=currentIndex-1}}return null};function findFragmentByPTS(fragPrevious,fragments,bufferEnd=0,maxFragLookUpTolerance=0,nextFragLookupTolerance=.005){let fragNext=null;if(fragPrevious){fragNext=fragments[1+fragPrevious.sn-fragments[0].sn]||null;const bufferEdgeError=fragPrevious.endDTS-bufferEnd;bufferEdgeError>0&&bufferEdgeError<15e-7&&(bufferEnd+=15e-7),fragNext&&fragPrevious.level!==fragNext.level&&fragNext.end<=fragPrevious.end&&(fragNext=fragments[2+fragPrevious.sn-fragments[0].sn]||null)}else 0===bufferEnd&&0===fragments[0].start&&(fragNext=fragments[0]);if(fragNext&&((!fragPrevious||fragPrevious.level===fragNext.level)&&0===fragmentWithinToleranceTest(bufferEnd,maxFragLookUpTolerance,fragNext)||function fragmentWithinFastStartSwitch(fragNext,fragPrevious,nextFragLookupTolerance){if(fragPrevious&&0===fragPrevious.start&&fragPrevious.level<fragNext.level&&(fragPrevious.endPTS||0)>0){const firstDuration=fragPrevious.tagList.reduce(((duration,tag)=>("INF"===tag[0]&&(duration+=parseFloat(tag[1])),duration)),nextFragLookupTolerance);return fragNext.start<=firstDuration}return!1}(fragNext,fragPrevious,Math.min(nextFragLookupTolerance,maxFragLookUpTolerance))))return fragNext;const foundFragment=BinarySearch_search(fragments,fragmentWithinToleranceTest.bind(null,bufferEnd,maxFragLookUpTolerance));return!foundFragment||foundFragment===fragPrevious&&fragNext?fragNext:foundFragment}function fragmentWithinToleranceTest(bufferEnd=0,maxFragLookUpTolerance=0,candidate){if(candidate.start<=bufferEnd&&candidate.start+candidate.duration>bufferEnd)return 0;const candidateLookupTolerance=Math.min(maxFragLookUpTolerance,candidate.duration+(candidate.deltaPTS?candidate.deltaPTS:0));return candidate.start+candidate.duration-candidateLookupTolerance<=bufferEnd?1:candidate.start-candidateLookupTolerance>bufferEnd&&candidate.start?-1:0}function pdtWithinToleranceTest(pdtBufferEnd,maxFragLookUpTolerance,candidate){const candidateLookupTolerance=1e3*Math.min(maxFragLookUpTolerance,candidate.duration+(candidate.deltaPTS?candidate.deltaPTS:0));return(candidate.endProgramDateTime||0)-candidateLookupTolerance>pdtBufferEnd}function findNearestWithCC(details,cc,pos){if(details&&details.startCC<=cc&&details.endCC>=cc){let fragments=details.fragments;const{fragmentHint}=details;let closest;return fragmentHint&&(fragments=fragments.concat(fragmentHint)),BinarySearch_search(fragments,(candidate=>candidate.cc<cc?1:candidate.cc>cc?-1:(closest=candidate,candidate.end<=pos?1:candidate.start>pos?-1:0))),closest||null}return null}function isTimeoutError(error){switch(error.details){case ErrorDetails.FRAG_LOAD_TIMEOUT:case ErrorDetails.KEY_LOAD_TIMEOUT:case ErrorDetails.LEVEL_LOAD_TIMEOUT:case ErrorDetails.MANIFEST_LOAD_TIMEOUT:return!0}return!1}function getRetryConfig(loadPolicy,error){const isTimeout=isTimeoutError(error);return loadPolicy.default[(isTimeout?"timeout":"error")+"Retry"]}function getRetryDelay(retryConfig,retryCount){const backoffFactor="linear"===retryConfig.backoff?1:Math.pow(2,retryCount);return Math.min(backoffFactor*retryConfig.retryDelayMs,retryConfig.maxRetryDelayMs)}function getLoaderConfigWithoutReties(loderConfig){return _objectSpread2(_objectSpread2({},loderConfig),{errorRetry:null,timeoutRetry:null})}function shouldRetry(retryConfig,retryCount,isTimeout,loaderResponse){if(!retryConfig)return!1;const httpStatus=null==loaderResponse?void 0:loaderResponse.code,retry=retryCount<retryConfig.maxNumRetry&&(function retryForHttpStatus(httpStatus){return 0===httpStatus&&!1===navigator.onLine||!!httpStatus&&(httpStatus<400||httpStatus>499)}(httpStatus)||!!isTimeout);return retryConfig.shouldRetry?retryConfig.shouldRetry(retryConfig,retryCount,isTimeout,loaderResponse,retry):retry}var NetworkErrorAction={DoNothing:0,SendEndCallback:1,SendAlternateToPenaltyBox:2,RemoveAlternatePermanently:3,InsertDiscontinuity:4,RetryRequest:5},ErrorActionFlags={None:0,MoveAllAlternatesMatchingHost:1,MoveAllAlternatesMatchingHDCP:2,SwitchToSDR:4};class ErrorController extends Logger{constructor(hls){super("error-controller",hls.logger),this.hls=void 0,this.playlistError=0,this.penalizedRenditions={},this.hls=hls,this.registerListeners()}registerListeners(){const hls=this.hls;hls.on(Events.ERROR,this.onError,this),hls.on(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.on(Events.LEVEL_UPDATED,this.onLevelUpdated,this)}unregisterListeners(){const hls=this.hls;hls&&(hls.off(Events.ERROR,this.onError,this),hls.off(Events.ERROR,this.onErrorOut,this),hls.off(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.off(Events.LEVEL_UPDATED,this.onLevelUpdated,this))}destroy(){this.unregisterListeners(),this.hls=null,this.penalizedRenditions={}}startLoad(startPosition){}stopLoad(){this.playlistError=0}getVariantLevelIndex(frag){return(null==frag?void 0:frag.type)===PlaylistLevelType.MAIN?frag.level:this.hls.loadLevel}onManifestLoading(){this.playlistError=0,this.penalizedRenditions={}}onLevelUpdated(){this.playlistError=0}onError(event,data){var _data$frag;if(data.fatal)return;const hls=this.hls,context=data.context;switch(data.details){case ErrorDetails.FRAG_LOAD_ERROR:case ErrorDetails.FRAG_LOAD_TIMEOUT:case ErrorDetails.KEY_LOAD_ERROR:case ErrorDetails.KEY_LOAD_TIMEOUT:return void(data.errorAction=this.getFragRetryOrSwitchAction(data));case ErrorDetails.FRAG_PARSING_ERROR:if(null!=(_data$frag=data.frag)&&_data$frag.gap)return void(data.errorAction=createDoNothingErrorAction());case ErrorDetails.FRAG_GAP:case ErrorDetails.FRAG_DECRYPT_ERROR:return data.errorAction=this.getFragRetryOrSwitchAction(data),void(data.errorAction.action=NetworkErrorAction.SendAlternateToPenaltyBox);case ErrorDetails.LEVEL_EMPTY_ERROR:case ErrorDetails.LEVEL_PARSING_ERROR:{var _data$context;const levelIndex=data.parent===PlaylistLevelType.MAIN?data.level:hls.loadLevel;data.details===ErrorDetails.LEVEL_EMPTY_ERROR&&null!=(_data$context=data.context)&&null!=(_data$context=_data$context.levelDetails)&&_data$context.live?data.errorAction=this.getPlaylistRetryOrSwitchAction(data,levelIndex):(data.levelRetry=!1,data.errorAction=this.getLevelSwitchAction(data,levelIndex))}return;case ErrorDetails.LEVEL_LOAD_ERROR:case ErrorDetails.LEVEL_LOAD_TIMEOUT:return void("number"==typeof(null==context?void 0:context.level)&&(data.errorAction=this.getPlaylistRetryOrSwitchAction(data,context.level)));case ErrorDetails.AUDIO_TRACK_LOAD_ERROR:case ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT:case ErrorDetails.SUBTITLE_LOAD_ERROR:case ErrorDetails.SUBTITLE_TRACK_LOAD_TIMEOUT:if(context){const level=hls.loadLevelObj;if(level&&(context.type===PlaylistContextType_AUDIO_TRACK&&level.hasAudioGroup(context.groupId)||context.type===PlaylistContextType_SUBTITLE_TRACK&&level.hasSubtitleGroup(context.groupId)))return data.errorAction=this.getPlaylistRetryOrSwitchAction(data,hls.loadLevel),data.errorAction.action=NetworkErrorAction.SendAlternateToPenaltyBox,void(data.errorAction.flags=ErrorActionFlags.MoveAllAlternatesMatchingHost)}return;case ErrorDetails.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED:{const level=hls.loadLevelObj,restrictedHdcpLevel=null==level?void 0:level.attrs["HDCP-LEVEL"];restrictedHdcpLevel?data.errorAction={action:NetworkErrorAction.SendAlternateToPenaltyBox,flags:ErrorActionFlags.MoveAllAlternatesMatchingHDCP,hdcpLevel:restrictedHdcpLevel}:this.keySystemError(data)}return;case ErrorDetails.BUFFER_ADD_CODEC_ERROR:case ErrorDetails.REMUX_ALLOC_ERROR:case ErrorDetails.BUFFER_APPEND_ERROR:var _data$level;if(!data.errorAction)data.errorAction=this.getLevelSwitchAction(data,null!=(_data$level=data.level)?_data$level:hls.loadLevel);return;case ErrorDetails.INTERNAL_EXCEPTION:case ErrorDetails.BUFFER_APPENDING_ERROR:case ErrorDetails.BUFFER_FULL_ERROR:case ErrorDetails.LEVEL_SWITCH_ERROR:case ErrorDetails.BUFFER_STALLED_ERROR:case ErrorDetails.BUFFER_SEEK_OVER_HOLE:case ErrorDetails.BUFFER_NUDGE_ON_STALL:return void(data.errorAction=createDoNothingErrorAction())}data.type===ErrorTypes.KEY_SYSTEM_ERROR&&this.keySystemError(data)}keySystemError(data){const levelIndex=this.getVariantLevelIndex(data.frag);data.levelRetry=!1,data.errorAction=this.getLevelSwitchAction(data,levelIndex)}getPlaylistRetryOrSwitchAction(data,levelIndex){const retryConfig=getRetryConfig(this.hls.config.playlistLoadPolicy,data),retryCount=this.playlistError++;if(shouldRetry(retryConfig,retryCount,isTimeoutError(data),data.response))return{action:NetworkErrorAction.RetryRequest,flags:ErrorActionFlags.None,retryConfig,retryCount};const errorAction=this.getLevelSwitchAction(data,levelIndex);return retryConfig&&(errorAction.retryConfig=retryConfig,errorAction.retryCount=retryCount),errorAction}getFragRetryOrSwitchAction(data){const hls=this.hls,variantLevelIndex=this.getVariantLevelIndex(data.frag),level=hls.levels[variantLevelIndex],{fragLoadPolicy,keyLoadPolicy}=hls.config,retryConfig=getRetryConfig(data.details.startsWith("key")?keyLoadPolicy:fragLoadPolicy,data),fragmentErrors=hls.levels.reduce(((acc,level)=>acc+level.fragmentError),0);if(level){data.details!==ErrorDetails.FRAG_GAP&&level.fragmentError++;if(shouldRetry(retryConfig,fragmentErrors,isTimeoutError(data),data.response))return{action:NetworkErrorAction.RetryRequest,flags:ErrorActionFlags.None,retryConfig,retryCount:fragmentErrors}}const errorAction=this.getLevelSwitchAction(data,variantLevelIndex);return retryConfig&&(errorAction.retryConfig=retryConfig,errorAction.retryCount=fragmentErrors),errorAction}getLevelSwitchAction(data,levelIndex){const hls=this.hls;null==levelIndex&&(levelIndex=hls.loadLevel);const level=this.hls.levels[levelIndex];if(level){var _data$frag2,_data$context2;const errorDetails=data.details;level.loadError++,errorDetails===ErrorDetails.BUFFER_APPEND_ERROR&&level.fragmentError++;let nextLevel=-1;const{levels,loadLevel,minAutoLevel,maxAutoLevel}=hls;hls.autoLevelEnabled||hls.config.preserveManualLevelOnError||(hls.loadLevel=-1);const fragErrorType=null==(_data$frag2=data.frag)?void 0:_data$frag2.type,findAudioCodecAlternate=(fragErrorType===PlaylistLevelType.AUDIO&&errorDetails===ErrorDetails.FRAG_PARSING_ERROR||"audio"===data.sourceBufferName&&(errorDetails===ErrorDetails.BUFFER_ADD_CODEC_ERROR||errorDetails===ErrorDetails.BUFFER_APPEND_ERROR))&&levels.some((({audioCodec})=>level.audioCodec!==audioCodec)),findVideoCodecAlternate="video"===data.sourceBufferName&&(errorDetails===ErrorDetails.BUFFER_ADD_CODEC_ERROR||errorDetails===ErrorDetails.BUFFER_APPEND_ERROR)&&levels.some((({codecSet,audioCodec})=>level.codecSet!==codecSet&&level.audioCodec===audioCodec)),{type:playlistErrorType,groupId:playlistErrorGroupId}=null!=(_data$context2=data.context)?_data$context2:{};for(let i=levels.length;i--;){const candidate=(i+loadLevel)%levels.length;if(candidate!==loadLevel&&candidate>=minAutoLevel&&candidate<=maxAutoLevel&&0===levels[candidate].loadError){var _level$audioGroups,_level$subtitleGroups;const levelCandidate=levels[candidate];if(errorDetails===ErrorDetails.FRAG_GAP&&fragErrorType===PlaylistLevelType.MAIN&&data.frag){const levelDetails=levels[candidate].details;if(levelDetails){const fragCandidate=findFragmentByPTS(data.frag,levelDetails.fragments,data.frag.start);if(null!=fragCandidate&&fragCandidate.gap)continue}}else{if(playlistErrorType===PlaylistContextType_AUDIO_TRACK&&levelCandidate.hasAudioGroup(playlistErrorGroupId)||playlistErrorType===PlaylistContextType_SUBTITLE_TRACK&&levelCandidate.hasSubtitleGroup(playlistErrorGroupId))continue;if(fragErrorType===PlaylistLevelType.AUDIO&&null!=(_level$audioGroups=level.audioGroups)&&_level$audioGroups.some((groupId=>levelCandidate.hasAudioGroup(groupId)))||fragErrorType===PlaylistLevelType.SUBTITLE&&null!=(_level$subtitleGroups=level.subtitleGroups)&&_level$subtitleGroups.some((groupId=>levelCandidate.hasSubtitleGroup(groupId)))||findAudioCodecAlternate&&level.audioCodec===levelCandidate.audioCodec||findVideoCodecAlternate&&level.codecSet===levelCandidate.codecSet||!findAudioCodecAlternate&&level.codecSet!==levelCandidate.codecSet)continue}nextLevel=candidate;break}}if(nextLevel>-1&&hls.loadLevel!==nextLevel)return data.levelRetry=!0,this.playlistError=0,{action:NetworkErrorAction.SendAlternateToPenaltyBox,flags:ErrorActionFlags.None,nextAutoLevel:nextLevel}}return{action:NetworkErrorAction.SendAlternateToPenaltyBox,flags:ErrorActionFlags.MoveAllAlternatesMatchingHost}}onErrorOut(event,data){var _data$errorAction;switch(null==(_data$errorAction=data.errorAction)?void 0:_data$errorAction.action){case NetworkErrorAction.DoNothing:break;case NetworkErrorAction.SendAlternateToPenaltyBox:this.sendAlternateToPenaltyBox(data),data.errorAction.resolved||data.details===ErrorDetails.FRAG_GAP?/MediaSource readyState: ended/.test(data.error.message)&&(this.warn(`MediaSource ended after "${data.sourceBufferName}" sourceBuffer append error. Attempting to recover from media error.`),this.hls.recoverMediaError()):data.fatal=!0;case NetworkErrorAction.RetryRequest:}data.fatal&&this.hls.stopLoad()}sendAlternateToPenaltyBox(data){const hls=this.hls,errorAction=data.errorAction;if(!errorAction)return;const{flags,hdcpLevel,nextAutoLevel}=errorAction;switch(flags){case ErrorActionFlags.None:this.switchLevel(data,nextAutoLevel);break;case ErrorActionFlags.MoveAllAlternatesMatchingHDCP:hdcpLevel&&(hls.maxHdcpLevel=HdcpLevels[HdcpLevels.indexOf(hdcpLevel)-1],errorAction.resolved=!0),this.warn(`Restricting playback to HDCP-LEVEL of "${hls.maxHdcpLevel}" or lower`)}errorAction.resolved||this.switchLevel(data,nextAutoLevel)}switchLevel(data,levelIndex){if(void 0!==levelIndex&&data.errorAction&&(this.warn(`switching to level ${levelIndex} after ${data.details}`),this.hls.nextAutoLevel=levelIndex,data.errorAction.resolved=!0,this.hls.nextLoadLevel=this.hls.nextAutoLevel,data.details===ErrorDetails.BUFFER_ADD_CODEC_ERROR&&data.mimeType&&"audiovideo"!==data.sourceBufferName)){const codec=getCodecsForMimeType(data.mimeType),levels=this.hls.levels;for(let i=levels.length;i--;)levels[i][`${data.sourceBufferName}Codec`]===codec&&this.hls.removeLevel(i)}}}function createDoNothingErrorAction(resolved){const errorAction={action:NetworkErrorAction.DoNothing,flags:ErrorActionFlags.None};return resolved&&(errorAction.resolved=!0),errorAction}var FragmentState_NOT_LOADED="NOT_LOADED",FragmentState_APPENDING="APPENDING",FragmentState_PARTIAL="PARTIAL",FragmentState_OK="OK";class FragmentTracker{constructor(hls){this.activePartLists=Object.create(null),this.endListFragments=Object.create(null),this.fragments=Object.create(null),this.timeRanges=Object.create(null),this.bufferPadding=.2,this.hls=void 0,this.hasGaps=!1,this.hls=hls,this._registerListeners()}_registerListeners(){const{hls}=this;hls&&(hls.on(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.on(Events.BUFFER_APPENDED,this.onBufferAppended,this),hls.on(Events.FRAG_BUFFERED,this.onFragBuffered,this),hls.on(Events.FRAG_LOADED,this.onFragLoaded,this))}_unregisterListeners(){const{hls}=this;hls&&(hls.off(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.off(Events.BUFFER_APPENDED,this.onBufferAppended,this),hls.off(Events.FRAG_BUFFERED,this.onFragBuffered,this),hls.off(Events.FRAG_LOADED,this.onFragLoaded,this))}destroy(){this._unregisterListeners(),this.hls=this.fragments=this.activePartLists=this.endListFragments=this.timeRanges=null}getAppendedFrag(position,levelType){const activeParts=this.activePartLists[levelType];if(activeParts)for(let i=activeParts.length;i--;){const activePart=activeParts[i];if(!activePart)break;if(activePart.start<=position&&position<=activePart.end&&activePart.loaded)return activePart}return this.getBufferedFrag(position,levelType)}getBufferedFrag(position,levelType){return this.getFragAtPos(position,levelType,!0)}getFragAtPos(position,levelType,buffered){const{fragments}=this,keys=Object.keys(fragments);for(let i=keys.length;i--;){const fragmentEntity=fragments[keys[i]];if((null==fragmentEntity?void 0:fragmentEntity.body.type)===levelType&&(!buffered||fragmentEntity.buffered)){const frag=fragmentEntity.body;if(frag.start<=position&&position<=frag.end)return frag}}return null}detectEvictedFragments(elementaryStream,timeRange,playlistType,appendedPart,removeAppending){this.timeRanges&&(this.timeRanges[elementaryStream]=timeRange);const appendedPartSn=(null==appendedPart?void 0:appendedPart.fragment.sn)||-1;Object.keys(this.fragments).forEach((key=>{const fragmentEntity=this.fragments[key];if(!fragmentEntity)return;if(appendedPartSn>=fragmentEntity.body.sn)return;if(!fragmentEntity.buffered&&(!fragmentEntity.loaded||removeAppending))return void(fragmentEntity.body.type===playlistType&&this.removeFragment(fragmentEntity.body));const esData=fragmentEntity.range[elementaryStream];esData&&(0!==esData.time.length?esData.time.some((time=>{const isNotBuffered=!this.isTimeBuffered(time.startPTS,time.endPTS,timeRange);return isNotBuffered&&this.removeFragment(fragmentEntity.body),isNotBuffered})):this.removeFragment(fragmentEntity.body))}))}detectPartialFragments(data){const timeRanges=this.timeRanges;if(!timeRanges||"initSegment"===data.frag.sn)return;const frag=data.frag,fragKey=getFragmentKey(frag),fragmentEntity=this.fragments[fragKey];if(!fragmentEntity||fragmentEntity.buffered&&frag.gap)return;const isFragHint=!frag.relurl;if(Object.keys(timeRanges).forEach((elementaryStream=>{const streamInfo=frag.elementaryStreams[elementaryStream];if(!streamInfo)return;const timeRange=timeRanges[elementaryStream],partial=isFragHint||!0===streamInfo.partial;fragmentEntity.range[elementaryStream]=this.getBufferedTimes(frag,data.part,partial,timeRange)})),fragmentEntity.loaded=null,Object.keys(fragmentEntity.range).length){fragmentEntity.buffered=!0;(fragmentEntity.body.endList=frag.endList||fragmentEntity.body.endList)&&(this.endListFragments[fragmentEntity.body.type]=fragmentEntity),isPartial(fragmentEntity)||this.removeParts(frag.sn-1,frag.type)}else this.removeFragment(fragmentEntity.body)}removeParts(snToKeep,levelType){const activeParts=this.activePartLists[levelType];activeParts&&(this.activePartLists[levelType]=filterParts(activeParts,(part=>part.fragment.sn>=snToKeep)))}fragBuffered(frag,force){const fragKey=getFragmentKey(frag);let fragmentEntity=this.fragments[fragKey];!fragmentEntity&&force&&(fragmentEntity=this.fragments[fragKey]={body:frag,appendedPTS:null,loaded:null,buffered:!1,range:Object.create(null)},frag.gap&&(this.hasGaps=!0)),fragmentEntity&&(fragmentEntity.loaded=null,fragmentEntity.buffered=!0)}getBufferedTimes(fragment,part,partial,timeRange){const buffered={time:[],partial},startPTS=fragment.start,endPTS=fragment.end,minEndPTS=fragment.minEndPTS||endPTS,maxStartPTS=fragment.maxStartPTS||startPTS;for(let i=0;i<timeRange.length;i++){const startTime=timeRange.start(i)-this.bufferPadding,endTime=timeRange.end(i)+this.bufferPadding;if(maxStartPTS>=startTime&&minEndPTS<=endTime){buffered.time.push({startPTS:Math.max(startPTS,timeRange.start(i)),endPTS:Math.min(endPTS,timeRange.end(i))});break}if(startPTS<endTime&&endPTS>startTime){const start=Math.max(startPTS,timeRange.start(i)),end=Math.min(endPTS,timeRange.end(i));end>start&&(buffered.partial=!0,buffered.time.push({startPTS:start,endPTS:end}))}else if(endPTS<=startTime)break}return buffered}getPartialFragment(time){let timePadding,startTime,endTime,bestFragment=null,bestOverlap=0;const{bufferPadding,fragments}=this;return Object.keys(fragments).forEach((key=>{const fragmentEntity=fragments[key];fragmentEntity&&isPartial(fragmentEntity)&&(startTime=fragmentEntity.body.start-bufferPadding,endTime=fragmentEntity.body.end+bufferPadding,time>=startTime&&time<=endTime&&(timePadding=Math.min(time-startTime,endTime-time),bestOverlap<=timePadding&&(bestFragment=fragmentEntity.body,bestOverlap=timePadding)))})),bestFragment}isEndListAppended(type){const lastFragmentEntity=this.endListFragments[type];return void 0!==lastFragmentEntity&&(lastFragmentEntity.buffered||isPartial(lastFragmentEntity))}getState(fragment){const fragKey=getFragmentKey(fragment),fragmentEntity=this.fragments[fragKey];return fragmentEntity?fragmentEntity.buffered?isPartial(fragmentEntity)?FragmentState_PARTIAL:FragmentState_OK:FragmentState_APPENDING:FragmentState_NOT_LOADED}isTimeBuffered(startPTS,endPTS,timeRange){let startTime,endTime;for(let i=0;i<timeRange.length;i++){if(startTime=timeRange.start(i)-this.bufferPadding,endTime=timeRange.end(i)+this.bufferPadding,startPTS>=startTime&&endPTS<=endTime)return!0;if(endPTS<=startTime)return!1}return!1}onManifestLoading(){this.removeAllFragments()}onFragLoaded(event,data){if("initSegment"===data.frag.sn||data.frag.bitrateTest)return;const frag=data.frag,loaded=data.part?null:data,fragKey=getFragmentKey(frag);this.fragments[fragKey]={body:frag,appendedPTS:null,loaded,buffered:!1,range:Object.create(null)}}onBufferAppended(event,data){const{frag,part,timeRanges,type}=data;if("initSegment"===frag.sn)return;const playlistType=frag.type;if(part){let activeParts=this.activePartLists[playlistType];activeParts||(this.activePartLists[playlistType]=activeParts=[]),activeParts.push(part)}this.timeRanges=timeRanges;const timeRange=timeRanges[type];this.detectEvictedFragments(type,timeRange,playlistType,part)}onFragBuffered(event,data){this.detectPartialFragments(data)}hasFragment(fragment){const fragKey=getFragmentKey(fragment);return!!this.fragments[fragKey]}hasFragments(type){const{fragments}=this,keys=Object.keys(fragments);if(!type)return keys.length>0;for(let i=keys.length;i--;){const fragmentEntity=fragments[keys[i]];if((null==fragmentEntity?void 0:fragmentEntity.body.type)===type)return!0}return!1}hasParts(type){var _this$activePartLists;return!(null==(_this$activePartLists=this.activePartLists[type])||!_this$activePartLists.length)}removeFragmentsInRange(start,end,playlistType,withGapOnly,unbufferedOnly){withGapOnly&&!this.hasGaps||Object.keys(this.fragments).forEach((key=>{const fragmentEntity=this.fragments[key];if(!fragmentEntity)return;const frag=fragmentEntity.body;frag.type!==playlistType||withGapOnly&&!frag.gap||frag.start<end&&frag.end>start&&(fragmentEntity.buffered||unbufferedOnly)&&this.removeFragment(frag)}))}removeFragment(fragment){const fragKey=getFragmentKey(fragment);fragment.clearElementaryStreamInfo();const activeParts=this.activePartLists[fragment.type];if(activeParts){const snToRemove=fragment.sn;this.activePartLists[fragment.type]=filterParts(activeParts,(part=>part.fragment.sn!==snToRemove))}delete this.fragments[fragKey],fragment.endList&&delete this.endListFragments[fragment.type]}removeAllFragments(){var _this$hls;this.fragments=Object.create(null),this.endListFragments=Object.create(null),this.activePartLists=Object.create(null),this.hasGaps=!1;const partlist=null==(_this$hls=this.hls)||null==(_this$hls=_this$hls.latestLevelDetails)?void 0:_this$hls.partList;partlist&&partlist.forEach((part=>part.clearElementaryStreamInfo()))}}function isPartial(fragmentEntity){var _fragmentEntity$range,_fragmentEntity$range2,_fragmentEntity$range3;return fragmentEntity.buffered&&!!(fragmentEntity.body.gap||null!=(_fragmentEntity$range=fragmentEntity.range.video)&&_fragmentEntity$range.partial||null!=(_fragmentEntity$range2=fragmentEntity.range.audio)&&_fragmentEntity$range2.partial||null!=(_fragmentEntity$range3=fragmentEntity.range.audiovideo)&&_fragmentEntity$range3.partial)}function getFragmentKey(fragment){return`${fragment.type}_${fragment.level}_${fragment.sn}`}function filterParts(partList,predicate){return partList.filter((part=>{const keep=predicate(part);return keep||part.clearElementaryStreamInfo(),keep}))}var DecrypterAesMode_cbc=0,DecrypterAesMode_ctr=1;class AESCrypto{constructor(subtle,iv,aesMode){this.subtle=void 0,this.aesIV=void 0,this.aesMode=void 0,this.subtle=subtle,this.aesIV=iv,this.aesMode=aesMode}decrypt(data,key){switch(this.aesMode){case DecrypterAesMode_cbc:return this.subtle.decrypt({name:"AES-CBC",iv:this.aesIV},key,data);case DecrypterAesMode_ctr:return this.subtle.decrypt({name:"AES-CTR",counter:this.aesIV,length:64},key,data);default:throw new Error(`[AESCrypto] invalid aes mode ${this.aesMode}`)}}}class AESDecryptor{constructor(){this.rcon=[0,1,2,4,8,16,32,64,128,27,54],this.subMix=[new Uint32Array(256),new Uint32Array(256),new Uint32Array(256),new Uint32Array(256)],this.invSubMix=[new Uint32Array(256),new Uint32Array(256),new Uint32Array(256),new Uint32Array(256)],this.sBox=new Uint32Array(256),this.invSBox=new Uint32Array(256),this.key=new Uint32Array(0),this.ksRows=0,this.keySize=0,this.keySchedule=void 0,this.invKeySchedule=void 0,this.initTable()}uint8ArrayToUint32Array_(arrayBuffer){const view=new DataView(arrayBuffer),newArray=new Uint32Array(4);for(let i=0;i<4;i++)newArray[i]=view.getUint32(4*i);return newArray}initTable(){const sBox=this.sBox,invSBox=this.invSBox,subMix=this.subMix,subMix0=subMix[0],subMix1=subMix[1],subMix2=subMix[2],subMix3=subMix[3],invSubMix=this.invSubMix,invSubMix0=invSubMix[0],invSubMix1=invSubMix[1],invSubMix2=invSubMix[2],invSubMix3=invSubMix[3],d=new Uint32Array(256);let x=0,xi=0,i=0;for(i=0;i<256;i++)d[i]=i<128?i<<1:i<<1^283;for(i=0;i<256;i++){let sx=xi^xi<<1^xi<<2^xi<<3^xi<<4;sx=sx>>>8^255&sx^99,sBox[x]=sx,invSBox[sx]=x;const x2=d[x],x4=d[x2],x8=d[x4];let t=257*d[sx]^16843008*sx;subMix0[x]=t<<24|t>>>8,subMix1[x]=t<<16|t>>>16,subMix2[x]=t<<8|t>>>24,subMix3[x]=t,t=16843009*x8^65537*x4^257*x2^16843008*x,invSubMix0[sx]=t<<24|t>>>8,invSubMix1[sx]=t<<16|t>>>16,invSubMix2[sx]=t<<8|t>>>24,invSubMix3[sx]=t,x?(x=x2^d[d[d[x8^x2]]],xi^=d[d[xi]]):x=xi=1}}expandKey(keyBuffer){const key=this.uint8ArrayToUint32Array_(keyBuffer);let sameKey=!0,offset=0;for(;offset<key.length&&sameKey;)sameKey=key[offset]===this.key[offset],offset++;if(sameKey)return;this.key=key;const keySize=this.keySize=key.length;if(4!==keySize&&6!==keySize&&8!==keySize)throw new Error("Invalid aes key size="+keySize);const ksRows=this.ksRows=4*(keySize+6+1);let ksRow,invKsRow;const keySchedule=this.keySchedule=new Uint32Array(ksRows),invKeySchedule=this.invKeySchedule=new Uint32Array(ksRows),sbox=this.sBox,rcon=this.rcon,invSubMix=this.invSubMix,invSubMix0=invSubMix[0],invSubMix1=invSubMix[1],invSubMix2=invSubMix[2],invSubMix3=invSubMix[3];let prev,t;for(ksRow=0;ksRow<ksRows;ksRow++)ksRow<keySize?prev=keySchedule[ksRow]=key[ksRow]:(t=prev,ksRow%keySize==0?(t=t<<8|t>>>24,t=sbox[t>>>24]<<24|sbox[t>>>16&255]<<16|sbox[t>>>8&255]<<8|sbox[255&t],t^=rcon[ksRow/keySize|0]<<24):keySize>6&&ksRow%keySize==4&&(t=sbox[t>>>24]<<24|sbox[t>>>16&255]<<16|sbox[t>>>8&255]<<8|sbox[255&t]),keySchedule[ksRow]=prev=(keySchedule[ksRow-keySize]^t)>>>0);for(invKsRow=0;invKsRow<ksRows;invKsRow++)ksRow=ksRows-invKsRow,t=3&invKsRow?keySchedule[ksRow]:keySchedule[ksRow-4],invKeySchedule[invKsRow]=invKsRow<4||ksRow<=4?t:invSubMix0[sbox[t>>>24]]^invSubMix1[sbox[t>>>16&255]]^invSubMix2[sbox[t>>>8&255]]^invSubMix3[sbox[255&t]],invKeySchedule[invKsRow]=invKeySchedule[invKsRow]>>>0}networkToHostOrderSwap(word){return word<<24|(65280&word)<<8|(16711680&word)>>8|word>>>24}decrypt(inputArrayBuffer,offset,aesIV){const nRounds=this.keySize+6,invKeySchedule=this.invKeySchedule,invSBOX=this.invSBox,invSubMix=this.invSubMix,invSubMix0=invSubMix[0],invSubMix1=invSubMix[1],invSubMix2=invSubMix[2],invSubMix3=invSubMix[3],initVector=this.uint8ArrayToUint32Array_(aesIV);let initVector0=initVector[0],initVector1=initVector[1],initVector2=initVector[2],initVector3=initVector[3];const inputInt32=new Int32Array(inputArrayBuffer),outputInt32=new Int32Array(inputInt32.length);let t0,t1,t2,t3,s0,s1,s2,s3,inputWords0,inputWords1,inputWords2,inputWords3,ksRow,i;const swapWord=this.networkToHostOrderSwap;for(;offset<inputInt32.length;){for(inputWords0=swapWord(inputInt32[offset]),inputWords1=swapWord(inputInt32[offset+1]),inputWords2=swapWord(inputInt32[offset+2]),inputWords3=swapWord(inputInt32[offset+3]),s0=inputWords0^invKeySchedule[0],s1=inputWords3^invKeySchedule[1],s2=inputWords2^invKeySchedule[2],s3=inputWords1^invKeySchedule[3],ksRow=4,i=1;i<nRounds;i++)t0=invSubMix0[s0>>>24]^invSubMix1[s1>>16&255]^invSubMix2[s2>>8&255]^invSubMix3[255&s3]^invKeySchedule[ksRow],t1=invSubMix0[s1>>>24]^invSubMix1[s2>>16&255]^invSubMix2[s3>>8&255]^invSubMix3[255&s0]^invKeySchedule[ksRow+1],t2=invSubMix0[s2>>>24]^invSubMix1[s3>>16&255]^invSubMix2[s0>>8&255]^invSubMix3[255&s1]^invKeySchedule[ksRow+2],t3=invSubMix0[s3>>>24]^invSubMix1[s0>>16&255]^invSubMix2[s1>>8&255]^invSubMix3[255&s2]^invKeySchedule[ksRow+3],s0=t0,s1=t1,s2=t2,s3=t3,ksRow+=4;t0=invSBOX[s0>>>24]<<24^invSBOX[s1>>16&255]<<16^invSBOX[s2>>8&255]<<8^invSBOX[255&s3]^invKeySchedule[ksRow],t1=invSBOX[s1>>>24]<<24^invSBOX[s2>>16&255]<<16^invSBOX[s3>>8&255]<<8^invSBOX[255&s0]^invKeySchedule[ksRow+1],t2=invSBOX[s2>>>24]<<24^invSBOX[s3>>16&255]<<16^invSBOX[s0>>8&255]<<8^invSBOX[255&s1]^invKeySchedule[ksRow+2],t3=invSBOX[s3>>>24]<<24^invSBOX[s0>>16&255]<<16^invSBOX[s1>>8&255]<<8^invSBOX[255&s2]^invKeySchedule[ksRow+3],outputInt32[offset]=swapWord(t0^initVector0),outputInt32[offset+1]=swapWord(t3^initVector1),outputInt32[offset+2]=swapWord(t2^initVector2),outputInt32[offset+3]=swapWord(t1^initVector3),initVector0=inputWords0,initVector1=inputWords1,initVector2=inputWords2,initVector3=inputWords3,offset+=4}return outputInt32.buffer}}class FastAESKey{constructor(subtle,key,aesMode){this.subtle=void 0,this.key=void 0,this.aesMode=void 0,this.subtle=subtle,this.key=key,this.aesMode=aesMode}expandKey(){const subtleAlgoName=function getSubtleAlgoName(aesMode){switch(aesMode){case DecrypterAesMode_cbc:return"AES-CBC";case DecrypterAesMode_ctr:return"AES-CTR";default:throw new Error(`[FastAESKey] invalid aes mode ${aesMode}`)}}(this.aesMode);return this.subtle.importKey("raw",this.key,{name:subtleAlgoName},!1,["encrypt","decrypt"])}}class Decrypter{constructor(config,{removePKCS7Padding=!0}={}){if(this.logEnabled=!0,this.removePKCS7Padding=void 0,this.subtle=null,this.softwareDecrypter=null,this.key=null,this.fastAesKey=null,this.remainderData=null,this.currentIV=null,this.currentResult=null,this.useSoftware=void 0,this.enableSoftwareAES=void 0,this.enableSoftwareAES=config.enableSoftwareAES,this.removePKCS7Padding=removePKCS7Padding,removePKCS7Padding)try{const browserCrypto=self.crypto;browserCrypto&&(this.subtle=browserCrypto.subtle||browserCrypto.webkitSubtle)}catch(e){}this.useSoftware=!this.subtle}destroy(){this.subtle=null,this.softwareDecrypter=null,this.key=null,this.fastAesKey=null,this.remainderData=null,this.currentIV=null,this.currentResult=null}isSync(){return this.useSoftware}flush(){const{currentResult,remainderData}=this;if(!currentResult||remainderData)return this.reset(),null;const data=new Uint8Array(currentResult);return this.reset(),this.removePKCS7Padding?function removePadding(array){const outputBytes=array.byteLength,paddingBytes=outputBytes&&new DataView(array.buffer).getUint8(outputBytes-1);return paddingBytes?array.slice(0,outputBytes-paddingBytes):array}(data):data}reset(){this.currentResult=null,this.currentIV=null,this.remainderData=null,this.softwareDecrypter&&(this.softwareDecrypter=null)}decrypt(data,key,iv,aesMode){return this.useSoftware?new Promise(((resolve,reject)=>{const dataView=ArrayBuffer.isView(data)?data:new Uint8Array(data);this.softwareDecrypt(dataView,key,iv,aesMode);const decryptResult=this.flush();decryptResult?resolve(decryptResult.buffer):reject(new Error("[softwareDecrypt] Failed to decrypt data"))})):this.webCryptoDecrypt(new Uint8Array(data),key,iv,aesMode)}softwareDecrypt(data,key,iv,aesMode){const{currentIV,currentResult,remainderData}=this;if(aesMode!==DecrypterAesMode_cbc||16!==key.byteLength)return logger.warn("SoftwareDecrypt: can only handle AES-128-CBC"),null;this.logOnce("JS AES decrypt"),remainderData&&(data=appendUint8Array(remainderData,data),this.remainderData=null);const currentChunk=this.getValidChunk(data);if(!currentChunk.length)return null;currentIV&&(iv=currentIV);let softwareDecrypter=this.softwareDecrypter;softwareDecrypter||(softwareDecrypter=this.softwareDecrypter=new AESDecryptor),softwareDecrypter.expandKey(key);const result=currentResult;return this.currentResult=softwareDecrypter.decrypt(currentChunk.buffer,0,iv),this.currentIV=currentChunk.slice(-16).buffer,result||null}webCryptoDecrypt(data,key,iv,aesMode){if(this.key!==key||!this.fastAesKey){if(!this.subtle)return Promise.resolve(this.onWebCryptoError(data,key,iv,aesMode));this.key=key,this.fastAesKey=new FastAESKey(this.subtle,key,aesMode)}return this.fastAesKey.expandKey().then((aesKey=>{if(!this.subtle)return Promise.reject(new Error("web crypto not initialized"));this.logOnce("WebCrypto AES decrypt");return new AESCrypto(this.subtle,new Uint8Array(iv),aesMode).decrypt(data.buffer,aesKey)})).catch((err=>(logger.warn(`[decrypter]: WebCrypto Error, disable WebCrypto API, ${err.name}: ${err.message}`),this.onWebCryptoError(data,key,iv,aesMode))))}onWebCryptoError(data,key,iv,aesMode){const enableSoftwareAES=this.enableSoftwareAES;if(enableSoftwareAES){this.useSoftware=!0,this.logEnabled=!0,this.softwareDecrypt(data,key,iv,aesMode);const decryptResult=this.flush();if(decryptResult)return decryptResult.buffer}throw new Error("WebCrypto"+(enableSoftwareAES?" and softwareDecrypt":"")+": failed to decrypt data")}getValidChunk(data){let currentChunk=data;const splitPoint=data.length-data.length%16;return splitPoint!==data.length&&(currentChunk=data.slice(0,splitPoint),this.remainderData=data.slice(splitPoint)),currentChunk}logOnce(msg){this.logEnabled&&(logger.log(`[decrypter]: ${msg}`),this.logEnabled=!1)}}const MIN_CHUNK_SIZE=Math.pow(2,17);class FragmentLoader{constructor(config){this.config=void 0,this.loader=null,this.partLoadTimeout=-1,this.config=config}destroy(){this.loader&&(this.loader.destroy(),this.loader=null)}abort(){this.loader&&this.loader.abort()}load(frag,onProgress){const url=frag.url;if(!url)return Promise.reject(new LoadError({type:ErrorTypes.NETWORK_ERROR,details:ErrorDetails.FRAG_LOAD_ERROR,fatal:!1,frag,error:new Error("Fragment does not have a "+(url?"part list":"url")),networkDetails:null}));this.abort();const config=this.config,FragmentILoader=config.fLoader,DefaultILoader=config.loader;return new Promise(((resolve,reject)=>{if(this.loader&&this.loader.destroy(),frag.gap){if(frag.tagList.some((tags=>"GAP"===tags[0])))return void reject(createGapLoadError(frag));frag.gap=!1}const loader=this.loader=FragmentILoader?new FragmentILoader(config):new DefaultILoader(config),loaderContext=createLoaderContext(frag);frag.loader=loader;const loadPolicy=getLoaderConfigWithoutReties(config.fragLoadPolicy.default),loaderConfig={loadPolicy,timeout:loadPolicy.maxLoadTimeMs,maxRetry:0,retryDelay:0,maxRetryDelay:0,highWaterMark:"initSegment"===frag.sn?1/0:MIN_CHUNK_SIZE};frag.stats=loader.stats;const callbacks={onSuccess:(response,stats,context,networkDetails)=>{this.resetLoader(frag,loader);let payload=response.data;context.resetIV&&frag.decryptdata&&(frag.decryptdata.iv=new Uint8Array(payload.slice(0,16)),payload=payload.slice(16)),resolve({frag,part:null,payload,networkDetails})},onError:(response,context,networkDetails,stats)=>{this.resetLoader(frag,loader),reject(new LoadError({type:ErrorTypes.NETWORK_ERROR,details:ErrorDetails.FRAG_LOAD_ERROR,fatal:!1,frag,response:_objectSpread2({url,data:void 0},response),error:new Error(`HTTP Error ${response.code} ${response.text}`),networkDetails,stats}))},onAbort:(stats,context,networkDetails)=>{this.resetLoader(frag,loader),reject(new LoadError({type:ErrorTypes.NETWORK_ERROR,details:ErrorDetails.INTERNAL_ABORTED,fatal:!1,frag,error:new Error("Aborted"),networkDetails,stats}))},onTimeout:(stats,context,networkDetails)=>{this.resetLoader(frag,loader),reject(new LoadError({type:ErrorTypes.NETWORK_ERROR,details:ErrorDetails.FRAG_LOAD_TIMEOUT,fatal:!1,frag,error:new Error(`Timeout after ${loaderConfig.timeout}ms`),networkDetails,stats}))}};onProgress&&(callbacks.onProgress=(stats,context,data,networkDetails)=>onProgress({frag,part:null,payload:data,networkDetails})),loader.load(loaderContext,loaderConfig,callbacks)}))}loadPart(frag,part,onProgress){this.abort();const config=this.config,FragmentILoader=config.fLoader,DefaultILoader=config.loader;return new Promise(((resolve,reject)=>{if(this.loader&&this.loader.destroy(),frag.gap||part.gap)return void reject(createGapLoadError(frag,part));const loader=this.loader=FragmentILoader?new FragmentILoader(config):new DefaultILoader(config),loaderContext=createLoaderContext(frag,part);frag.loader=loader;const loadPolicy=getLoaderConfigWithoutReties(config.fragLoadPolicy.default),loaderConfig={loadPolicy,timeout:loadPolicy.maxLoadTimeMs,maxRetry:0,retryDelay:0,maxRetryDelay:0,highWaterMark:MIN_CHUNK_SIZE};part.stats=loader.stats,loader.load(loaderContext,loaderConfig,{onSuccess:(response,stats,context,networkDetails)=>{this.resetLoader(frag,loader),this.updateStatsFromPart(frag,part);const partLoadedData={frag,part,payload:response.data,networkDetails};onProgress(partLoadedData),resolve(partLoadedData)},onError:(response,context,networkDetails,stats)=>{this.resetLoader(frag,loader),reject(new LoadError({type:ErrorTypes.NETWORK_ERROR,details:ErrorDetails.FRAG_LOAD_ERROR,fatal:!1,frag,part,response:_objectSpread2({url:loaderContext.url,data:void 0},response),error:new Error(`HTTP Error ${response.code} ${response.text}`),networkDetails,stats}))},onAbort:(stats,context,networkDetails)=>{frag.stats.aborted=part.stats.aborted,this.resetLoader(frag,loader),reject(new LoadError({type:ErrorTypes.NETWORK_ERROR,details:ErrorDetails.INTERNAL_ABORTED,fatal:!1,frag,part,error:new Error("Aborted"),networkDetails,stats}))},onTimeout:(stats,context,networkDetails)=>{this.resetLoader(frag,loader),reject(new LoadError({type:ErrorTypes.NETWORK_ERROR,details:ErrorDetails.FRAG_LOAD_TIMEOUT,fatal:!1,frag,part,error:new Error(`Timeout after ${loaderConfig.timeout}ms`),networkDetails,stats}))}})}))}updateStatsFromPart(frag,part){const fragStats=frag.stats,partStats=part.stats,partTotal=partStats.total;if(fragStats.loaded+=partStats.loaded,partTotal){const estTotalParts=Math.round(frag.duration/part.duration),estLoadedParts=Math.min(Math.round(fragStats.loaded/partTotal),estTotalParts),estRemainingBytes=(estTotalParts-estLoadedParts)*Math.round(fragStats.loaded/estLoadedParts);fragStats.total=fragStats.loaded+estRemainingBytes}else fragStats.total=Math.max(fragStats.loaded,fragStats.total);const fragLoading=fragStats.loading,partLoading=partStats.loading;fragLoading.start?fragLoading.first+=partLoading.first-partLoading.start:(fragLoading.start=partLoading.start,fragLoading.first=partLoading.first),fragLoading.end=partLoading.end}resetLoader(frag,loader){frag.loader=null,this.loader===loader&&(self.clearTimeout(this.partLoadTimeout),this.loader=null),loader.destroy()}}function createLoaderContext(frag,part=null){const segment=part||frag,loaderContext={frag,part,responseType:"arraybuffer",url:segment.url,headers:{},rangeStart:0,rangeEnd:0},start=segment.byteRangeStartOffset,end=segment.byteRangeEndOffset;if(isFiniteNumber(start)&&isFiniteNumber(end)){var _frag$decryptdata;let byteRangeStart=start,byteRangeEnd=end;if("initSegment"===frag.sn&&function isMethodFullSegmentAesCbc(method){return"AES-128"===method||"AES-256"===method}(null==(_frag$decryptdata=frag.decryptdata)?void 0:_frag$decryptdata.method)){const fragmentLen=end-start;fragmentLen%16&&(byteRangeEnd=end+(16-fragmentLen%16)),0!==start&&(loaderContext.resetIV=!0,byteRangeStart=start-16)}loaderContext.rangeStart=byteRangeStart,loaderContext.rangeEnd=byteRangeEnd}return loaderContext}function createGapLoadError(frag,part){const error=new Error(`GAP ${frag.gap?"tag":"attribute"} found`),errorData={type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.FRAG_GAP,fatal:!1,frag,error,networkDetails:null};return part&&(errorData.part=part),(part||frag).stats.aborted=!0,new LoadError(errorData)}class LoadError extends Error{constructor(data){super(data.error.message),this.data=void 0,this.data=data}}class TaskLoop extends Logger{constructor(label,logger){super(label,logger),this._boundTick=void 0,this._tickTimer=null,this._tickInterval=null,this._tickCallCount=0,this._boundTick=this.tick.bind(this)}destroy(){this.onHandlerDestroying(),this.onHandlerDestroyed()}onHandlerDestroying(){this.clearNextTick(),this.clearInterval()}onHandlerDestroyed(){}hasInterval(){return!!this._tickInterval}hasNextTick(){return!!this._tickTimer}setInterval(millis){return!this._tickInterval&&(this._tickCallCount=0,this._tickInterval=self.setInterval(this._boundTick,millis),!0)}clearInterval(){return!!this._tickInterval&&(self.clearInterval(this._tickInterval),this._tickInterval=null,!0)}clearNextTick(){return!!this._tickTimer&&(self.clearTimeout(this._tickTimer),this._tickTimer=null,!0)}tick(){this._tickCallCount++,1===this._tickCallCount&&(this.doTick(),this._tickCallCount>1&&this.tickImmediate(),this._tickCallCount=0)}tickImmediate(){this.clearNextTick(),this._tickTimer=self.setTimeout(this._boundTick,0)}doTick(){}}class ChunkMetadata{constructor(level,sn,id,size=0,part=-1,partial=!1){this.level=void 0,this.sn=void 0,this.part=void 0,this.id=void 0,this.size=void 0,this.partial=void 0,this.transmuxing={start:0,executeStart:0,executeEnd:0,end:0},this.buffering={audio:{start:0,executeStart:0,executeEnd:0,end:0},video:{start:0,executeStart:0,executeEnd:0,end:0},audiovideo:{start:0,executeStart:0,executeEnd:0,end:0}},this.level=level,this.sn=sn,this.id=id,this.size=size,this.part=part,this.partial=partial}}const noopBuffered={length:0,start:()=>0,end:()=>0};class BufferHelper{static isBuffered(media,position){if(media){const buffered=BufferHelper.getBuffered(media);for(let i=buffered.length;i--;)if(position>=buffered.start(i)&&position<=buffered.end(i))return!0}return!1}static bufferedRanges(media){if(media){const timeRanges=BufferHelper.getBuffered(media);return BufferHelper.timeRangesToArray(timeRanges)}return[]}static timeRangesToArray(timeRanges){const buffered=[];for(let i=0;i<timeRanges.length;i++)buffered.push({start:timeRanges.start(i),end:timeRanges.end(i)});return buffered}static bufferInfo(media,pos,maxHoleDuration){if(media){const buffered=BufferHelper.bufferedRanges(media);if(buffered.length)return BufferHelper.bufferedInfo(buffered,pos,maxHoleDuration)}return{len:0,start:pos,end:pos,bufferedIndex:-1}}static bufferedInfo(buffered,pos,maxHoleDuration){pos=Math.max(0,pos),buffered.length>1&&buffered.sort(((a,b)=>a.start-b.start||b.end-a.end));let bufferedIndex=-1,buffered2=[];if(maxHoleDuration)for(let i=0;i<buffered.length;i++){pos>=buffered[i].start&&pos<=buffered[i].end&&(bufferedIndex=i);const buf2len=buffered2.length;if(buf2len){const buf2end=buffered2[buf2len-1].end;buffered[i].start-buf2end<maxHoleDuration?buffered[i].end>buf2end&&(buffered2[buf2len-1].end=buffered[i].end):buffered2.push(buffered[i])}else buffered2.push(buffered[i])}else buffered2=buffered;let nextStart,bufferLen=0,bufferStart=pos,bufferEnd=pos;for(let i=0;i<buffered2.length;i++){const start=buffered2[i].start,end=buffered2[i].end;if(-1===bufferedIndex&&pos>=start&&pos<=end&&(bufferedIndex=i),pos+maxHoleDuration>=start&&pos<end)bufferStart=start,bufferEnd=end,bufferLen=bufferEnd-pos;else if(pos+maxHoleDuration<start){nextStart=start;break}}return{len:bufferLen,start:bufferStart||0,end:bufferEnd||0,nextStart,buffered,bufferedIndex}}static getBuffered(media){try{return media.buffered||noopBuffered}catch(e){return logger.log("failed to get media.buffered",e),noopBuffered}}}const VARIABLE_REPLACEMENT_REGEX=/\{\$([a-zA-Z0-9-_]+)\}/g;function hasVariableReferences(str){return VARIABLE_REPLACEMENT_REGEX.test(str)}function substituteVariables(parsed,value){if(null!==parsed.variableList||parsed.hasVariableRefs){const variableList=parsed.variableList;return value.replace(VARIABLE_REPLACEMENT_REGEX,(variableReference=>{const variableName=variableReference.substring(2,variableReference.length-1),variableValue=null==variableList?void 0:variableList[variableName];return void 0===variableValue?(parsed.playlistParsingError||(parsed.playlistParsingError=new Error(`Missing preceding EXT-X-DEFINE tag for Variable Reference: "${variableName}"`)),variableReference):variableValue}))}return value}function addVariableDefinition(parsed,attr,parentUrl){let NAME,VALUE,variableList=parsed.variableList;if(variableList||(parsed.variableList=variableList={}),"QUERYPARAM"in attr){NAME=attr.QUERYPARAM;try{const searchParams=new self.URL(parentUrl).searchParams;if(!searchParams.has(NAME))throw new Error(`"${NAME}" does not match any query parameter in URI: "${parentUrl}"`);VALUE=searchParams.get(NAME)}catch(error){parsed.playlistParsingError||(parsed.playlistParsingError=new Error(`EXT-X-DEFINE QUERYPARAM: ${error.message}`))}}else NAME=attr.NAME,VALUE=attr.VALUE;NAME in variableList?parsed.playlistParsingError||(parsed.playlistParsingError=new Error(`EXT-X-DEFINE duplicate Variable Name declarations: "${NAME}"`)):variableList[NAME]=VALUE||""}function importVariableDefinition(parsed,attr,sourceVariableList){const IMPORT=attr.IMPORT;if(sourceVariableList&&IMPORT in sourceVariableList){let variableList=parsed.variableList;variableList||(parsed.variableList=variableList={}),variableList[IMPORT]=sourceVariableList[IMPORT]}else parsed.playlistParsingError||(parsed.playlistParsingError=new Error(`EXT-X-DEFINE IMPORT attribute not found in Multivariant Playlist: "${IMPORT}"`))}const DECIMAL_RESOLUTION_REGEX=/^(\d+)x(\d+)$/,ATTR_LIST_REGEX=/(.+?)=(".*?"|.*?)(?:,|$)/g;class AttrList{constructor(attrs,parsed){"string"==typeof attrs&&(attrs=AttrList.parseAttrList(attrs,parsed)),_extends(this,attrs)}get clientAttrs(){return Object.keys(this).filter((attr=>"X-"===attr.substring(0,2)))}decimalInteger(attrName){const intValue=parseInt(this[attrName],10);return intValue>Number.MAX_SAFE_INTEGER?1/0:intValue}hexadecimalInteger(attrName){if(this[attrName]){let stringValue=(this[attrName]||"0x").slice(2);stringValue=(1&stringValue.length?"0":"")+stringValue;const value=new Uint8Array(stringValue.length/2);for(let i=0;i<stringValue.length/2;i++)value[i]=parseInt(stringValue.slice(2*i,2*i+2),16);return value}return null}hexadecimalIntegerAsNumber(attrName){const intValue=parseInt(this[attrName],16);return intValue>Number.MAX_SAFE_INTEGER?1/0:intValue}decimalFloatingPoint(attrName){return parseFloat(this[attrName])}optionalFloat(attrName,defaultValue){const value=this[attrName];return value?parseFloat(value):defaultValue}enumeratedString(attrName){return this[attrName]}enumeratedStringList(attrName,dict){const attrValue=this[attrName];return(attrValue?attrValue.split(/[ ,]+/):[]).reduce(((result,identifier)=>(result[identifier.toLowerCase()]=!0,result)),dict)}bool(attrName){return"YES"===this[attrName]}decimalResolution(attrName){const res=DECIMAL_RESOLUTION_REGEX.exec(this[attrName]);if(null!==res)return{width:parseInt(res[1],10),height:parseInt(res[2],10)}}static parseAttrList(input,parsed){let match;const attrs={};for(ATTR_LIST_REGEX.lastIndex=0;null!==(match=ATTR_LIST_REGEX.exec(input));){const name=match[1].trim();let value=match[2];const quotedString=0===value.indexOf('"')&&value.lastIndexOf('"')===value.length-1;let hexadecimalSequence=!1;if(quotedString)value=value.slice(1,-1);else switch(name){case"IV":case"SCTE35-CMD":case"SCTE35-IN":case"SCTE35-OUT":hexadecimalSequence=!0}if(parsed&&(quotedString||hexadecimalSequence))value=substituteVariables(parsed,value);else if(!hexadecimalSequence&&!quotedString)switch(name){case"CLOSED-CAPTIONS":if("NONE"===value)break;case"ALLOWED-CPC":case"CLASS":case"ASSOC-LANGUAGE":case"AUDIO":case"BYTERANGE":case"CHANNELS":case"CHARACTERISTICS":case"CODECS":case"DATA-ID":case"END-DATE":case"GROUP-ID":case"ID":case"IMPORT":case"INSTREAM-ID":case"KEYFORMAT":case"KEYFORMATVERSIONS":case"LANGUAGE":case"NAME":case"PATHWAY-ID":case"QUERYPARAM":case"RECENTLY-REMOVED-DATERANGES":case"SERVER-URI":case"STABLE-RENDITION-ID":case"STABLE-VARIANT-ID":case"START-DATE":case"SUBTITLES":case"SUPPLEMENTAL-CODECS":case"URI":case"VALUE":case"VIDEO":case"X-ASSET-LIST":case"X-ASSET-URI":logger.warn(`${input}: attribute ${name} is missing quotes`)}attrs[name]=value}return attrs}}function isSCTE35Attribute(attrName){return"SCTE35-OUT"===attrName||"SCTE35-IN"===attrName||"SCTE35-CMD"===attrName}class DateRange{constructor(dateRangeAttr,dateRangeWithSameId,tagCount=0){var _dateRangeWithSameId$;if(this.attr=void 0,this.tagAnchor=void 0,this.tagOrder=void 0,this._startDate=void 0,this._endDate=void 0,this._dateAtEnd=void 0,this._cue=void 0,this._badValueForSameId=void 0,this.tagAnchor=(null==dateRangeWithSameId?void 0:dateRangeWithSameId.tagAnchor)||null,this.tagOrder=null!=(_dateRangeWithSameId$=null==dateRangeWithSameId?void 0:dateRangeWithSameId.tagOrder)?_dateRangeWithSameId$:tagCount,dateRangeWithSameId){const previousAttr=dateRangeWithSameId.attr;for(const key in previousAttr)if(Object.prototype.hasOwnProperty.call(dateRangeAttr,key)&&dateRangeAttr[key]!==previousAttr[key]){logger.warn(`DATERANGE tag attribute: "${key}" does not match for tags with ID: "${dateRangeAttr.ID}"`),this._badValueForSameId=key;break}dateRangeAttr=_extends(new AttrList({}),previousAttr,dateRangeAttr)}if(this.attr=dateRangeAttr,dateRangeWithSameId?(this._startDate=dateRangeWithSameId._startDate,this._cue=dateRangeWithSameId._cue,this._endDate=dateRangeWithSameId._endDate,this._dateAtEnd=dateRangeWithSameId._dateAtEnd):this._startDate=new Date(dateRangeAttr["START-DATE"]),"END-DATE"in this.attr){const endDate=(null==dateRangeWithSameId?void 0:dateRangeWithSameId.endDate)||new Date(this.attr["END-DATE"]);isFiniteNumber(endDate.getTime())&&(this._endDate=endDate)}}get id(){return this.attr.ID}get class(){return this.attr.CLASS}get cue(){const _cue=this._cue;return void 0===_cue?this._cue=this.attr.enumeratedStringList(this.attr.CUE?"CUE":"X-CUE",{pre:!1,post:!1,once:!1}):_cue}get startTime(){const{tagAnchor}=this;return null===tagAnchor||null===tagAnchor.programDateTime?(logger.warn(`Expected tagAnchor Fragment with PDT set for DateRange "${this.id}": ${tagAnchor}`),NaN):tagAnchor.start+(this.startDate.getTime()-tagAnchor.programDateTime)/1e3}get startDate(){return this._startDate}get endDate(){const dateAtEnd=this._endDate||this._dateAtEnd;if(dateAtEnd)return dateAtEnd;const duration=this.duration;return null!==duration?this._dateAtEnd=new Date(this._startDate.getTime()+1e3*duration):null}get duration(){if("DURATION"in this.attr){const duration=this.attr.decimalFloatingPoint("DURATION");if(isFiniteNumber(duration))return duration}else if(this._endDate)return(this._endDate.getTime()-this._startDate.getTime())/1e3;return null}get plannedDuration(){return"PLANNED-DURATION"in this.attr?this.attr.decimalFloatingPoint("PLANNED-DURATION"):null}get endOnNext(){return this.attr.bool("END-ON-NEXT")}get isInterstitial(){return"com.apple.hls.interstitial"===this.class}get isValid(){return!!this.id&&!this._badValueForSameId&&isFiniteNumber(this.startDate.getTime())&&(null===this.duration||this.duration>=0)&&(!this.endOnNext||!!this.class)&&(!this.attr.CUE||!this.cue.pre&&!this.cue.post||this.cue.pre!==this.cue.post)&&(!this.isInterstitial||"X-ASSET-URI"in this.attr||"X-ASSET-LIST"in this.attr)}}class LevelDetails{constructor(baseUrl){this.PTSKnown=!1,this.alignedSliding=!1,this.averagetargetduration=void 0,this.endCC=0,this.endSN=0,this.fragments=void 0,this.fragmentHint=void 0,this.partList=null,this.dateRanges=void 0,this.dateRangeTagCount=0,this.live=!0,this.requestScheduled=-1,this.ageHeader=0,this.advancedDateTime=void 0,this.updated=!0,this.advanced=!0,this.misses=0,this.startCC=0,this.startSN=0,this.startTimeOffset=null,this.targetduration=0,this.totalduration=0,this.type=null,this.url=void 0,this.m3u8="",this.version=null,this.canBlockReload=!1,this.canSkipUntil=0,this.canSkipDateRanges=!1,this.skippedSegments=0,this.recentlyRemovedDateranges=void 0,this.partHoldBack=0,this.holdBack=0,this.partTarget=0,this.preloadHint=void 0,this.renditionReports=void 0,this.tuneInGoal=0,this.deltaUpdateFailed=void 0,this.driftStartTime=0,this.driftEndTime=0,this.driftStart=0,this.driftEnd=0,this.encryptedFragments=void 0,this.playlistParsingError=null,this.variableList=null,this.hasVariableRefs=!1,this.appliedTimelineOffset=void 0,this.fragments=[],this.encryptedFragments=[],this.dateRanges={},this.url=baseUrl}reloaded(previous){if(!previous)return this.advanced=!0,void(this.updated=!0);const partSnDiff=this.lastPartSn-previous.lastPartSn,partIndexDiff=this.lastPartIndex-previous.lastPartIndex;this.updated=this.endSN!==previous.endSN||!!partIndexDiff||!!partSnDiff||!this.live,this.advanced=this.endSN>previous.endSN||partSnDiff>0||0===partSnDiff&&partIndexDiff>0,this.updated||this.advanced?this.misses=Math.floor(.6*previous.misses):this.misses=previous.misses+1}get hasProgramDateTime(){return!!this.fragments.length&&isFiniteNumber(this.fragments[this.fragments.length-1].programDateTime)}get levelTargetDuration(){return this.averagetargetduration||this.targetduration||10}get drift(){const runTime=this.driftEndTime-this.driftStartTime;if(runTime>0){return 1e3*(this.driftEnd-this.driftStart)/runTime}return 1}get edge(){return this.partEnd||this.fragmentEnd}get partEnd(){var _this$partList;return null!=(_this$partList=this.partList)&&_this$partList.length?this.partList[this.partList.length-1].end:this.fragmentEnd}get fragmentEnd(){return this.fragments.length?this.fragments[this.fragments.length-1].end:0}get fragmentStart(){return this.fragments.length?this.fragments[0].start:0}get age(){return this.advancedDateTime?Math.max(Date.now()-this.advancedDateTime,0)/1e3:0}get lastPartIndex(){var _this$partList2;return null!=(_this$partList2=this.partList)&&_this$partList2.length?this.partList[this.partList.length-1].index:-1}get maxPartIndex(){const partList=this.partList;if(partList){const lastIndex=this.lastPartIndex;if(-1!==lastIndex){for(let i=partList.length;i--;)if(partList[i].index>lastIndex)return partList[i].index;return lastIndex}}return 0}get lastPartSn(){var _this$partList3;return null!=(_this$partList3=this.partList)&&_this$partList3.length?this.partList[this.partList.length-1].fragment.sn:this.endSN}get expired(){if(this.live&&this.age&&this.misses<3){const playlistWindowDuration=this.partEnd-this.fragmentStart;return this.age>Math.max(playlistWindowDuration,this.totalduration)+this.levelTargetDuration}return!1}}function isFullSegmentEncryption(method){return"AES-128"===method||"AES-256"===method||"AES-256-CTR"===method}function getAesModeFromFullSegmentMethod(method){switch(method){case"AES-128":case"AES-256":return DecrypterAesMode_cbc;case"AES-256-CTR":return DecrypterAesMode_ctr;default:throw new Error(`invalid full segment method ${method}`)}}function base64Decode(base64encodedStr){return Uint8Array.from(atob(base64encodedStr),(c=>c.charCodeAt(0)))}function strToUtf8array(str){return Uint8Array.from(unescape(encodeURIComponent(str)),(c=>c.charCodeAt(0)))}function convertDataUriToArrayBytes(uri){const colonsplit=uri.split(":");let keydata=null;if("data"===colonsplit[0]&&2===colonsplit.length){const semicolonsplit=colonsplit[1].split(";"),commasplit=semicolonsplit[semicolonsplit.length-1].split(",");if(2===commasplit.length){const isbase64="base64"===commasplit[0],data=commasplit[1];isbase64?(semicolonsplit.splice(-1,1),keydata=base64Decode(data)):keydata=function getKeyIdBytes(str){const keyIdbytes=strToUtf8array(str).subarray(0,16),paddedkeyIdbytes=new Uint8Array(16);return paddedkeyIdbytes.set(keyIdbytes,16-keyIdbytes.length),paddedkeyIdbytes}(data)}}return keydata}const optionalSelf="undefined"!=typeof self?self:void 0;var KeySystems={CLEARKEY:"org.w3.clearkey",FAIRPLAY:"com.apple.fps",PLAYREADY:"com.microsoft.playready",WIDEVINE:"com.widevine.alpha"},KeySystemFormats={CLEARKEY:"org.w3.clearkey",FAIRPLAY:"com.apple.streamingkeydelivery",PLAYREADY:"com.microsoft.playready",WIDEVINE:"urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed"};function keySystemFormatToKeySystemDomain(format){switch(format){case KeySystemFormats.FAIRPLAY:return KeySystems.FAIRPLAY;case KeySystemFormats.PLAYREADY:return KeySystems.PLAYREADY;case KeySystemFormats.WIDEVINE:return KeySystems.WIDEVINE;case KeySystemFormats.CLEARKEY:return KeySystems.CLEARKEY}}function keySystemDomainToKeySystemFormat(keySystem){switch(keySystem){case KeySystems.FAIRPLAY:return KeySystemFormats.FAIRPLAY;case KeySystems.PLAYREADY:return KeySystemFormats.PLAYREADY;case KeySystems.WIDEVINE:return KeySystemFormats.WIDEVINE;case KeySystems.CLEARKEY:return KeySystemFormats.CLEARKEY}}function getKeySystemsForConfig(config){const{drmSystems,widevineLicenseUrl}=config,keySystemsToAttempt=drmSystems?[KeySystems.FAIRPLAY,KeySystems.WIDEVINE,KeySystems.PLAYREADY,KeySystems.CLEARKEY].filter((keySystem=>!!drmSystems[keySystem])):[];return!keySystemsToAttempt[KeySystems.WIDEVINE]&&widevineLicenseUrl&&keySystemsToAttempt.push(KeySystems.WIDEVINE),keySystemsToAttempt}const requestMediaKeySystemAccess=null!=optionalSelf&&null!=(_optionalSelf$navigat=optionalSelf.navigator)&&_optionalSelf$navigat.requestMediaKeySystemAccess?self.navigator.requestMediaKeySystemAccess.bind(self.navigator):null;var _optionalSelf$navigat;let keyUriToKeyIdMap={};class LevelKey{static clearKeyUriToKeyIdMap(){keyUriToKeyIdMap={}}constructor(method,uri,format,formatversions=[1],iv=null,keyId){this.uri=void 0,this.method=void 0,this.keyFormat=void 0,this.keyFormatVersions=void 0,this.encrypted=void 0,this.isCommonEncryption=void 0,this.iv=null,this.key=null,this.keyId=null,this.pssh=null,this.method=method,this.uri=uri,this.keyFormat=format,this.keyFormatVersions=formatversions,this.iv=iv,this.encrypted=!!method&&"NONE"!==method,this.isCommonEncryption=this.encrypted&&!isFullSegmentEncryption(method),null!=keyId&&keyId.startsWith("0x")&&(this.keyId=new Uint8Array(hexToArrayBuffer(keyId)))}matches(key){var _key$iv,_this$iv;return key.uri===this.uri&&key.method===this.method&&key.encrypted===this.encrypted&&key.keyFormat===this.keyFormat&&key.keyFormatVersions.join(",")===this.keyFormatVersions.join(",")&&(null==(_key$iv=key.iv)?void 0:_key$iv.join(","))===(null==(_this$iv=this.iv)?void 0:_this$iv.join(","))}isSupported(){if(this.method){if(isFullSegmentEncryption(this.method)||"NONE"===this.method)return!0;if("identity"===this.keyFormat)return"SAMPLE-AES"===this.method;switch(this.keyFormat){case KeySystemFormats.FAIRPLAY:case KeySystemFormats.WIDEVINE:case KeySystemFormats.PLAYREADY:case KeySystemFormats.CLEARKEY:return-1!==["ISO-23001-7","SAMPLE-AES","SAMPLE-AES-CENC","SAMPLE-AES-CTR"].indexOf(this.method)}}return!1}getDecryptData(sn){if(!this.encrypted||!this.uri)return null;if(isFullSegmentEncryption(this.method)&&this.uri&&!this.iv){"number"!=typeof sn&&(logger.warn(`missing IV for initialization segment with method="${this.method}" - compliance issue`),sn=0);const iv=function createInitializationVector(segmentNumber){const uint8View=new Uint8Array(16);for(let i=12;i<16;i++)uint8View[i]=segmentNumber>>8*(15-i)&255;return uint8View}(sn);return new LevelKey(this.method,this.uri,"identity",this.keyFormatVersions,iv)}if(this.pssh&&this.keyId)return this;const keyBytes=convertDataUriToArrayBytes(this.uri);if(keyBytes)switch(this.keyFormat){case KeySystemFormats.WIDEVINE:if(this.pssh=keyBytes,!this.keyId&&keyBytes.length>=22){const offset=keyBytes.length-22;this.keyId=keyBytes.subarray(offset,offset+16)}break;case KeySystemFormats.PLAYREADY:{const PlayReadyKeySystemUUID=new Uint8Array([154,4,240,121,152,64,66,134,171,146,230,91,224,136,95,149]);this.pssh=mp4pssh(PlayReadyKeySystemUUID,0,keyBytes),this.keyId=function parsePlayReadyWRM(keyBytes){const keyBytesUtf16=new Uint16Array(keyBytes.buffer,keyBytes.byteOffset,keyBytes.byteLength/2),keyByteStr=String.fromCharCode.apply(null,Array.from(keyBytesUtf16)),xmlKeyBytes=keyByteStr.substring(keyByteStr.indexOf("<"),keyByteStr.length),keyData=(new DOMParser).parseFromString(xmlKeyBytes,"text/xml").getElementsByTagName("KID")[0];if(keyData){const keyId=keyData.childNodes[0]?keyData.childNodes[0].nodeValue:keyData.getAttribute("VALUE");if(keyId){const keyIdArray=base64Decode(keyId).subarray(0,16);return function changeEndianness(keyId){const swap=function swap(array,from,to){const cur=array[from];array[from]=array[to],array[to]=cur};swap(keyId,0,3),swap(keyId,1,2),swap(keyId,4,5),swap(keyId,6,7)}(keyIdArray),keyIdArray}}return null}(keyBytes);break}default:{let keydata=keyBytes.subarray(0,16);if(16!==keydata.length){const padded=new Uint8Array(16);padded.set(keydata,16-keydata.length),keydata=padded}this.keyId=keydata;break}}if(!this.keyId||16!==this.keyId.byteLength){let keyId=keyUriToKeyIdMap[this.uri];if(!keyId){const val=Object.keys(keyUriToKeyIdMap).length%Number.MAX_SAFE_INTEGER;keyId=new Uint8Array(16);new DataView(keyId.buffer,12,4).setUint32(0,val),keyUriToKeyIdMap[this.uri]=keyId}this.keyId=keyId}return this}}const MASTER_PLAYLIST_REGEX=/#EXT-X-STREAM-INF:([^\r\n]*)(?:[\r\n](?:#[^\r\n]*)?)*([^\r\n]+)|#EXT-X-(SESSION-DATA|SESSION-KEY|DEFINE|CONTENT-STEERING|START):([^\r\n]*)[\r\n]+/g,MASTER_PLAYLIST_MEDIA_REGEX=/#EXT-X-MEDIA:(.*)/g,IS_MEDIA_PLAYLIST=/^#EXT(?:INF|-X-TARGETDURATION):/m,LEVEL_PLAYLIST_REGEX_FAST=new RegExp([/#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source,/(?!#) *(\S[^\r\n]*)/.source,/#.*/.source].join("|"),"g"),LEVEL_PLAYLIST_REGEX_SLOW=new RegExp([/#EXT-X-(PROGRAM-DATE-TIME|BYTERANGE|DATERANGE|DEFINE|KEY|MAP|PART|PART-INF|PLAYLIST-TYPE|PRELOAD-HINT|RENDITION-REPORT|SERVER-CONTROL|SKIP|START):(.+)/.source,/#EXT-X-(BITRATE|DISCONTINUITY-SEQUENCE|MEDIA-SEQUENCE|TARGETDURATION|VERSION): *(\d+)/.source,/#EXT-X-(DISCONTINUITY|ENDLIST|GAP|INDEPENDENT-SEGMENTS)/.source,/(#)([^:]*):(.*)/.source,/(#)(.*)(?:.*)\r?\n?/.source].join("|"));class M3U8Parser{static findGroup(groups,mediaGroupId){for(let i=0;i<groups.length;i++){const group=groups[i];if(group.id===mediaGroupId)return group}}static resolve(url,baseUrl){return urlToolkitExports.buildAbsoluteURL(baseUrl,url,{alwaysNormalize:!0})}static isMediaPlaylist(str){return IS_MEDIA_PLAYLIST.test(str)}static parseMasterPlaylist(string,baseurl){const parsed={contentSteering:null,levels:[],playlistParsingError:null,sessionData:null,sessionKeys:null,startTimeOffset:null,variableList:null,hasVariableRefs:hasVariableReferences(string)},levelsWithKnownCodecs=[];let result;for(MASTER_PLAYLIST_REGEX.lastIndex=0;null!=(result=MASTER_PLAYLIST_REGEX.exec(string));)if(result[1]){var _level$unknownCodecs;const attrs=new AttrList(result[1],parsed),uri=substituteVariables(parsed,result[2]),level={attrs,bitrate:attrs.decimalInteger("BANDWIDTH")||attrs.decimalInteger("AVERAGE-BANDWIDTH"),name:attrs.NAME,url:M3U8Parser.resolve(uri,baseurl)},resolution=attrs.decimalResolution("RESOLUTION");resolution&&(level.width=resolution.width,level.height=resolution.height),setCodecs(attrs.CODECS,level);const supplementalCodecs=attrs["SUPPLEMENTAL-CODECS"];supplementalCodecs&&(level.supplemental={},setCodecs(supplementalCodecs,level.supplemental)),null!=(_level$unknownCodecs=level.unknownCodecs)&&_level$unknownCodecs.length||levelsWithKnownCodecs.push(level),parsed.levels.push(level)}else if(result[3]){const tag=result[3],attributes=result[4];switch(tag){case"SESSION-DATA":{const sessionAttrs=new AttrList(attributes,parsed),dataId=sessionAttrs["DATA-ID"];dataId&&(null===parsed.sessionData&&(parsed.sessionData={}),parsed.sessionData[dataId]=sessionAttrs);break}case"SESSION-KEY":{const sessionKey=parseKey(attributes,baseurl,parsed);sessionKey.encrypted&&sessionKey.isSupported()?(null===parsed.sessionKeys&&(parsed.sessionKeys=[]),parsed.sessionKeys.push(sessionKey)):logger.warn(`[Keys] Ignoring invalid EXT-X-SESSION-KEY tag: "${attributes}"`);break}case"DEFINE":addVariableDefinition(parsed,new AttrList(attributes,parsed),baseurl);break;case"CONTENT-STEERING":{const contentSteeringAttributes=new AttrList(attributes,parsed);parsed.contentSteering={uri:M3U8Parser.resolve(contentSteeringAttributes["SERVER-URI"],baseurl),pathwayId:contentSteeringAttributes["PATHWAY-ID"]||"."};break}case"START":parsed.startTimeOffset=parseStartTimeOffset(attributes)}}const stripUnknownCodecLevels=levelsWithKnownCodecs.length>0&&levelsWithKnownCodecs.length<parsed.levels.length;return parsed.levels=stripUnknownCodecLevels?levelsWithKnownCodecs:parsed.levels,0===parsed.levels.length&&(parsed.playlistParsingError=new Error("no levels found in manifest")),parsed}static parseMasterPlaylistMedia(string,baseurl,parsed){let result;const results={},levels=parsed.levels,groupsByType={AUDIO:levels.map((level=>({id:level.attrs.AUDIO,audioCodec:level.audioCodec}))),SUBTITLES:levels.map((level=>({id:level.attrs.SUBTITLES,textCodec:level.textCodec}))),"CLOSED-CAPTIONS":[]};let id=0;for(MASTER_PLAYLIST_MEDIA_REGEX.lastIndex=0;null!==(result=MASTER_PLAYLIST_MEDIA_REGEX.exec(string));){const attrs=new AttrList(result[1],parsed),type=attrs.TYPE;if(type){const groups=groupsByType[type],medias=results[type]||[];results[type]=medias;const lang=attrs.LANGUAGE,assocLang=attrs["ASSOC-LANGUAGE"],channels=attrs.CHANNELS,characteristics=attrs.CHARACTERISTICS,instreamId=attrs["INSTREAM-ID"],media={attrs,bitrate:0,id:id++,groupId:attrs["GROUP-ID"]||"",name:attrs.NAME||lang||"",type,default:attrs.bool("DEFAULT"),autoselect:attrs.bool("AUTOSELECT"),forced:attrs.bool("FORCED"),lang,url:attrs.URI?M3U8Parser.resolve(attrs.URI,baseurl):""};if(assocLang&&(media.assocLang=assocLang),channels&&(media.channels=channels),characteristics&&(media.characteristics=characteristics),instreamId&&(media.instreamId=instreamId),null!=groups&&groups.length){const groupCodec=M3U8Parser.findGroup(groups,media.groupId)||groups[0];assignCodec(media,groupCodec,"audioCodec"),assignCodec(media,groupCodec,"textCodec")}medias.push(media)}}return results}static parseLevelPlaylist(string,baseurl,id,type,levelUrlId,multivariantVariableList){var _LEVEL_PLAYLIST_REGEX;const base={url:baseurl},level=new LevelDetails(baseurl),fragments=level.fragments,programDateTimes=[];let result,i,levelkeys,serverControlAttrs,currentInitSegment=null,currentSN=0,currentPart=0,totalduration=0,discontinuityCounter=0,currentBitrate=0,prevFrag=null,frag=new Fragment(type,base),firstPdtIndex=-1,createNextFrag=!1,nextByteRange=null;if(LEVEL_PLAYLIST_REGEX_FAST.lastIndex=0,level.m3u8=string,level.hasVariableRefs=hasVariableReferences(string),"#EXTM3U"!==(null==(_LEVEL_PLAYLIST_REGEX=LEVEL_PLAYLIST_REGEX_FAST.exec(string))?void 0:_LEVEL_PLAYLIST_REGEX[0]))return level.playlistParsingError=new Error("Missing format identifier #EXTM3U"),level;for(;null!==(result=LEVEL_PLAYLIST_REGEX_FAST.exec(string));){createNextFrag&&(createNextFrag=!1,frag=new Fragment(type,base),frag.playlistOffset=totalduration,frag.setStart(totalduration),frag.sn=currentSN,frag.cc=discontinuityCounter,currentBitrate&&(frag.bitrate=currentBitrate),frag.level=id,currentInitSegment&&(frag.initSegment=currentInitSegment,currentInitSegment.rawProgramDateTime&&(frag.rawProgramDateTime=currentInitSegment.rawProgramDateTime,currentInitSegment.rawProgramDateTime=null),nextByteRange&&(frag.setByteRange(nextByteRange),nextByteRange=null)));const duration=result[1];if(duration){frag.duration=parseFloat(duration);const title=(" "+result[2]).slice(1);frag.title=title||null,frag.tagList.push(title?["INF",duration,title]:["INF",duration])}else if(result[3]){if(isFiniteNumber(frag.duration)){frag.playlistOffset=totalduration,frag.setStart(totalduration),levelkeys&&setFragLevelKeys(frag,levelkeys,level),frag.sn=currentSN,frag.level=id,frag.cc=discontinuityCounter,fragments.push(frag);const uri=(" "+result[3]).slice(1);frag.relurl=substituteVariables(level,uri),assignProgramDateTime(frag,prevFrag,programDateTimes),prevFrag=frag,totalduration+=frag.duration,currentSN++,currentPart=0,createNextFrag=!0}}else{if(result=result[0].match(LEVEL_PLAYLIST_REGEX_SLOW),!result){logger.warn("No matches on slow regex match for level playlist!");continue}for(i=1;i<result.length&&void 0===result[i];i++);const tag=(" "+result[i]).slice(1),value1=(" "+result[i+1]).slice(1),value2=result[i+2]?(" "+result[i+2]).slice(1):null;switch(tag){case"BYTERANGE":prevFrag?frag.setByteRange(value1,prevFrag):frag.setByteRange(value1);break;case"PROGRAM-DATE-TIME":frag.rawProgramDateTime=value1,frag.tagList.push(["PROGRAM-DATE-TIME",value1]),-1===firstPdtIndex&&(firstPdtIndex=fragments.length);break;case"PLAYLIST-TYPE":level.type&&assignMultipleMediaPlaylistTagOccuranceError(level,tag,result),level.type=value1.toUpperCase();break;case"MEDIA-SEQUENCE":0!==level.startSN?assignMultipleMediaPlaylistTagOccuranceError(level,tag,result):fragments.length>0&&assignMustAppearBeforeSegmentsError(level,tag,result),currentSN=level.startSN=parseInt(value1);break;case"SKIP":{level.skippedSegments&&assignMultipleMediaPlaylistTagOccuranceError(level,tag,result);const skipAttrs=new AttrList(value1,level),skippedSegments=skipAttrs.decimalInteger("SKIPPED-SEGMENTS");if(isFiniteNumber(skippedSegments)){level.skippedSegments+=skippedSegments;for(let _i=skippedSegments;_i--;)fragments.push(null);currentSN+=skippedSegments}const recentlyRemovedDateranges=skipAttrs.enumeratedString("RECENTLY-REMOVED-DATERANGES");recentlyRemovedDateranges&&(level.recentlyRemovedDateranges=(level.recentlyRemovedDateranges||[]).concat(recentlyRemovedDateranges.split("\t")));break}case"TARGETDURATION":0!==level.targetduration&&assignMultipleMediaPlaylistTagOccuranceError(level,tag,result),level.targetduration=Math.max(parseInt(value1),1);break;case"VERSION":null!==level.version&&assignMultipleMediaPlaylistTagOccuranceError(level,tag,result),level.version=parseInt(value1);break;case"INDEPENDENT-SEGMENTS":break;case"ENDLIST":level.live||assignMultipleMediaPlaylistTagOccuranceError(level,tag,result),level.live=!1;break;case"#":(value1||value2)&&frag.tagList.push(value2?[value1,value2]:[value1]);break;case"DISCONTINUITY":discontinuityCounter++,frag.tagList.push(["DIS"]);break;case"GAP":frag.gap=!0,frag.tagList.push([tag]);break;case"BITRATE":frag.tagList.push([tag,value1]),currentBitrate=1e3*parseInt(value1),isFiniteNumber(currentBitrate)?frag.bitrate=currentBitrate:currentBitrate=0;break;case"DATERANGE":{const dateRangeAttr=new AttrList(value1,level),dateRange=new DateRange(dateRangeAttr,level.dateRanges[dateRangeAttr.ID],level.dateRangeTagCount);level.dateRangeTagCount++,dateRange.isValid||level.skippedSegments?level.dateRanges[dateRange.id]=dateRange:logger.warn(`Ignoring invalid DATERANGE tag: "${value1}"`),frag.tagList.push(["EXT-X-DATERANGE",value1]);break}case"DEFINE":{const variableAttributes=new AttrList(value1,level);"IMPORT"in variableAttributes?importVariableDefinition(level,variableAttributes,multivariantVariableList):addVariableDefinition(level,variableAttributes,baseurl)}break;case"DISCONTINUITY-SEQUENCE":0!==level.startCC?assignMultipleMediaPlaylistTagOccuranceError(level,tag,result):fragments.length>0&&assignMustAppearBeforeSegmentsError(level,tag,result),level.startCC=discontinuityCounter=parseInt(value1);break;case"KEY":{const levelKey=parseKey(value1,baseurl,level);if(levelKey.isSupported()){if("NONE"===levelKey.method){levelkeys=void 0;break}levelkeys||(levelkeys={});const currentKey=levelkeys[levelKey.keyFormat];null!=currentKey&&currentKey.matches(levelKey)||(currentKey&&(levelkeys=_extends({},levelkeys)),levelkeys[levelKey.keyFormat]=levelKey)}else logger.warn(`[Keys] Ignoring invalid EXT-X-KEY tag: "${value1}"`);break}case"START":level.startTimeOffset=parseStartTimeOffset(value1);break;case"MAP":{const mapAttrs=new AttrList(value1,level);if(frag.duration){const init=new Fragment(type,base);setInitSegment(init,mapAttrs,id,levelkeys),currentInitSegment=init,frag.initSegment=currentInitSegment,currentInitSegment.rawProgramDateTime&&!frag.rawProgramDateTime&&(frag.rawProgramDateTime=currentInitSegment.rawProgramDateTime)}else{const end=frag.byteRangeEndOffset;if(end){const start=frag.byteRangeStartOffset;nextByteRange=`${end-start}@${start}`}else nextByteRange=null;setInitSegment(frag,mapAttrs,id,levelkeys),currentInitSegment=frag,createNextFrag=!0}currentInitSegment.cc=discontinuityCounter;break}case"SERVER-CONTROL":serverControlAttrs&&assignMultipleMediaPlaylistTagOccuranceError(level,tag,result),serverControlAttrs=new AttrList(value1),level.canBlockReload=serverControlAttrs.bool("CAN-BLOCK-RELOAD"),level.canSkipUntil=serverControlAttrs.optionalFloat("CAN-SKIP-UNTIL",0),level.canSkipDateRanges=level.canSkipUntil>0&&serverControlAttrs.bool("CAN-SKIP-DATERANGES"),level.partHoldBack=serverControlAttrs.optionalFloat("PART-HOLD-BACK",0),level.holdBack=serverControlAttrs.optionalFloat("HOLD-BACK",0);break;case"PART-INF":{level.partTarget&&assignMultipleMediaPlaylistTagOccuranceError(level,tag,result);const partInfAttrs=new AttrList(value1);level.partTarget=partInfAttrs.decimalFloatingPoint("PART-TARGET");break}case"PART":{let partList=level.partList;partList||(partList=level.partList=[]);const previousFragmentPart=currentPart>0?partList[partList.length-1]:void 0,index=currentPart++,partAttrs=new AttrList(value1,level),part=new Part(partAttrs,frag,base,index,previousFragmentPart);partList.push(part),frag.duration+=part.duration;break}case"PRELOAD-HINT":{const preloadHintAttrs=new AttrList(value1,level);level.preloadHint=preloadHintAttrs;break}case"RENDITION-REPORT":{const renditionReportAttrs=new AttrList(value1,level);level.renditionReports=level.renditionReports||[],level.renditionReports.push(renditionReportAttrs);break}default:logger.warn(`line parsed but not handled: ${result}`)}}}prevFrag&&!prevFrag.relurl?(fragments.pop(),totalduration-=prevFrag.duration,level.partList&&(level.fragmentHint=prevFrag)):level.partList&&(assignProgramDateTime(frag,prevFrag,programDateTimes),frag.cc=discontinuityCounter,level.fragmentHint=frag,levelkeys&&setFragLevelKeys(frag,levelkeys,level)),level.targetduration||(level.playlistParsingError=new Error("#EXT-X-TARGETDURATION is required"));const fragmentLength=fragments.length,firstFragment=fragments[0],lastFragment=fragments[fragmentLength-1];if(totalduration+=level.skippedSegments*level.targetduration,totalduration>0&&fragmentLength&&lastFragment){level.averagetargetduration=totalduration/fragmentLength;const lastSn=lastFragment.sn;level.endSN="initSegment"!==lastSn?lastSn:0,level.live||(lastFragment.endList=!0),firstPdtIndex>0&&(!function backfillProgramDateTimes(fragments,firstPdtIndex){let fragPrev=fragments[firstPdtIndex];for(let i=firstPdtIndex;i--;){const frag=fragments[i];if(!frag)return;frag.programDateTime=fragPrev.programDateTime-1e3*frag.duration,fragPrev=frag}}(fragments,firstPdtIndex),firstFragment&&programDateTimes.unshift(firstFragment))}return level.fragmentHint&&(totalduration+=level.fragmentHint.duration),level.totalduration=totalduration,programDateTimes.length&&level.dateRangeTagCount&&firstFragment&&mapDateRanges(programDateTimes,level),level.endCC=discontinuityCounter,level}}function mapDateRanges(programDateTimes,details){let programDateTimeCount=programDateTimes.length;if(!programDateTimeCount){if(!details.hasProgramDateTime)return;{const lastFragment=details.fragments[details.fragments.length-1];programDateTimes.push(lastFragment),programDateTimeCount++}}const lastProgramDateTime=programDateTimes[programDateTimeCount-1],playlistEnd=details.live?1/0:details.totalduration,dateRangeIds=Object.keys(details.dateRanges);for(let i=dateRangeIds.length;i--;){const dateRange=details.dateRanges[dateRangeIds[i]],startDateTime=dateRange.startDate.getTime();dateRange.tagAnchor=lastProgramDateTime.ref;for(let j=programDateTimeCount;j--;){var _programDateTimes$j;if((null==(_programDateTimes$j=programDateTimes[j])?void 0:_programDateTimes$j.sn)<details.startSN)break;const fragIndex=findFragmentWithStartDate(details,startDateTime,programDateTimes,j,playlistEnd);if(-1!==fragIndex){dateRange.tagAnchor=details.fragments[fragIndex].ref;break}}}}function findFragmentWithStartDate(details,startDateTime,programDateTimes,index,endTime){const pdtFragment=programDateTimes[index];if(pdtFragment){const pdtStart=pdtFragment.programDateTime;if(startDateTime>=pdtStart||0===index){var _programDateTimes;if(startDateTime<=pdtStart+1e3*(((null==(_programDateTimes=programDateTimes[index+1])?void 0:_programDateTimes.start)||endTime)-pdtFragment.start)){const startIndex=programDateTimes[index].sn-details.startSN;if(startIndex<0)return-1;const fragments=details.fragments;if(fragments.length>programDateTimes.length){for(let i=(programDateTimes[index+1]||fragments[fragments.length-1]).sn-details.startSN;i>startIndex;i--){const fragStartDateTime=fragments[i].programDateTime;if(startDateTime>=fragStartDateTime&&startDateTime<fragStartDateTime+1e3*fragments[i].duration)return i}}return startIndex}}}return-1}function parseKey(keyTagAttributes,baseurl,parsed){var _keyAttrs$METHOD,_keyAttrs$KEYFORMAT;const keyAttrs=new AttrList(keyTagAttributes,parsed),decryptmethod=null!=(_keyAttrs$METHOD=keyAttrs.METHOD)?_keyAttrs$METHOD:"",decrypturi=keyAttrs.URI,decryptiv=keyAttrs.hexadecimalInteger("IV"),decryptkeyformatversions=keyAttrs.KEYFORMATVERSIONS,decryptkeyformat=null!=(_keyAttrs$KEYFORMAT=keyAttrs.KEYFORMAT)?_keyAttrs$KEYFORMAT:"identity";decrypturi&&keyAttrs.IV&&!decryptiv&&logger.error(`Invalid IV: ${keyAttrs.IV}`);const resolvedUri=decrypturi?M3U8Parser.resolve(decrypturi,baseurl):"",keyFormatVersions=(decryptkeyformatversions||"1").split("/").map(Number).filter(Number.isFinite);return new LevelKey(decryptmethod,resolvedUri,decryptkeyformat,keyFormatVersions,decryptiv,keyAttrs.KEYID)}function parseStartTimeOffset(startAttributes){const startTimeOffset=new AttrList(startAttributes).decimalFloatingPoint("TIME-OFFSET");return isFiniteNumber(startTimeOffset)?startTimeOffset:null}function setCodecs(codecsAttributeValue,level){let codecs=(codecsAttributeValue||"").split(/[ ,]+/).filter((c=>c));["video","audio","text"].forEach((type=>{const filtered=codecs.filter((codec=>isCodecType(codec,type)));filtered.length&&(level[`${type}Codec`]=filtered.map((c=>c.split("/")[0])).join(","),codecs=codecs.filter((codec=>-1===filtered.indexOf(codec))))})),level.unknownCodecs=codecs}function assignCodec(media,groupItem,codecProperty){const codecValue=groupItem[codecProperty];codecValue&&(media[codecProperty]=codecValue)}function assignProgramDateTime(frag,prevFrag,programDateTimes){frag.rawProgramDateTime?programDateTimes.push(frag):null!=prevFrag&&prevFrag.programDateTime&&(frag.programDateTime=prevFrag.endProgramDateTime)}function setInitSegment(frag,mapAttrs,id,levelkeys){frag.relurl=mapAttrs.URI,mapAttrs.BYTERANGE&&frag.setByteRange(mapAttrs.BYTERANGE),frag.level=id,frag.sn="initSegment",levelkeys&&(frag.levelkeys=levelkeys),frag.initSegment=null}function setFragLevelKeys(frag,levelkeys,level){frag.levelkeys=levelkeys;const{encryptedFragments}=level;encryptedFragments.length&&encryptedFragments[encryptedFragments.length-1].levelkeys===levelkeys||!Object.keys(levelkeys).some((format=>levelkeys[format].isCommonEncryption))||encryptedFragments.push(frag)}function assignMultipleMediaPlaylistTagOccuranceError(level,tag,result){level.playlistParsingError=new Error(`#EXT-X-${tag} must not appear more than once (${result[0]})`)}function assignMustAppearBeforeSegmentsError(level,tag,result){level.playlistParsingError=new Error(`#EXT-X-${tag} must appear before the first Media Segment (${result[0]})`)}function updateFromToPTS(fragFrom,fragTo){const fragToPTS=fragTo.startPTS;if(isFiniteNumber(fragToPTS)){let frag,duration=0;fragTo.sn>fragFrom.sn?(duration=fragToPTS-fragFrom.start,frag=fragFrom):(duration=fragFrom.start-fragToPTS,frag=fragTo),frag.duration!==duration&&frag.setDuration(duration)}else if(fragTo.sn>fragFrom.sn){fragFrom.cc===fragTo.cc&&fragFrom.minEndPTS?fragTo.setStart(fragFrom.start+(fragFrom.minEndPTS-fragFrom.start)):fragTo.setStart(fragFrom.start+fragFrom.duration)}else fragTo.setStart(Math.max(fragFrom.start-fragTo.duration,0))}function updateFragPTSDTS(details,frag,startPTS,endPTS,startDTS,endDTS,logger){endPTS-startPTS<=0&&(logger.warn("Fragment should have a positive duration",frag),endPTS=startPTS+frag.duration,endDTS=startDTS+frag.duration);let maxStartPTS=startPTS,minEndPTS=endPTS;const fragStartPts=frag.startPTS,fragEndPts=frag.endPTS;if(isFiniteNumber(fragStartPts)){const deltaPTS=Math.abs(fragStartPts-startPTS);details&&deltaPTS>details.totalduration?logger.warn(`media timestamps and playlist times differ by ${deltaPTS}s for level ${frag.level} ${details.url}`):isFiniteNumber(frag.deltaPTS)?frag.deltaPTS=Math.max(deltaPTS,frag.deltaPTS):frag.deltaPTS=deltaPTS,maxStartPTS=Math.max(startPTS,fragStartPts),startPTS=Math.min(startPTS,fragStartPts),startDTS=void 0!==frag.startDTS?Math.min(startDTS,frag.startDTS):startDTS,minEndPTS=Math.min(endPTS,fragEndPts),endPTS=Math.max(endPTS,fragEndPts),endDTS=void 0!==frag.endDTS?Math.max(endDTS,frag.endDTS):endDTS}const drift=startPTS-frag.start;0!==frag.start&&frag.setStart(startPTS),frag.setDuration(endPTS-frag.start),frag.startPTS=startPTS,frag.maxStartPTS=maxStartPTS,frag.startDTS=startDTS,frag.endPTS=endPTS,frag.minEndPTS=minEndPTS,frag.endDTS=endDTS;const sn=frag.sn;if(!details||sn<details.startSN||sn>details.endSN)return 0;let i;const fragIdx=sn-details.startSN,fragments=details.fragments;for(fragments[fragIdx]=frag,i=fragIdx;i>0;i--)updateFromToPTS(fragments[i],fragments[i-1]);for(i=fragIdx;i<fragments.length-1;i++)updateFromToPTS(fragments[i],fragments[i+1]);return details.fragmentHint&&updateFromToPTS(fragments[fragments.length-1],details.fragmentHint),details.PTSKnown=details.alignedSliding=!0,drift}function mergeDetails(oldDetails,newDetails,logger){if(oldDetails===newDetails)return;let currentInitSegment=null;const oldFragments=oldDetails.fragments;for(let i=oldFragments.length-1;i>=0;i--){const oldInit=oldFragments[i].initSegment;if(oldInit){currentInitSegment=oldInit;break}}let PTSFrag;oldDetails.fragmentHint&&delete oldDetails.fragmentHint.endPTS,function mapFragmentIntersection(oldDetails,newDetails,intersectionFn){const skippedSegments=newDetails.skippedSegments,start=Math.max(oldDetails.startSN,newDetails.startSN)-newDetails.startSN,end=(oldDetails.fragmentHint?1:0)+(skippedSegments?newDetails.endSN:Math.min(oldDetails.endSN,newDetails.endSN))-newDetails.startSN,delta=newDetails.startSN-oldDetails.startSN,newFrags=newDetails.fragmentHint?newDetails.fragments.concat(newDetails.fragmentHint):newDetails.fragments,oldFrags=oldDetails.fragmentHint?oldDetails.fragments.concat(oldDetails.fragmentHint):oldDetails.fragments;for(let i=start;i<=end;i++){const oldFrag=oldFrags[delta+i];let newFrag=newFrags[i];if(skippedSegments&&!newFrag&&oldFrag&&(newFrag=newDetails.fragments[i]=oldFrag),oldFrag&&newFrag){intersectionFn(oldFrag,newFrag,i,newFrags);const uriBefore=oldFrag.relurl,uriAfter=newFrag.relurl;if(uriBefore&&notEqualAfterStrippingQueries(uriBefore,uriAfter))return void(newDetails.playlistParsingError=getSequenceError(`media sequence mismatch ${newFrag.sn}:`,oldDetails,newDetails,oldFrag,newFrag));if(oldFrag.cc!==newFrag.cc)return void(newDetails.playlistParsingError=getSequenceError(`discontinuity sequence mismatch (${oldFrag.cc}!=${newFrag.cc})`,oldDetails,newDetails,oldFrag,newFrag))}}}(oldDetails,newDetails,((oldFrag,newFrag,newFragIndex,newFragments)=>{if((!newDetails.startCC||newDetails.skippedSegments)&&newFrag.cc!==oldFrag.cc){const ccOffset=oldFrag.cc-newFrag.cc;for(let i=newFragIndex;i<newFragments.length;i++)newFragments[i].cc+=ccOffset;newDetails.endCC=newFragments[newFragments.length-1].cc}isFiniteNumber(oldFrag.startPTS)&&isFiniteNumber(oldFrag.endPTS)&&(newFrag.setStart(newFrag.startPTS=oldFrag.startPTS),newFrag.startDTS=oldFrag.startDTS,newFrag.maxStartPTS=oldFrag.maxStartPTS,newFrag.endPTS=oldFrag.endPTS,newFrag.endDTS=oldFrag.endDTS,newFrag.minEndPTS=oldFrag.minEndPTS,newFrag.setDuration(oldFrag.endPTS-oldFrag.startPTS),newFrag.duration&&(PTSFrag=newFrag),newDetails.PTSKnown=newDetails.alignedSliding=!0),oldFrag.hasStreams&&(newFrag.elementaryStreams=oldFrag.elementaryStreams),newFrag.loader=oldFrag.loader,oldFrag.hasStats&&(newFrag.stats=oldFrag.stats),oldFrag.initSegment&&(newFrag.initSegment=oldFrag.initSegment,currentInitSegment=oldFrag.initSegment)}));const newFragments=newDetails.fragments,fragmentsToCheck=newDetails.fragmentHint?newFragments.concat(newDetails.fragmentHint):newFragments;if(currentInitSegment&&fragmentsToCheck.forEach((frag=>{var _currentInitSegment;!frag||frag.initSegment&&frag.initSegment.relurl!==(null==(_currentInitSegment=currentInitSegment)?void 0:_currentInitSegment.relurl)||(frag.initSegment=currentInitSegment)})),newDetails.skippedSegments){if(newDetails.deltaUpdateFailed=newFragments.some((frag=>!frag)),newDetails.deltaUpdateFailed){logger.warn("[level-helper] Previous playlist missing segments skipped in delta playlist");for(let i=newDetails.skippedSegments;i--;)newFragments.shift();newDetails.startSN=newFragments[0].sn}else{newDetails.canSkipDateRanges&&(newDetails.dateRanges=function mergeDateRanges(oldDateRanges,newDetails,logger){const{dateRanges:deltaDateRanges,recentlyRemovedDateranges}=newDetails,dateRanges=_extends({},oldDateRanges);recentlyRemovedDateranges&&recentlyRemovedDateranges.forEach((id=>{delete dateRanges[id]}));const mergeCount=Object.keys(dateRanges).length;if(!mergeCount)return deltaDateRanges;return Object.keys(deltaDateRanges).forEach((id=>{const mergedDateRange=dateRanges[id],dateRange=new DateRange(deltaDateRanges[id].attr,mergedDateRange);dateRange.isValid?(dateRanges[id]=dateRange,mergedDateRange||(dateRange.tagOrder+=mergeCount)):logger.warn(`Ignoring invalid Playlist Delta Update DATERANGE tag: "${stringify(deltaDateRanges[id].attr)}"`)})),dateRanges}(oldDetails.dateRanges,newDetails,logger));const programDateTimes=oldDetails.fragments.filter((frag=>frag.rawProgramDateTime));if(oldDetails.hasProgramDateTime&&!newDetails.hasProgramDateTime)for(let i=1;i<fragmentsToCheck.length;i++)null===fragmentsToCheck[i].programDateTime&&assignProgramDateTime(fragmentsToCheck[i],fragmentsToCheck[i-1],programDateTimes);mapDateRanges(programDateTimes,newDetails)}newDetails.endCC=newFragments[newFragments.length-1].cc}if(!newDetails.startCC){var _fragPriorToNewStart$;const fragPriorToNewStart=getFragmentWithSN(oldDetails,newDetails.startSN-1);newDetails.startCC=null!=(_fragPriorToNewStart$=null==fragPriorToNewStart?void 0:fragPriorToNewStart.cc)?_fragPriorToNewStart$:newFragments[0].cc}!function mapPartIntersection(oldParts,newParts,intersectionFn){if(oldParts&&newParts){let delta=0;for(let i=0,len=oldParts.length;i<=len;i++){const oldPart=oldParts[i],newPart=newParts[i+delta];oldPart&&newPart&&oldPart.index===newPart.index&&oldPart.fragment.sn===newPart.fragment.sn?intersectionFn(oldPart,newPart):delta--}}}(oldDetails.partList,newDetails.partList,((oldPart,newPart)=>{newPart.elementaryStreams=oldPart.elementaryStreams,newPart.stats=oldPart.stats})),PTSFrag?updateFragPTSDTS(newDetails,PTSFrag,PTSFrag.startPTS,PTSFrag.endPTS,PTSFrag.startDTS,PTSFrag.endDTS,logger):adjustSliding(oldDetails,newDetails),newFragments.length&&(newDetails.totalduration=newDetails.edge-newFragments[0].start),newDetails.driftStartTime=oldDetails.driftStartTime,newDetails.driftStart=oldDetails.driftStart;const advancedDateTime=newDetails.advancedDateTime;if(newDetails.advanced&&advancedDateTime){const edge=newDetails.edge;newDetails.driftStart||(newDetails.driftStartTime=advancedDateTime,newDetails.driftStart=edge),newDetails.driftEndTime=advancedDateTime,newDetails.driftEnd=edge}else newDetails.driftEndTime=oldDetails.driftEndTime,newDetails.driftEnd=oldDetails.driftEnd,newDetails.advancedDateTime=oldDetails.advancedDateTime;-1===newDetails.requestScheduled&&(newDetails.requestScheduled=oldDetails.requestScheduled)}function getSequenceError(message,oldDetails,newDetails,oldFrag,newFrag){return new Error(`${message} ${newFrag.url}\nPlaylist starting @${oldDetails.startSN}\n${oldDetails.m3u8}\n\nPlaylist starting @${newDetails.startSN}\n${newDetails.m3u8}`)}function adjustSliding(oldDetails,newDetails,matchingStableVariantOrRendition=!0){const delta=newDetails.startSN+newDetails.skippedSegments-oldDetails.startSN,oldFragments=oldDetails.fragments,advancedOrStable=delta>=0;let sliding=0;if(advancedOrStable&&delta<oldFragments.length)sliding=oldFragments[delta].start;else if(advancedOrStable&&newDetails.startSN===oldDetails.endSN+1)sliding=oldDetails.fragmentEnd;else if(advancedOrStable&&matchingStableVariantOrRendition)sliding=oldDetails.fragmentStart+delta*newDetails.levelTargetDuration;else{if(newDetails.skippedSegments||0!==newDetails.fragmentStart)return;sliding=oldDetails.fragmentStart}addSliding(newDetails,sliding)}function addSliding(details,sliding){if(sliding){const fragments=details.fragments;for(let i=details.skippedSegments;i<fragments.length;i++)fragments[i].addStart(sliding);details.fragmentHint&&details.fragmentHint.addStart(sliding)}}function computeReloadInterval(newDetails,distanceToLiveEdgeMs=1/0){let reloadInterval=1e3*newDetails.targetduration;if(newDetails.updated){const fragments=newDetails.fragments,liveEdgeMaxTargetDurations=4;if(fragments.length&&reloadInterval*liveEdgeMaxTargetDurations>distanceToLiveEdgeMs){const lastSegmentDuration=1e3*fragments[fragments.length-1].duration;lastSegmentDuration<reloadInterval&&(reloadInterval=lastSegmentDuration)}}else reloadInterval/=2;return Math.round(reloadInterval)}function getFragmentWithSN(details,sn,fragCurrent){if(!details)return null;let fragment=details.fragments[sn-details.startSN];return fragment||(fragment=details.fragmentHint,fragment&&fragment.sn===sn?fragment:sn<details.startSN&&fragCurrent&&fragCurrent.sn===sn?fragCurrent:null)}function getPartWith(details,sn,partIndex){return details?findPart(details.partList,sn,partIndex):null}function findPart(partList,sn,partIndex){if(partList)for(let i=partList.length;i--;){const part=partList[i];if(part.index===partIndex&&part.fragment.sn===sn)return part}return null}function reassignFragmentLevelIndexes(levels){levels.forEach(((level,index)=>{var _level$details;null==(_level$details=level.details)||_level$details.fragments.forEach((fragment=>{fragment.level=index,fragment.initSegment&&(fragment.initSegment.level=index)}))}))}function notEqualAfterStrippingQueries(uriBefore,uriAfter){return!(uriBefore===uriAfter||!uriAfter)&&stripQuery(uriBefore)!==stripQuery(uriAfter)}function stripQuery(uri){return uri.replace(/\?[^?]*$/,"")}function findFirstFragWithCC(fragments,cc){for(let i=0,len=fragments.length;i<len;i++){var _fragments$i;if((null==(_fragments$i=fragments[i])?void 0:_fragments$i.cc)===cc)return fragments[i]}return null}function adjustFragmentStart(frag,sliding){const start=frag.start+sliding;frag.startPTS=start,frag.setStart(start),frag.endPTS=start+frag.duration}function adjustSlidingStart(sliding,details){const fragments=details.fragments;for(let i=0,len=fragments.length;i<len;i++)adjustFragmentStart(fragments[i],sliding);details.fragmentHint&&adjustFragmentStart(details.fragmentHint,sliding),details.alignedSliding=!0}function alignDiscontinuities(details,refDetails){if(!function shouldAlignOnDiscontinuities(refDetails,details){return!!(refDetails&&details.startCC<refDetails.endCC&&details.endCC>refDetails.startCC)}(refDetails,details))return;const targetCC=Math.min(refDetails.endCC,details.endCC),refFrag=findFirstFragWithCC(refDetails.fragments,targetCC),frag=findFirstFragWithCC(details.fragments,targetCC);if(!refFrag||!frag)return;logger.log(`Aligning playlist at start of dicontinuity sequence ${targetCC}`);adjustSlidingStart(refFrag.start-frag.start,details)}function alignMediaPlaylistByPDT(details,refDetails){if(!details.hasProgramDateTime||!refDetails.hasProgramDateTime)return;const fragments=details.fragments,refFragments=refDetails.fragments;if(!fragments.length||!refFragments.length)return;let refFrag,frag;const targetCC=Math.min(refDetails.endCC,details.endCC);refDetails.startCC<targetCC&&details.startCC<targetCC&&(refFrag=findFirstFragWithCC(refFragments,targetCC),frag=findFirstFragWithCC(fragments,targetCC)),refFrag&&frag||(refFrag=refFragments[Math.floor(refFragments.length/2)],frag=findFirstFragWithCC(fragments,refFrag.cc)||fragments[Math.floor(fragments.length/2)]);const refPDT=refFrag.programDateTime,targetPDT=frag.programDateTime;if(!refPDT||!targetPDT)return;adjustSlidingStart((targetPDT-refPDT)/1e3-(frag.start-refFrag.start),details)}const TimeRanges_toString=function(r){let log="";const len=r.length;for(let i=0;i<len;i++)log+=`[${r.start(i).toFixed(3)}-${r.end(i).toFixed(3)}]`;return log},State={STOPPED:"STOPPED",IDLE:"IDLE",KEY_LOADING:"KEY_LOADING",FRAG_LOADING:"FRAG_LOADING",FRAG_LOADING_WAITING_RETRY:"FRAG_LOADING_WAITING_RETRY",WAITING_TRACK:"WAITING_TRACK",PARSING:"PARSING",PARSED:"PARSED",ENDED:"ENDED",ERROR:"ERROR",WAITING_INIT_PTS:"WAITING_INIT_PTS",WAITING_LEVEL:"WAITING_LEVEL"};class BaseStreamController extends TaskLoop{constructor(hls,fragmentTracker,keyLoader,logPrefix,playlistType){super(logPrefix,hls.logger),this.hls=void 0,this.fragPrevious=null,this.fragCurrent=null,this.fragmentTracker=void 0,this.transmuxer=null,this._state=State.STOPPED,this.playlistType=void 0,this.media=null,this.mediaBuffer=null,this.config=void 0,this.bitrateTest=!1,this.lastCurrentTime=0,this.nextLoadPosition=0,this.startPosition=0,this.startTimeOffset=null,this.retryDate=0,this.levels=null,this.fragmentLoader=void 0,this.keyLoader=void 0,this.levelLastLoaded=null,this.startFragRequested=!1,this.decrypter=void 0,this.initPTS=[],this.buffering=!0,this.loadingParts=!1,this.loopSn=void 0,this.onMediaSeeking=()=>{const{config,fragCurrent,media,mediaBuffer,state}=this,currentTime=media?media.currentTime:0,bufferInfo=BufferHelper.bufferInfo(mediaBuffer||media,currentTime,config.maxBufferHole),noFowardBuffer=!bufferInfo.len;if(this.log(`Media seeking to ${isFiniteNumber(currentTime)?currentTime.toFixed(3):currentTime}, state: ${state}, ${noFowardBuffer?"out of":"in"} buffer`),this.state===State.ENDED)this.resetLoadingState();else if(fragCurrent){const tolerance=config.maxFragLookUpTolerance,fragStartOffset=fragCurrent.start-tolerance,fragEndOffset=fragCurrent.start+fragCurrent.duration+tolerance;if(noFowardBuffer||fragEndOffset<bufferInfo.start||fragStartOffset>bufferInfo.end){const pastFragment=currentTime>fragEndOffset;(currentTime<fragStartOffset||pastFragment)&&(pastFragment&&fragCurrent.loader&&(this.log(`Cancelling fragment load for seek (sn: ${fragCurrent.sn})`),fragCurrent.abortRequests(),this.resetLoadingState()),this.fragPrevious=null)}}if(media){this.fragmentTracker.removeFragmentsInRange(currentTime,1/0,this.playlistType,!0);if(currentTime>this.lastCurrentTime&&(this.lastCurrentTime=currentTime),!this.loadingParts){const bufferEnd=Math.max(bufferInfo.end,currentTime),shouldLoadParts=this.shouldLoadParts(this.getLevelDetails(),bufferEnd);shouldLoadParts&&(this.log(`LL-Part loading ON after seeking to ${currentTime.toFixed(2)} with buffer @${bufferEnd.toFixed(2)}`),this.loadingParts=shouldLoadParts)}}this.hls.hasEnoughToStart||(this.log(`Setting ${noFowardBuffer?"startPosition":"nextLoadPosition"} to ${currentTime} for seek without enough to start`),this.nextLoadPosition=currentTime,noFowardBuffer&&(this.startPosition=currentTime)),this.tickImmediate()},this.onMediaEnded=()=>{this.log("setting startPosition to 0 because media ended"),this.startPosition=this.lastCurrentTime=0},this.playlistType=playlistType,this.hls=hls,this.fragmentLoader=new FragmentLoader(hls.config),this.keyLoader=keyLoader,this.fragmentTracker=fragmentTracker,this.config=hls.config,this.decrypter=new Decrypter(hls.config)}registerListeners(){const{hls}=this;hls.on(Events.MEDIA_ATTACHED,this.onMediaAttached,this),hls.on(Events.MEDIA_DETACHING,this.onMediaDetaching,this),hls.on(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.on(Events.MANIFEST_LOADED,this.onManifestLoaded,this),hls.on(Events.ERROR,this.onError,this)}unregisterListeners(){const{hls}=this;hls.off(Events.MEDIA_ATTACHED,this.onMediaAttached,this),hls.off(Events.MEDIA_DETACHING,this.onMediaDetaching,this),hls.off(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.off(Events.MANIFEST_LOADED,this.onManifestLoaded,this),hls.off(Events.ERROR,this.onError,this)}doTick(){this.onTickEnd()}onTickEnd(){}startLoad(startPosition){}stopLoad(){if(this.state===State.STOPPED)return;this.fragmentLoader.abort(),this.keyLoader.abort(this.playlistType);const frag=this.fragCurrent;null!=frag&&frag.loader&&(frag.abortRequests(),this.fragmentTracker.removeFragment(frag)),this.resetTransmuxer(),this.fragCurrent=null,this.fragPrevious=null,this.clearInterval(),this.clearNextTick(),this.state=State.STOPPED}get startPositionValue(){const{nextLoadPosition,startPosition}=this;return-1===startPosition&&nextLoadPosition?nextLoadPosition:startPosition}get bufferingEnabled(){return this.buffering}pauseBuffering(){this.buffering=!1}resumeBuffering(){this.buffering=!0}get inFlightFrag(){return{frag:this.fragCurrent,state:this.state}}_streamEnded(bufferInfo,levelDetails){if(levelDetails.live||!this.media)return!1;const bufferEnd=bufferInfo.end||0,timelineStart=this.config.timelineOffset||0;if(bufferEnd<=timelineStart)return!1;const bufferedRanges=bufferInfo.buffered;this.config.maxBufferHole&&bufferedRanges&&bufferedRanges.length>1&&(bufferInfo=BufferHelper.bufferedInfo(bufferedRanges,bufferInfo.start,0));const nextStart=bufferInfo.nextStart;if(nextStart&&nextStart>timelineStart&&nextStart<levelDetails.edge)return!1;if(this.media.currentTime<bufferInfo.start)return!1;const partList=levelDetails.partList;if(null!=partList&&partList.length){const lastPart=partList[partList.length-1];return BufferHelper.isBuffered(this.media,lastPart.start+lastPart.duration/2)}const playlistType=levelDetails.fragments[levelDetails.fragments.length-1].type;return this.fragmentTracker.isEndListAppended(playlistType)}getLevelDetails(){if(this.levels&&null!==this.levelLastLoaded)return this.levelLastLoaded.details}get timelineOffset(){const configuredTimelineOffset=this.config.timelineOffset;var _this$getLevelDetails;return configuredTimelineOffset?(null==(_this$getLevelDetails=this.getLevelDetails())?void 0:_this$getLevelDetails.appliedTimelineOffset)||configuredTimelineOffset:0}onMediaAttached(event,data){const media=this.media=this.mediaBuffer=data.media;media.removeEventListener("seeking",this.onMediaSeeking),media.removeEventListener("ended",this.onMediaEnded),media.addEventListener("seeking",this.onMediaSeeking),media.addEventListener("ended",this.onMediaEnded);const config=this.config;this.levels&&config.autoStartLoad&&this.state===State.STOPPED&&this.startLoad(config.startPosition)}onMediaDetaching(event,data){const transferringMedia=!!data.transferMedia,media=this.media;if(null!==media){if(media.ended&&(this.log("MSE detaching and video ended, reset startPosition"),this.startPosition=this.lastCurrentTime=0),media.removeEventListener("seeking",this.onMediaSeeking),media.removeEventListener("ended",this.onMediaEnded),this.keyLoader&&!transferringMedia&&this.keyLoader.detach(),this.media=this.mediaBuffer=null,this.loopSn=void 0,transferringMedia)return this.resetLoadingState(),void this.resetTransmuxer();this.loadingParts=!1,this.fragmentTracker.removeAllFragments(),this.stopLoad()}}onManifestLoading(){this.initPTS=[],this.levels=this.levelLastLoaded=this.fragCurrent=null,this.lastCurrentTime=this.startPosition=0,this.startFragRequested=!1}onError(event,data){}onManifestLoaded(event,data){this.startTimeOffset=data.startTimeOffset}onHandlerDestroying(){this.stopLoad(),this.transmuxer&&(this.transmuxer.destroy(),this.transmuxer=null),super.onHandlerDestroying(),this.hls=this.onMediaSeeking=this.onMediaEnded=null}onHandlerDestroyed(){this.state=State.STOPPED,this.fragmentLoader&&this.fragmentLoader.destroy(),this.keyLoader&&this.keyLoader.destroy(),this.decrypter&&this.decrypter.destroy(),this.hls=this.log=this.warn=this.decrypter=this.keyLoader=this.fragmentLoader=this.fragmentTracker=null,super.onHandlerDestroyed()}loadFragment(frag,level,targetBufferTime){this.startFragRequested=!0,this._loadFragForPlayback(frag,level,targetBufferTime)}_loadFragForPlayback(fragment,level,targetBufferTime){this._doFragLoad(fragment,level,targetBufferTime,(data=>{const frag=data.frag;if(this.fragContextChanged(frag))return this.warn(`${frag.type} sn: ${frag.sn}${data.part?" part: "+data.part.index:""} of ${this.fragInfo(frag,!1,data.part)}) was dropped during download.`),void this.fragmentTracker.removeFragment(frag);frag.stats.chunkCount++,this._handleFragmentLoadProgress(data)})).then((data=>{if(!data)return;const state=this.state,frag=data.frag;this.fragContextChanged(frag)?(state===State.FRAG_LOADING||!this.fragCurrent&&state===State.PARSING)&&(this.fragmentTracker.removeFragment(frag),this.state=State.IDLE):("payload"in data&&(this.log(`Loaded ${frag.type} sn: ${frag.sn} of ${this.playlistLabel()} ${frag.level}`),this.hls.trigger(Events.FRAG_LOADED,data)),this._handleFragmentLoadComplete(data))})).catch((reason=>{this.state!==State.STOPPED&&this.state!==State.ERROR&&(this.warn(`Frag error: ${(null==reason?void 0:reason.message)||reason}`),this.resetFragmentLoading(fragment))}))}clearTrackerIfNeeded(frag){var _this$mediaBuffer;const{fragmentTracker}=this;if(fragmentTracker.getState(frag)===FragmentState_APPENDING){const playlistType=frag.type,bufferedInfo=this.getFwdBufferInfo(this.mediaBuffer,playlistType),minForwardBufferLength=Math.max(frag.duration,bufferedInfo?bufferedInfo.len:this.config.maxBufferLength),backtrackFragment=this.backtrackFragment;(1===(backtrackFragment?frag.sn-backtrackFragment.sn:0)||this.reduceMaxBufferLength(minForwardBufferLength,frag.duration))&&fragmentTracker.removeFragment(frag)}else 0===(null==(_this$mediaBuffer=this.mediaBuffer)?void 0:_this$mediaBuffer.buffered.length)?fragmentTracker.removeAllFragments():fragmentTracker.hasParts(frag.type)&&(fragmentTracker.detectPartialFragments({frag,part:null,stats:frag.stats,id:frag.type}),fragmentTracker.getState(frag)===FragmentState_PARTIAL&&fragmentTracker.removeFragment(frag))}checkLiveUpdate(details){if(details.updated&&!details.live){const lastFragment=details.fragments[details.fragments.length-1];this.fragmentTracker.detectPartialFragments({frag:lastFragment,part:null,stats:lastFragment.stats,id:lastFragment.type})}details.fragments[0]||(details.deltaUpdateFailed=!0)}waitForLive(levelInfo){const details=levelInfo.details;return(null==details?void 0:details.live)&&"EVENT"!==details.type&&(this.levelLastLoaded!==levelInfo||details.expired)}flushMainBuffer(startOffset,endOffset,type=null){if(!(startOffset-endOffset))return;const flushScope={startOffset,endOffset,type};this.hls.trigger(Events.BUFFER_FLUSHING,flushScope)}_loadInitSegment(fragment,level){this._doFragLoad(fragment,level).then((data=>{const frag=null==data?void 0:data.frag;if(!frag||this.fragContextChanged(frag)||!this.levels)throw new Error("init load aborted");return data})).then((data=>{const{hls}=this,{frag,payload}=data,decryptData=frag.decryptdata;if(payload&&payload.byteLength>0&&null!=decryptData&&decryptData.key&&decryptData.iv&&isFullSegmentEncryption(decryptData.method)){const startTime=self.performance.now();return this.decrypter.decrypt(new Uint8Array(payload),decryptData.key.buffer,decryptData.iv.buffer,getAesModeFromFullSegmentMethod(decryptData.method)).catch((err=>{throw hls.trigger(Events.ERROR,{type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.FRAG_DECRYPT_ERROR,fatal:!1,error:err,reason:err.message,frag}),err})).then((decryptedData=>{const endTime=self.performance.now();return hls.trigger(Events.FRAG_DECRYPTED,{frag,payload:decryptedData,stats:{tstart:startTime,tdecrypt:endTime}}),data.payload=decryptedData,this.completeInitSegmentLoad(data)}))}return this.completeInitSegmentLoad(data)})).catch((reason=>{this.state!==State.STOPPED&&this.state!==State.ERROR&&(this.warn(reason),this.resetFragmentLoading(fragment))}))}completeInitSegmentLoad(data){const{levels}=this;if(!levels)throw new Error("init load aborted, missing levels");const stats=data.frag.stats;this.state!==State.STOPPED&&(this.state=State.IDLE),data.frag.data=new Uint8Array(data.payload),stats.parsing.start=stats.buffering.start=self.performance.now(),stats.parsing.end=stats.buffering.end=self.performance.now(),this.tick()}unhandledEncryptionError(initSegment,frag){var _tracks$audio,_tracks$video;const tracks=initSegment.tracks;if(tracks&&!frag.encrypted&&(null!=(_tracks$audio=tracks.audio)&&_tracks$audio.encrypted||null!=(_tracks$video=tracks.video)&&_tracks$video.encrypted)&&(!this.config.emeEnabled||!this.keyLoader.emeController)){const media=this.media,error=new Error(`Encrypted track with no key in ${this.fragInfo(frag)} (media ${media?"attached mediaKeys: "+media.mediaKeys:"detached"})`);return this.warn(error.message),!media||media.mediaKeys?!1:(this.hls.trigger(Events.ERROR,{type:ErrorTypes.KEY_SYSTEM_ERROR,details:ErrorDetails.KEY_SYSTEM_NO_KEYS,fatal:!1,error,frag}),this.resetTransmuxer(),!0)}return!1}fragContextChanged(frag){const{fragCurrent}=this;return!frag||!fragCurrent||frag.sn!==fragCurrent.sn||frag.level!==fragCurrent.level}fragBufferedComplete(frag,part){const media=this.mediaBuffer?this.mediaBuffer:this.media;if(this.log(`Buffered ${frag.type} sn: ${frag.sn}${part?" part: "+part.index:""} of ${this.fragInfo(frag,!1,part)} > buffer:${media?TimeRanges_toString(BufferHelper.getBuffered(media)):"(detached)"})`),isMediaFragment(frag)){var _this$levels;if(frag.type!==PlaylistLevelType.SUBTITLE){const el=frag.elementaryStreams;if(!Object.keys(el).some((type=>!!el[type])))return void(this.state=State.IDLE)}const level=null==(_this$levels=this.levels)?void 0:_this$levels[frag.level];null!=level&&level.fragmentError&&(this.log(`Resetting level fragment error count of ${level.fragmentError} on frag buffered`),level.fragmentError=0)}this.state=State.IDLE}_handleFragmentLoadComplete(fragLoadedEndData){const{transmuxer}=this;if(!transmuxer)return;const{frag,part,partsLoaded}=fragLoadedEndData,complete=!partsLoaded||0===partsLoaded.length||partsLoaded.some((fragLoaded=>!fragLoaded)),chunkMeta=new ChunkMetadata(frag.level,frag.sn,frag.stats.chunkCount+1,0,part?part.index:-1,!complete);transmuxer.flush(chunkMeta)}_handleFragmentLoadProgress(frag){}_doFragLoad(frag,level,targetBufferTime=null,progressCallback){var _frag$decryptdata;this.fragCurrent=frag;const details=level.details;if(!this.levels||!details)throw new Error(`frag load aborted, missing level${details?"":" detail"}s`);let keyLoadingPromise=null;!frag.encrypted||null!=(_frag$decryptdata=frag.decryptdata)&&_frag$decryptdata.key?frag.encrypted||(keyLoadingPromise=this.keyLoader.loadClear(frag,details.encryptedFragments,this.startFragRequested),keyLoadingPromise&&this.log("[eme] blocking frag load until media-keys acquired")):(this.log(`Loading key for ${frag.sn} of [${details.startSN}-${details.endSN}], ${this.playlistLabel()} ${frag.level}`),this.state=State.KEY_LOADING,this.fragCurrent=frag,keyLoadingPromise=this.keyLoader.load(frag).then((keyLoadedData=>{if(!this.fragContextChanged(keyLoadedData.frag))return this.hls.trigger(Events.KEY_LOADED,keyLoadedData),this.state===State.KEY_LOADING&&(this.state=State.IDLE),keyLoadedData})),this.hls.trigger(Events.KEY_LOADING,{frag}),null===this.fragCurrent&&(keyLoadingPromise=Promise.reject(new Error("frag load aborted, context changed in KEY_LOADING"))));const fragPrevious=this.fragPrevious;if(isMediaFragment(frag)&&(!fragPrevious||frag.sn!==fragPrevious.sn)){const shouldLoadParts=this.shouldLoadParts(level.details,frag.end);shouldLoadParts!==this.loadingParts&&(this.log(`LL-Part loading ${shouldLoadParts?"ON":"OFF"} loading sn ${null==fragPrevious?void 0:fragPrevious.sn}->${frag.sn}`),this.loadingParts=shouldLoadParts)}if(targetBufferTime=Math.max(frag.start,targetBufferTime||0),this.loadingParts&&isMediaFragment(frag)){const partList=details.partList;if(partList&&progressCallback){targetBufferTime>details.fragmentEnd&&details.fragmentHint&&(frag=details.fragmentHint);const partIndex=this.getNextPart(partList,frag,targetBufferTime);if(partIndex>-1){const part=partList[partIndex];let _result;return frag=this.fragCurrent=part.fragment,this.log(`Loading ${frag.type} sn: ${frag.sn} part: ${part.index} (${partIndex}/${partList.length-1}) of ${this.fragInfo(frag,!1,part)}) cc: ${frag.cc} [${details.startSN}-${details.endSN}], target: ${parseFloat(targetBufferTime.toFixed(3))}`),this.nextLoadPosition=part.start+part.duration,this.state=State.FRAG_LOADING,_result=keyLoadingPromise?keyLoadingPromise.then((keyLoadedData=>!keyLoadedData||this.fragContextChanged(keyLoadedData.frag)?null:this.doFragPartsLoad(frag,part,level,progressCallback))).catch((error=>this.handleFragLoadError(error))):this.doFragPartsLoad(frag,part,level,progressCallback).catch((error=>this.handleFragLoadError(error))),this.hls.trigger(Events.FRAG_LOADING,{frag,part,targetBufferTime}),null===this.fragCurrent?Promise.reject(new Error("frag load aborted, context changed in FRAG_LOADING parts")):_result}if(!frag.url||this.loadedEndOfParts(partList,targetBufferTime))return Promise.resolve(null)}}var _details$partList;if(isMediaFragment(frag)&&this.loadingParts)this.log(`LL-Part loading OFF after next part miss @${targetBufferTime.toFixed(2)} Check buffer at sn: ${frag.sn} loaded parts: ${null==(_details$partList=details.partList)?void 0:_details$partList.filter((p=>p.loaded)).map((p=>`[${p.start}-${p.end}]`))}`),this.loadingParts=!1;else if(!frag.url)return Promise.resolve(null);this.log(`Loading ${frag.type} sn: ${frag.sn} of ${this.fragInfo(frag,!1)}) cc: ${frag.cc} ${"["+details.startSN+"-"+details.endSN+"]"}, target: ${parseFloat(targetBufferTime.toFixed(3))}`),isFiniteNumber(frag.sn)&&!this.bitrateTest&&(this.nextLoadPosition=frag.start+frag.duration),this.state=State.FRAG_LOADING;const dataOnProgress=this.config.progressive;let result;return result=dataOnProgress&&keyLoadingPromise?keyLoadingPromise.then((keyLoadedData=>!keyLoadedData||this.fragContextChanged(keyLoadedData.frag)?null:this.fragmentLoader.load(frag,progressCallback))).catch((error=>this.handleFragLoadError(error))):Promise.all([this.fragmentLoader.load(frag,dataOnProgress?progressCallback:void 0),keyLoadingPromise]).then((([fragLoadedData])=>(!dataOnProgress&&progressCallback&&progressCallback(fragLoadedData),fragLoadedData))).catch((error=>this.handleFragLoadError(error))),this.hls.trigger(Events.FRAG_LOADING,{frag,targetBufferTime}),null===this.fragCurrent?Promise.reject(new Error("frag load aborted, context changed in FRAG_LOADING")):result}doFragPartsLoad(frag,fromPart,level,progressCallback){return new Promise(((resolve,reject)=>{var _level$details;const partsLoaded=[],initialPartList=null==(_level$details=level.details)?void 0:_level$details.partList,loadPart=part=>{this.fragmentLoader.loadPart(frag,part,progressCallback).then((partLoadedData=>{partsLoaded[part.index]=partLoadedData;const loadedPart=partLoadedData.part;this.hls.trigger(Events.FRAG_LOADED,partLoadedData);const nextPart=getPartWith(level.details,frag.sn,part.index+1)||findPart(initialPartList,frag.sn,part.index+1);if(!nextPart)return resolve({frag,part:loadedPart,partsLoaded});loadPart(nextPart)})).catch(reject)};loadPart(fromPart)}))}handleFragLoadError(error){if("data"in error){const data=error.data;data&&data.details===ErrorDetails.INTERNAL_ABORTED?this.handleFragLoadAborted(data.frag,data.part):this.hls.trigger(Events.ERROR,data)}else this.hls.trigger(Events.ERROR,{type:ErrorTypes.OTHER_ERROR,details:ErrorDetails.INTERNAL_EXCEPTION,err:error,error,fatal:!0});return null}_handleTransmuxerFlush(chunkMeta){const context=this.getCurrentContext(chunkMeta);if(!context||this.state!==State.PARSING)return void(this.fragCurrent||this.state===State.STOPPED||this.state===State.ERROR||(this.state=State.IDLE));const{frag,part,level}=context,now=self.performance.now();frag.stats.parsing.end=now,part&&(part.stats.parsing.end=now);const levelDetails=this.getLevelDetails(),shouldLoadParts=levelDetails&&frag.sn>levelDetails.endSN||this.shouldLoadParts(levelDetails,frag.end);shouldLoadParts!==this.loadingParts&&(this.log(`LL-Part loading ${shouldLoadParts?"ON":"OFF"} after parsing segment ending @${frag.end.toFixed(2)}`),this.loadingParts=shouldLoadParts),this.updateLevelTiming(frag,part,level,chunkMeta.partial)}shouldLoadParts(details,bufferEnd){if(this.config.lowLatencyMode){if(!details)return this.loadingParts;if(details.partList){var _details$fragmentHint;const firstPart=details.partList[0];if(firstPart.fragment.type===PlaylistLevelType.SUBTITLE)return!1;if(bufferEnd>=firstPart.end+((null==(_details$fragmentHint=details.fragmentHint)?void 0:_details$fragmentHint.duration)||0)){var _this$media;if((this.hls.hasEnoughToStart?(null==(_this$media=this.media)?void 0:_this$media.currentTime)||this.lastCurrentTime:this.getLoadPosition())>firstPart.start-firstPart.fragment.duration)return!0}}}return!1}getCurrentContext(chunkMeta){const{levels,fragCurrent}=this,{level:levelIndex,sn,part:partIndex}=chunkMeta;if(null==levels||!levels[levelIndex])return this.warn(`Levels object was unset while buffering fragment ${sn} of ${this.playlistLabel()} ${levelIndex}. The current chunk will not be buffered.`),null;const level=levels[levelIndex],levelDetails=level.details,part=partIndex>-1?getPartWith(levelDetails,sn,partIndex):null,frag=part?part.fragment:getFragmentWithSN(levelDetails,sn,fragCurrent);return frag?(fragCurrent&&fragCurrent!==frag&&(frag.stats=fragCurrent.stats),{frag,part,level}):null}bufferFragmentData(data,frag,part,chunkMeta,noBacktracking){if(this.state!==State.PARSING)return;const{data1,data2}=data;let buffer=data1;if(data2&&(buffer=appendUint8Array(data1,data2)),!buffer.length)return;const offsetTimestamp=this.initPTS[frag.cc],offset=offsetTimestamp?-offsetTimestamp.baseTime/offsetTimestamp.timescale:void 0,segment={type:data.type,frag,part,chunkMeta,offset,parent:frag.type,data:buffer};if(this.hls.trigger(Events.BUFFER_APPENDING,segment),data.dropped&&data.independent&&!part){if(noBacktracking)return;this.flushBufferGap(frag)}}flushBufferGap(frag){const media=this.media;if(!media)return;if(!BufferHelper.isBuffered(media,media.currentTime))return void this.flushMainBuffer(0,frag.start);const currentTime=media.currentTime,bufferInfo=BufferHelper.bufferInfo(media,currentTime,0),fragDuration=frag.duration,segmentFraction=Math.min(2*this.config.maxFragLookUpTolerance,.25*fragDuration),start=Math.max(Math.min(frag.start-segmentFraction,bufferInfo.end-segmentFraction),currentTime+segmentFraction);frag.start-start>segmentFraction&&this.flushMainBuffer(start,frag.start)}getFwdBufferInfo(bufferable,type){var _this$media2;const pos=this.getLoadPosition();if(!isFiniteNumber(pos))return null;const maxBufferHole=this.lastCurrentTime>pos||null!=(_this$media2=this.media)&&_this$media2.paused?0:this.config.maxBufferHole;return this.getFwdBufferInfoAtPos(bufferable,pos,type,maxBufferHole)}getFwdBufferInfoAtPos(bufferable,pos,type,maxBufferHole){const bufferInfo=BufferHelper.bufferInfo(bufferable,pos,maxBufferHole);if(0===bufferInfo.len&&void 0!==bufferInfo.nextStart){const bufferedFragAtPos=this.fragmentTracker.getBufferedFrag(pos,type);if(bufferedFragAtPos&&(bufferInfo.nextStart<=bufferedFragAtPos.end||bufferedFragAtPos.gap)){const gapDuration=Math.max(Math.min(bufferInfo.nextStart,bufferedFragAtPos.end)-pos,maxBufferHole);return BufferHelper.bufferInfo(bufferable,pos,gapDuration)}}return bufferInfo}getMaxBufferLength(levelBitrate){const{config}=this;let maxBufLen;return maxBufLen=levelBitrate?Math.max(8*config.maxBufferSize/levelBitrate,config.maxBufferLength):config.maxBufferLength,Math.min(maxBufLen,config.maxMaxBufferLength)}reduceMaxBufferLength(threshold,fragDuration){const config=this.config,minLength=Math.max(Math.min(threshold-fragDuration,config.maxBufferLength),fragDuration),reducedLength=Math.max(threshold-3*fragDuration,config.maxMaxBufferLength/2,minLength);return reducedLength>=minLength&&(config.maxMaxBufferLength=reducedLength,this.warn(`Reduce max buffer length to ${reducedLength}s`),!0)}getAppendedFrag(position,playlistType=PlaylistLevelType.MAIN){const fragOrPart=this.fragmentTracker?this.fragmentTracker.getAppendedFrag(position,playlistType):null;return fragOrPart&&"fragment"in fragOrPart?fragOrPart.fragment:fragOrPart}getNextFragment(pos,levelDetails){const fragments=levelDetails.fragments,fragLen=fragments.length;if(!fragLen)return null;const{config}=this,start=fragments[0].start,canLoadParts=config.lowLatencyMode&&!!levelDetails.partList;let frag=null;if(levelDetails.live){const initialLiveManifestSize=config.initialLiveManifestSize;if(fragLen<initialLiveManifestSize)return this.warn(`Not enough fragments to start playback (have: ${fragLen}, need: ${initialLiveManifestSize})`),null;if(!levelDetails.PTSKnown&&!this.startFragRequested&&-1===this.startPosition||pos<start){var _frag;canLoadParts&&!this.loadingParts&&(this.log("LL-Part loading ON for initial live fragment"),this.loadingParts=!0),frag=this.getInitialLiveFragment(levelDetails);const mainStart=this.hls.startPosition,liveSyncPosition=this.hls.liveSyncPosition,startPosition=frag?(-1!==mainStart&&mainStart>=start?mainStart:liveSyncPosition)||frag.start:pos;this.log(`Setting startPosition to ${startPosition} to match start frag at live edge. mainStart: ${mainStart} liveSyncPosition: ${liveSyncPosition} frag.start: ${null==(_frag=frag)?void 0:_frag.start}`),this.startPosition=this.nextLoadPosition=startPosition}}else pos<=start&&(frag=fragments[0]);if(!frag){const end=this.loadingParts?levelDetails.partEnd:levelDetails.fragmentEnd;frag=this.getFragmentAtPosition(pos,end,levelDetails)}let programFrag=this.filterReplacedPrimary(frag,levelDetails);if(!programFrag&&frag){const curSNIdx=frag.sn-levelDetails.startSN;programFrag=this.filterReplacedPrimary(fragments[curSNIdx+1]||null,levelDetails)}return this.mapToInitFragWhenRequired(programFrag)}isLoopLoading(frag,targetBufferTime){const trackerState=this.fragmentTracker.getState(frag);return(trackerState===FragmentState_OK||trackerState===FragmentState_PARTIAL&&!!frag.gap)&&this.nextLoadPosition>targetBufferTime}getNextFragmentLoopLoading(frag,levelDetails,bufferInfo,playlistType,maxBufLen){let nextFragment=null;if(frag.gap&&(nextFragment=this.getNextFragment(this.nextLoadPosition,levelDetails),nextFragment&&!nextFragment.gap&&bufferInfo.nextStart)){const nextbufferInfo=this.getFwdBufferInfoAtPos(this.mediaBuffer?this.mediaBuffer:this.media,bufferInfo.nextStart,playlistType,0);if(null!==nextbufferInfo&&bufferInfo.len+nextbufferInfo.len>=maxBufLen){const sn=nextFragment.sn;return this.loopSn!==sn&&(this.log(`buffer full after gaps in "${playlistType}" playlist starting at sn: ${sn}`),this.loopSn=sn),null}}return this.loopSn=void 0,nextFragment}get primaryPrefetch(){if(interstitialsEnabled(this.config)){var _this$hls$interstitia;if(null==(_this$hls$interstitia=this.hls.interstitialsManager)||null==(_this$hls$interstitia=_this$hls$interstitia.playingItem)?void 0:_this$hls$interstitia.event)return!0}return!1}filterReplacedPrimary(frag,details){if(!frag)return frag;if(interstitialsEnabled(this.config)&&frag.type!==PlaylistLevelType.SUBTITLE){const interstitials=this.hls.interstitialsManager,bufferingItem=null==interstitials?void 0:interstitials.bufferingItem;if(bufferingItem){const bufferingInterstitial=bufferingItem.event;if(bufferingInterstitial){if(bufferingInterstitial.appendInPlace||Math.abs(frag.start-bufferingItem.start)>1||0===bufferingItem.start)return null}else{if(frag.end<=bufferingItem.start&&!1===(null==details?void 0:details.live))return null;if(frag.start>bufferingItem.end&&bufferingItem.nextEvent&&(bufferingItem.nextEvent.appendInPlace||frag.start-bufferingItem.end>1))return null}}const playerQueue=null==interstitials?void 0:interstitials.playerQueue;if(playerQueue)for(let i=playerQueue.length;i--;){const interstitial=playerQueue[i].interstitial;if(interstitial.appendInPlace&&frag.start>=interstitial.startTime&&frag.end<=interstitial.resumeTime)return null}}return frag}mapToInitFragWhenRequired(frag){return null==frag||!frag.initSegment||frag.initSegment.data||this.bitrateTest?frag:frag.initSegment}getNextPart(partList,frag,targetBufferTime){let nextPart=-1,contiguous=!1,independentAttrOmitted=!0;for(let i=0,len=partList.length;i<len;i++){const part=partList[i];if(independentAttrOmitted=independentAttrOmitted&&!part.independent,nextPart>-1&&targetBufferTime<part.start)break;const loaded=part.loaded;loaded?nextPart=-1:(contiguous||(part.independent||independentAttrOmitted)&&part.fragment===frag)&&(part.fragment!==frag&&this.warn(`Need buffer at ${targetBufferTime} but next unloaded part starts at ${part.start}`),nextPart=i),contiguous=loaded}return nextPart}loadedEndOfParts(partList,targetBufferTime){let part;for(let i=partList.length;i--;){if(part=partList[i],!part.loaded)return!1;if(targetBufferTime>part.start)return!0}return!1}getInitialLiveFragment(levelDetails){const fragments=levelDetails.fragments,fragPrevious=this.fragPrevious;let frag=null;if(fragPrevious){if(levelDetails.hasProgramDateTime&&(this.log(`Live playlist, switching playlist, load frag with same PDT: ${fragPrevious.programDateTime}`),frag=function findFragmentByPDT(fragments,PDTValue,maxFragLookUpTolerance){if(null===PDTValue||!Array.isArray(fragments)||!fragments.length||!isFiniteNumber(PDTValue))return null;if(PDTValue<(fragments[0].programDateTime||0))return null;if(PDTValue>=(fragments[fragments.length-1].endProgramDateTime||0))return null;for(let seg=0;seg<fragments.length;++seg){const frag=fragments[seg];if(pdtWithinToleranceTest(PDTValue,maxFragLookUpTolerance,frag))return frag}return null}(fragments,fragPrevious.endProgramDateTime,this.config.maxFragLookUpTolerance)),!frag){const targetSN=fragPrevious.sn+1;if(targetSN>=levelDetails.startSN&&targetSN<=levelDetails.endSN){const fragNext=fragments[targetSN-levelDetails.startSN];fragPrevious.cc===fragNext.cc&&(frag=fragNext,this.log(`Live playlist, switching playlist, load frag with next SN: ${frag.sn}`))}frag||(frag=findNearestWithCC(levelDetails,fragPrevious.cc,fragPrevious.end),frag&&this.log(`Live playlist, switching playlist, load frag with same CC: ${frag.sn}`))}}else{const liveStart=this.hls.liveSyncPosition;null!==liveStart&&(frag=this.getFragmentAtPosition(liveStart,this.bitrateTest?levelDetails.fragmentEnd:levelDetails.edge,levelDetails))}return frag}getFragmentAtPosition(bufferEnd,end,levelDetails){const{config}=this;let{fragPrevious}=this,{fragments,endSN}=levelDetails;const{fragmentHint}=levelDetails,{maxFragLookUpTolerance}=config,partList=levelDetails.partList,loadingParts=!!(this.loadingParts&&null!=partList&&partList.length&&fragmentHint);let frag;if(loadingParts&&!this.bitrateTest&&partList[partList.length-1].fragment.sn===fragmentHint.sn&&(fragments=fragments.concat(fragmentHint),endSN=fragmentHint.sn),bufferEnd<end){var _this$media3;frag=findFragmentByPTS(fragPrevious,fragments,bufferEnd,bufferEnd<this.lastCurrentTime||bufferEnd>end-maxFragLookUpTolerance||null!=(_this$media3=this.media)&&_this$media3.paused||!this.startFragRequested?0:maxFragLookUpTolerance)}else frag=fragments[fragments.length-1];if(frag){const curSNIdx=frag.sn-levelDetails.startSN,fragState=this.fragmentTracker.getState(frag);if((fragState===FragmentState_OK||fragState===FragmentState_PARTIAL&&frag.gap)&&(fragPrevious=frag),fragPrevious&&frag.sn===fragPrevious.sn&&(!loadingParts||partList[0].fragment.sn>frag.sn||!levelDetails.live)){if(frag.level===fragPrevious.level){const nextFrag=fragments[curSNIdx+1];frag=frag.sn<endSN&&this.fragmentTracker.getState(nextFrag)!==FragmentState_OK?nextFrag:null}}}return frag}alignPlaylists(details,previousDetails,switchDetails){const length=details.fragments.length;if(!length)return this.warn("No fragments in live playlist"),0;const slidingStart=details.fragmentStart,firstLevelLoad=!previousDetails,aligned=details.alignedSliding&&isFiniteNumber(slidingStart);if(firstLevelLoad||!aligned&&!slidingStart){!function alignStream(switchDetails,details){switchDetails&&(alignDiscontinuities(details,switchDetails),details.alignedSliding||alignMediaPlaylistByPDT(details,switchDetails),details.alignedSliding||details.skippedSegments||adjustSliding(switchDetails,details,!1))}(switchDetails,details);const alignedSlidingStart=details.fragmentStart;return this.log(`Live playlist sliding: ${alignedSlidingStart.toFixed(2)} start-sn: ${previousDetails?previousDetails.startSN:"na"}->${details.startSN} fragments: ${length}`),alignedSlidingStart}return slidingStart}waitForCdnTuneIn(details){return details.live&&details.canBlockReload&&details.partTarget&&details.tuneInGoal>Math.max(details.partHoldBack,3*details.partTarget)}setStartPosition(details,sliding){let startPosition=this.startPosition;startPosition<sliding&&(startPosition=-1);const timelineOffset=this.timelineOffset;if(-1===startPosition){const offsetInMultivariantPlaylist=null!==this.startTimeOffset,startTimeOffset=offsetInMultivariantPlaylist?this.startTimeOffset:details.startTimeOffset;null!==startTimeOffset&&isFiniteNumber(startTimeOffset)?(startPosition=sliding+startTimeOffset,startTimeOffset<0&&(startPosition+=details.edge),startPosition=Math.min(Math.max(sliding,startPosition),sliding+details.totalduration),this.log(`Setting startPosition to ${startPosition} for start time offset ${startTimeOffset} found in ${offsetInMultivariantPlaylist?"multivariant":"media"} playlist`),this.startPosition=startPosition):details.live?(startPosition=this.hls.liveSyncPosition||sliding,this.log(`Setting startPosition to -1 to start at live edge ${startPosition}`),this.startPosition=-1):(this.log("setting startPosition to 0 by default"),this.startPosition=startPosition=0),this.lastCurrentTime=startPosition+timelineOffset}this.nextLoadPosition=startPosition+timelineOffset}getLoadPosition(){var _this$hls;const{media}=this;let pos=0;return null!=(_this$hls=this.hls)&&_this$hls.hasEnoughToStart&&media?pos=media.currentTime:this.nextLoadPosition>=0&&(pos=this.nextLoadPosition),pos}handleFragLoadAborted(frag,part){this.transmuxer&&frag.type===this.playlistType&&isMediaFragment(frag)&&frag.stats.aborted&&(this.log(`Fragment ${frag.sn}${part?" part "+part.index:""} of ${this.playlistLabel()} ${frag.level} was aborted`),this.resetFragmentLoading(frag))}resetFragmentLoading(frag){this.fragCurrent&&(this.fragContextChanged(frag)||this.state===State.FRAG_LOADING_WAITING_RETRY)||(this.state=State.IDLE)}onFragmentOrKeyLoadError(filterType,data){var _data$response;if(data.chunkMeta&&!data.frag){const context=this.getCurrentContext(data.chunkMeta);context&&(data.frag=context.frag)}const frag=data.frag;if(!frag||frag.type!==filterType||!this.levels)return;var _this$fragCurrent;if(this.fragContextChanged(frag))return void this.warn(`Frag load error must match current frag to retry ${frag.url} > ${null==(_this$fragCurrent=this.fragCurrent)?void 0:_this$fragCurrent.url}`);const gapTagEncountered=data.details===ErrorDetails.FRAG_GAP;gapTagEncountered&&this.fragmentTracker.fragBuffered(frag,!0);const errorAction=data.errorAction,{action,flags,retryCount=0,retryConfig}=errorAction||{},couldRetry=!!errorAction&&!!retryConfig,retry=couldRetry&&action===NetworkErrorAction.RetryRequest,noAlternate=couldRetry&&!errorAction.resolved&&flags===ErrorActionFlags.MoveAllAlternatesMatchingHost,httpStatus=(null==(_data$response=data.response)?void 0:_data$response.code)||0;if(!retry&&noAlternate&&isMediaFragment(frag)&&!frag.endList&&0!==httpStatus)this.resetFragmentErrors(filterType),this.treatAsGap(frag),errorAction.resolved=!0;else if((retry||noAlternate)&&retryCount<retryConfig.maxNumRetry){this.resetStartWhenNotLoaded(this.levelLastLoaded);const delay=getRetryDelay(retryConfig,retryCount);this.warn(`Fragment ${frag.sn} of ${filterType} ${frag.level} errored with ${data.details}, retrying loading ${retryCount+1}/${retryConfig.maxNumRetry} in ${delay}ms`),errorAction.resolved=!0,this.retryDate=self.performance.now()+delay,this.state=State.FRAG_LOADING_WAITING_RETRY}else if(retryConfig&&errorAction){if(this.resetFragmentErrors(filterType),!(retryCount<retryConfig.maxNumRetry))return void this.warn(`${data.details} reached or exceeded max retry (${retryCount})`);gapTagEncountered||action===NetworkErrorAction.RemoveAlternatePermanently||(errorAction.resolved=!0)}else action===NetworkErrorAction.SendAlternateToPenaltyBox?this.state=State.WAITING_LEVEL:this.state=State.ERROR;this.tickImmediate()}reduceLengthAndFlushBuffer(data){if(this.state===State.PARSING||this.state===State.PARSED){const frag=data.frag,playlistType=data.parent,bufferedInfo=this.getFwdBufferInfo(this.mediaBuffer,playlistType),buffered=bufferedInfo&&bufferedInfo.len>.5;buffered&&this.reduceMaxBufferLength(bufferedInfo.len,(null==frag?void 0:frag.duration)||10);const flushBuffer=!buffered;return flushBuffer&&this.warn(`Buffer full error while media.currentTime (${this.getLoadPosition()}) is not buffered, flush ${playlistType} buffer`),frag&&(this.fragmentTracker.removeFragment(frag),this.nextLoadPosition=frag.start),this.resetLoadingState(),flushBuffer}return!1}resetFragmentErrors(filterType){filterType===PlaylistLevelType.AUDIO&&(this.fragCurrent=null),this.hls.hasEnoughToStart||(this.startFragRequested=!1),this.state!==State.STOPPED&&(this.state=State.IDLE)}afterBufferFlushed(media,bufferType,playlistType){if(!media)return;const bufferedTimeRanges=BufferHelper.getBuffered(media);this.fragmentTracker.detectEvictedFragments(bufferType,bufferedTimeRanges,playlistType),this.state===State.ENDED&&this.resetLoadingState()}resetLoadingState(){this.log("Reset loading state"),this.fragCurrent=null,this.fragPrevious=null,this.state!==State.STOPPED&&(this.state=State.IDLE)}resetStartWhenNotLoaded(level){if(!this.hls.hasEnoughToStart){this.startFragRequested=!1;const details=level?level.details:null;null!=details&&details.live?(this.log("resetting startPosition for live start"),this.startPosition=-1,this.setStartPosition(details,details.fragmentStart),this.resetLoadingState()):this.nextLoadPosition=this.startPosition}}resetWhenMissingContext(chunkMeta){this.warn(`The loading context changed while buffering fragment ${chunkMeta.sn} of ${this.playlistLabel()} ${chunkMeta.level}. This chunk will not be buffered.`),this.removeUnbufferedFrags(),this.resetStartWhenNotLoaded(this.levelLastLoaded),this.resetLoadingState()}removeUnbufferedFrags(start=0){this.fragmentTracker.removeFragmentsInRange(start,1/0,this.playlistType,!1,!0)}updateLevelTiming(frag,part,level,partial){const details=level.details;if(!details)return void this.warn("level.details undefined");var _this$transmuxer;if(!Object.keys(frag.elementaryStreams).reduce(((result,type)=>{const info=frag.elementaryStreams[type];if(info){const parsedDuration=info.endPTS-info.startPTS;if(parsedDuration<=0)return this.warn(`Could not parse fragment ${frag.sn} ${type} duration reliably (${parsedDuration})`),result||!1;const drift=partial?0:updateFragPTSDTS(details,frag,info.startPTS,info.endPTS,info.startDTS,info.endDTS,this);return this.hls.trigger(Events.LEVEL_PTS_UPDATED,{details,level,drift,type,frag,start:info.startPTS,end:info.endPTS}),!0}return result}),!1)&&(0===level.fragmentError&&this.treatAsGap(frag,level),null===(null==(_this$transmuxer=this.transmuxer)?void 0:_this$transmuxer.error))){const error=new Error(`Found no media in fragment ${frag.sn} of ${this.playlistLabel()} ${frag.level} resetting transmuxer to fallback to playlist timing`);if(this.warn(error.message),this.hls.trigger(Events.ERROR,{type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.FRAG_PARSING_ERROR,fatal:!1,error,frag,reason:`Found no media in msn ${frag.sn} of ${this.playlistLabel()} "${level.url}"`}),!this.hls)return;this.resetTransmuxer()}this.state=State.PARSED,this.log(`Parsed ${frag.type} sn: ${frag.sn}${part?" part: "+part.index:""} of ${this.fragInfo(frag,!1,part)})`),this.hls.trigger(Events.FRAG_PARSED,{frag,part})}playlistLabel(){return this.playlistType===PlaylistLevelType.MAIN?"level":"track"}fragInfo(frag,pts=!0,part){var _ref,_ref2;return`${this.playlistLabel()} ${frag.level} (${part?"part":"frag"}:[${(null!=(_ref=pts&&!part?frag.startPTS:(part||frag).start)?_ref:NaN).toFixed(3)}-${(null!=(_ref2=pts&&!part?frag.endPTS:(part||frag).end)?_ref2:NaN).toFixed(3)}]${part&&"main"===frag.type?"INDEPENDENT="+(part.independent?"YES":"NO"):""}`}treatAsGap(frag,level){level&&level.fragmentError++,frag.gap=!0,this.fragmentTracker.removeFragment(frag),this.fragmentTracker.fragBuffered(frag,!0)}resetTransmuxer(){var _this$transmuxer2;null==(_this$transmuxer2=this.transmuxer)||_this$transmuxer2.reset()}recoverWorkerError(data){"demuxerWorker"===data.event&&(this.fragmentTracker.removeAllFragments(),this.transmuxer&&(this.transmuxer.destroy(),this.transmuxer=null),this.resetStartWhenNotLoaded(this.levelLastLoaded),this.resetLoadingState())}set state(nextState){const previousState=this._state;previousState!==nextState&&(this._state=nextState,this.log(`${previousState}->${nextState}`))}get state(){return this._state}}function interstitialsEnabled(config){return!!config.interstitialsController&&!1!==config.enableInterstitialPlayback}class ChunkCache{constructor(){this.chunks=[],this.dataLength=0}push(chunk){this.chunks.push(chunk),this.dataLength+=chunk.length}flush(){const{chunks,dataLength}=this;let result;return chunks.length?(result=1===chunks.length?chunks[0]:function concatUint8Arrays(chunks,dataLength){const result=new Uint8Array(dataLength);let offset=0;for(let i=0;i<chunks.length;i++){const chunk=chunks[i];result.set(chunk,offset),offset+=chunk.length}return result}(chunks,dataLength),this.reset(),result):new Uint8Array(0)}reset(){this.chunks.length=0,this.dataLength=0}}var hasRequiredEventemitter3,eventemitter3={exports:{}};var eventemitter3Exports=function requireEventemitter3(){return hasRequiredEventemitter3||(hasRequiredEventemitter3=1,function(module){var has=Object.prototype.hasOwnProperty,prefix="~";function Events(){}function EE(fn,context,once){this.fn=fn,this.context=context,this.once=once||!1}function addListener(emitter,event,fn,context,once){if("function"!=typeof fn)throw new TypeError("The listener must be a function");var listener=new EE(fn,context||emitter,once),evt=prefix?prefix+event:event;return emitter._events[evt]?emitter._events[evt].fn?emitter._events[evt]=[emitter._events[evt],listener]:emitter._events[evt].push(listener):(emitter._events[evt]=listener,emitter._eventsCount++),emitter}function clearEvent(emitter,evt){0==--emitter._eventsCount?emitter._events=new Events:delete emitter._events[evt]}function EventEmitter(){this._events=new Events,this._eventsCount=0}Object.create&&(Events.prototype=Object.create(null),(new Events).__proto__||(prefix=!1)),EventEmitter.prototype.eventNames=function eventNames(){var events,name,names=[];if(0===this._eventsCount)return names;for(name in events=this._events)has.call(events,name)&&names.push(prefix?name.slice(1):name);return Object.getOwnPropertySymbols?names.concat(Object.getOwnPropertySymbols(events)):names},EventEmitter.prototype.listeners=function listeners(event){var evt=prefix?prefix+event:event,handlers=this._events[evt];if(!handlers)return[];if(handlers.fn)return[handlers.fn];for(var i=0,l=handlers.length,ee=new Array(l);i<l;i++)ee[i]=handlers[i].fn;return ee},EventEmitter.prototype.listenerCount=function listenerCount(event){var evt=prefix?prefix+event:event,listeners=this._events[evt];return listeners?listeners.fn?1:listeners.length:0},EventEmitter.prototype.emit=function emit(event,a1,a2,a3,a4,a5){var evt=prefix?prefix+event:event;if(!this._events[evt])return!1;var args,i,listeners=this._events[evt],len=arguments.length;if(listeners.fn){switch(listeners.once&&this.removeListener(event,listeners.fn,void 0,!0),len){case 1:return listeners.fn.call(listeners.context),!0;case 2:return listeners.fn.call(listeners.context,a1),!0;case 3:return listeners.fn.call(listeners.context,a1,a2),!0;case 4:return listeners.fn.call(listeners.context,a1,a2,a3),!0;case 5:return listeners.fn.call(listeners.context,a1,a2,a3,a4),!0;case 6:return listeners.fn.call(listeners.context,a1,a2,a3,a4,a5),!0}for(i=1,args=new Array(len-1);i<len;i++)args[i-1]=arguments[i];listeners.fn.apply(listeners.context,args)}else{var j,length=listeners.length;for(i=0;i<length;i++)switch(listeners[i].once&&this.removeListener(event,listeners[i].fn,void 0,!0),len){case 1:listeners[i].fn.call(listeners[i].context);break;case 2:listeners[i].fn.call(listeners[i].context,a1);break;case 3:listeners[i].fn.call(listeners[i].context,a1,a2);break;case 4:listeners[i].fn.call(listeners[i].context,a1,a2,a3);break;default:if(!args)for(j=1,args=new Array(len-1);j<len;j++)args[j-1]=arguments[j];listeners[i].fn.apply(listeners[i].context,args)}}return!0},EventEmitter.prototype.on=function on(event,fn,context){return addListener(this,event,fn,context,!1)},EventEmitter.prototype.once=function once(event,fn,context){return addListener(this,event,fn,context,!0)},EventEmitter.prototype.removeListener=function removeListener(event,fn,context,once){var evt=prefix?prefix+event:event;if(!this._events[evt])return this;if(!fn)return clearEvent(this,evt),this;var listeners=this._events[evt];if(listeners.fn)listeners.fn!==fn||once&&!listeners.once||context&&listeners.context!==context||clearEvent(this,evt);else{for(var i=0,events=[],length=listeners.length;i<length;i++)(listeners[i].fn!==fn||once&&!listeners[i].once||context&&listeners[i].context!==context)&&events.push(listeners[i]);events.length?this._events[evt]=1===events.length?events[0]:events:clearEvent(this,evt)}return this},EventEmitter.prototype.removeAllListeners=function removeAllListeners(event){var evt;return event?(evt=prefix?prefix+event:event,this._events[evt]&&clearEvent(this,evt)):(this._events=new Events,this._eventsCount=0),this},EventEmitter.prototype.off=EventEmitter.prototype.removeListener,EventEmitter.prototype.addListener=EventEmitter.prototype.on,EventEmitter.prefixed=prefix,EventEmitter.EventEmitter=EventEmitter,module.exports=EventEmitter}(eventemitter3)),eventemitter3.exports}(),EventEmitter=getDefaultExportFromCjs(eventemitter3Exports);const workerStore={};function isId3Footer(data,offset){return offset+10<=data.length&&51===data[offset]&&68===data[offset+1]&&73===data[offset+2]&&data[offset+3]<255&&data[offset+4]<255&&data[offset+6]<128&&data[offset+7]<128&&data[offset+8]<128&&data[offset+9]<128}function isId3Header(data,offset){return offset+10<=data.length&&73===data[offset]&&68===data[offset+1]&&51===data[offset+2]&&data[offset+3]<255&&data[offset+4]<255&&data[offset+6]<128&&data[offset+7]<128&&data[offset+8]<128&&data[offset+9]<128}function readId3Size(data,offset){let size=0;return size=(127&data[offset])<<21,size|=(127&data[offset+1])<<14,size|=(127&data[offset+2])<<7,size|=127&data[offset+3],size}function getId3Data(data,offset){const front=offset;let length=0;for(;isId3Header(data,offset);){length+=10;length+=readId3Size(data,offset+6),isId3Footer(data,offset+10)&&(length+=10),offset+=length}if(length>0)return data.subarray(front,front+length)}function isHeaderPattern$1(data,offset){return 255===data[offset]&&240==(246&data[offset+1])}function getHeaderLength(data,offset){return 1&data[offset+1]?7:9}function getFullFrameLength(data,offset){return(3&data[offset+3])<<11|data[offset+4]<<3|(224&data[offset+5])>>>5}function isHeader$1(data,offset){return offset+1<data.length&&isHeaderPattern$1(data,offset)}function probe$1(data,offset){if(isHeader$1(data,offset)){const headerLength=getHeaderLength(data,offset);if(offset+headerLength>=data.length)return!1;const frameLength=getFullFrameLength(data,offset);if(frameLength<=headerLength)return!1;const newOffset=offset+frameLength;return newOffset===data.length||isHeader$1(data,newOffset)}return!1}function initTrackConfig(track,observer,data,offset,audioCodec){if(!track.samplerate){const config=function getAudioConfig(observer,data,offset,manifestCodec){const byte2=data[offset+2],adtsSamplingIndex=byte2>>2&15;if(adtsSamplingIndex>12){const error=new Error(`invalid ADTS sampling index:${adtsSamplingIndex}`);return void observer.emit(Events.ERROR,Events.ERROR,{type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.FRAG_PARSING_ERROR,fatal:!0,error,reason:error.message})}const adtsObjectType=1+(byte2>>6&3),channelCount=data[offset+3]>>6&3|(1&byte2)<<2,codec="mp4a.40."+adtsObjectType,samplerate=[96e3,88200,64e3,48e3,44100,32e3,24e3,22050,16e3,12e3,11025,8e3,7350][adtsSamplingIndex];let aacSampleIndex=adtsSamplingIndex;5!==adtsObjectType&&29!==adtsObjectType||(aacSampleIndex-=3);const config=[adtsObjectType<<3|(14&aacSampleIndex)>>1,(1&aacSampleIndex)<<7|channelCount<<3];return logger.log(`manifest codec:${manifestCodec}, parsed codec:${codec}, channels:${channelCount}, rate:${samplerate} (ADTS object type:${adtsObjectType} sampling index:${adtsSamplingIndex})`),{config,samplerate,channelCount,codec,parsedCodec:codec,manifestCodec}}(observer,data,offset,audioCodec);if(!config)return;_extends(track,config)}}function getFrameDuration(samplerate){return 9216e4/samplerate}function appendFrame$2(track,data,offset,pts,frameIndex){const stamp=pts+frameIndex*getFrameDuration(track.samplerate),header=function parseFrameHeader(data,offset){const headerLength=getHeaderLength(data,offset);if(offset+headerLength<=data.length){const frameLength=getFullFrameLength(data,offset)-headerLength;if(frameLength>0)return{headerLength,frameLength}}}(data,offset);let unit;if(header){const{frameLength,headerLength}=header,_length=headerLength+frameLength,missing=Math.max(0,offset+_length-data.length);missing?(unit=new Uint8Array(_length-headerLength),unit.set(data.subarray(offset+headerLength,data.length),0)):unit=data.subarray(offset+headerLength,offset+_length);const _sample={unit,pts:stamp};return missing||track.samples.push(_sample),{sample:_sample,length:_length,missing}}const length=data.length-offset;unit=new Uint8Array(length),unit.set(data.subarray(offset,data.length),0);return{sample:{unit,pts:stamp},length,missing:-1}}function canParseId3(data,offset){return isId3Header(data,offset)&&readId3Size(data,offset+6)+10<=data.length-offset}function toUint8(data,offset=0,length=1/0){return function view(data,offset,length,Type){const buffer=function unsafeGetArrayBuffer(view){return view instanceof ArrayBuffer?view:view.buffer}(data);let bytesPerElement=1;"BYTES_PER_ELEMENT"in Type&&(bytesPerElement=Type.BYTES_PER_ELEMENT);const dataOffset=function isArrayBufferView(obj){return obj&&obj.buffer instanceof ArrayBuffer&&void 0!==obj.byteLength&&void 0!==obj.byteOffset}(data)?data.byteOffset:0,dataEnd=(dataOffset+data.byteLength)/bytesPerElement,rawStart=(dataOffset+offset)/bytesPerElement,start=Math.floor(Math.max(0,Math.min(rawStart,dataEnd))),end=Math.floor(Math.min(start+Math.max(length,0),dataEnd));return new Type(buffer,start,end-start)}(data,offset,length,Uint8Array)}function decodeId3ImageFrame(frame){const metadataFrame={key:frame.type,description:"",data:"",mimeType:null,pictureType:null};if(frame.size<2)return;if(3!==frame.data[0])return void console.log("Ignore frame with unrecognized character encoding");const mimeTypeEndIndex=frame.data.subarray(1).indexOf(0);if(-1===mimeTypeEndIndex)return;const mimeType=utf8ArrayToStr(toUint8(frame.data,1,mimeTypeEndIndex)),pictureType=frame.data[2+mimeTypeEndIndex],descriptionEndIndex=frame.data.subarray(3+mimeTypeEndIndex).indexOf(0);if(-1===descriptionEndIndex)return;const description=utf8ArrayToStr(toUint8(frame.data,3+mimeTypeEndIndex,descriptionEndIndex));let data;return data="--\x3e"===mimeType?utf8ArrayToStr(toUint8(frame.data,4+mimeTypeEndIndex+descriptionEndIndex)):function toArrayBuffer(view){return view instanceof ArrayBuffer?view:0==view.byteOffset&&view.byteLength==view.buffer.byteLength?view.buffer:new Uint8Array(view).buffer}(frame.data.subarray(4+mimeTypeEndIndex+descriptionEndIndex)),metadataFrame.mimeType=mimeType,metadataFrame.pictureType=pictureType,metadataFrame.description=description,metadataFrame.data=data,metadataFrame}function decodeId3Frame(frame){return"PRIV"===frame.type?function decodeId3PrivFrame(frame){if(frame.size<2)return;const owner=utf8ArrayToStr(frame.data,!0),privateData=new Uint8Array(frame.data.subarray(owner.length+1));return{key:frame.type,info:owner,data:privateData.buffer}}(frame):"W"===frame.type[0]?function decodeId3UrlFrame(frame){if("WXXX"===frame.type){if(frame.size<2)return;let index=1;const description=utf8ArrayToStr(frame.data.subarray(index),!0);index+=description.length+1;const value=utf8ArrayToStr(frame.data.subarray(index));return{key:frame.type,info:description,data:value}}const url=utf8ArrayToStr(frame.data);return{key:frame.type,info:"",data:url}}(frame):"APIC"===frame.type?decodeId3ImageFrame(frame):function decodeId3TextFrame(frame){if(frame.size<2)return;if("TXXX"===frame.type){let index=1;const description=utf8ArrayToStr(frame.data.subarray(index),!0);index+=description.length+1;const value=utf8ArrayToStr(frame.data.subarray(index));return{key:frame.type,info:description,data:value}}const text=utf8ArrayToStr(frame.data.subarray(1));return{key:frame.type,info:"",data:text}}(frame)}function getId3FrameData(data){const type=String.fromCharCode(data[0],data[1],data[2],data[3]),size=readId3Size(data,4);return{type,size,data:data.subarray(10,10+size)}}const HEADER_FOOTER_SIZE=10,FRAME_SIZE=10;function getId3Frames(id3Data){let offset=0;const frames=[];for(;isId3Header(id3Data,offset);){const size=readId3Size(id3Data,offset+6);id3Data[offset+5]>>6&1&&(offset+=HEADER_FOOTER_SIZE),offset+=HEADER_FOOTER_SIZE;const end=offset+size;for(;offset+FRAME_SIZE<end;){const frameData=getId3FrameData(id3Data.subarray(offset)),frame=decodeId3Frame(frameData);frame&&frames.push(frame),offset+=frameData.size+HEADER_FOOTER_SIZE}isId3Footer(id3Data,offset)&&(offset+=HEADER_FOOTER_SIZE)}return frames}function isId3TimestampFrame(frame){return frame&&"PRIV"===frame.key&&"com.apple.streaming.transportStreamTimestamp"===frame.info}function readId3Timestamp(timeStampFrame){if(8===timeStampFrame.data.byteLength){const data=new Uint8Array(timeStampFrame.data),pts33Bit=1&data[3];let timestamp=(data[4]<<23)+(data[5]<<15)+(data[6]<<7)+data[7];return timestamp/=45,pts33Bit&&(timestamp+=47721858.84),Math.round(timestamp)}}function getId3Timestamp(data){const frames=getId3Frames(data);for(let i=0;i<frames.length;i++){const frame=frames[i];if(isId3TimestampFrame(frame))return readId3Timestamp(frame)}}let MetadataSchema=function(MetadataSchema){return MetadataSchema.audioId3="org.id3",MetadataSchema.dateRange="com.apple.quicktime.HLS",MetadataSchema.emsg="https://aomedia.org/emsg/ID3",MetadataSchema.misbklv="urn:misb:KLV:bin:1910.1",MetadataSchema}({});function dummyTrack(type="",inputTimeScale=9e4){return{type,id:-1,pid:-1,inputTimeScale,sequenceNumber:-1,samples:[],dropped:0}}class BaseAudioDemuxer{constructor(){this._audioTrack=void 0,this._id3Track=void 0,this.frameIndex=0,this.cachedData=null,this.basePTS=null,this.initPTS=null,this.lastPTS=null}resetInitSegment(initSegment,audioCodec,videoCodec,trackDuration){this._id3Track={type:"id3",id:3,pid:-1,inputTimeScale:9e4,sequenceNumber:0,samples:[],dropped:0}}resetTimeStamp(deaultTimestamp){this.initPTS=deaultTimestamp,this.resetContiguity()}resetContiguity(){this.basePTS=null,this.lastPTS=null,this.frameIndex=0}canParse(data,offset){return!1}appendFrame(track,data,offset){}demux(data,timeOffset){this.cachedData&&(data=appendUint8Array(this.cachedData,data),this.cachedData=null);let lastDataIndex,id3Data=getId3Data(data,0),offset=id3Data?id3Data.length:0;const track=this._audioTrack,id3Track=this._id3Track,timestamp=id3Data?getId3Timestamp(id3Data):void 0,length=data.length;for((null===this.basePTS||0===this.frameIndex&&isFiniteNumber(timestamp))&&(this.basePTS=initPTSFn(timestamp,timeOffset,this.initPTS),this.lastPTS=this.basePTS),null===this.lastPTS&&(this.lastPTS=this.basePTS),id3Data&&id3Data.length>0&&id3Track.samples.push({pts:this.lastPTS,dts:this.lastPTS,data:id3Data,type:MetadataSchema.audioId3,duration:Number.POSITIVE_INFINITY});offset<length;){if(this.canParse(data,offset)){const frame=this.appendFrame(track,data,offset);frame?(this.frameIndex++,this.lastPTS=frame.sample.pts,offset+=frame.length,lastDataIndex=offset):offset=length}else canParseId3(data,offset)?(id3Data=getId3Data(data,offset),id3Track.samples.push({pts:this.lastPTS,dts:this.lastPTS,data:id3Data,type:MetadataSchema.audioId3,duration:Number.POSITIVE_INFINITY}),offset+=id3Data.length,lastDataIndex=offset):offset++;if(offset===length&&lastDataIndex!==length){const partialData=data.slice(lastDataIndex);this.cachedData?this.cachedData=appendUint8Array(this.cachedData,partialData):this.cachedData=partialData}}return{audioTrack:track,videoTrack:dummyTrack(),id3Track,textTrack:dummyTrack()}}demuxSampleAes(data,keyData,timeOffset){return Promise.reject(new Error(`[${this}] This demuxer does not support Sample-AES decryption`))}flush(timeOffset){const cachedData=this.cachedData;return cachedData&&(this.cachedData=null,this.demux(cachedData,0)),{audioTrack:this._audioTrack,videoTrack:dummyTrack(),id3Track:this._id3Track,textTrack:dummyTrack()}}destroy(){this.cachedData=null,this._audioTrack=this._id3Track=void 0}}const initPTSFn=(timestamp,timeOffset,initPTS)=>{if(isFiniteNumber(timestamp))return 90*timestamp;return 9e4*timeOffset+(initPTS?9e4*initPTS.baseTime/initPTS.timescale:0)};let chromeVersion$1=null;const BitratesMap=[32,64,96,128,160,192,224,256,288,320,352,384,416,448,32,48,56,64,80,96,112,128,160,192,224,256,320,384,32,40,48,56,64,80,96,112,128,160,192,224,256,320,32,48,56,64,80,96,112,128,144,160,176,192,224,256,8,16,24,32,40,48,56,64,80,96,112,128,144,160],SamplingRateMap=[44100,48e3,32e3,22050,24e3,16e3,11025,12e3,8e3],SamplesCoefficients=[[0,72,144,12],[0,0,0,0],[0,72,144,12],[0,144,144,12]],BytesInSlot=[0,1,1,4];function appendFrame$1(track,data,offset,pts,frameIndex){if(offset+24>data.length)return;const header=parseHeader(data,offset);if(header&&offset+header.frameLength<=data.length){const stamp=pts+frameIndex*(9e4*header.samplesPerFrame/header.sampleRate),sample={unit:data.subarray(offset,offset+header.frameLength),pts:stamp,dts:stamp};return track.config=[],track.channelCount=header.channelCount,track.samplerate=header.sampleRate,track.samples.push(sample),{sample,length:header.frameLength,missing:0}}}function parseHeader(data,offset){const mpegVersion=data[offset+1]>>3&3,mpegLayer=data[offset+1]>>1&3,bitRateIndex=data[offset+2]>>4&15,sampleRateIndex=data[offset+2]>>2&3;if(1!==mpegVersion&&0!==bitRateIndex&&15!==bitRateIndex&&3!==sampleRateIndex){const paddingBit=data[offset+2]>>1&1,channelMode=data[offset+3]>>6,bitRate=1e3*BitratesMap[14*(3===mpegVersion?3-mpegLayer:3===mpegLayer?3:4)+bitRateIndex-1],sampleRate=SamplingRateMap[3*(3===mpegVersion?0:2===mpegVersion?1:2)+sampleRateIndex],channelCount=3===channelMode?1:2,sampleCoefficient=SamplesCoefficients[mpegVersion][mpegLayer],bytesInSlot=BytesInSlot[mpegLayer],samplesPerFrame=8*sampleCoefficient*bytesInSlot,frameLength=Math.floor(sampleCoefficient*bitRate/sampleRate+paddingBit)*bytesInSlot;if(null===chromeVersion$1){const result=(navigator.userAgent||"").match(/Chrome\/(\d+)/i);chromeVersion$1=result?parseInt(result[1]):0}return!!chromeVersion$1&&chromeVersion$1<=87&&2===mpegLayer&&bitRate>=224e3&&0===channelMode&&(data[offset+3]=128|data[offset+3]),{sampleRate,channelCount,frameLength,samplesPerFrame}}}function isHeaderPattern(data,offset){return!(255!==data[offset]||224&~data[offset+1]||!(6&data[offset+1]))}function isHeader(data,offset){return offset+1<data.length&&isHeaderPattern(data,offset)}function probe(data,offset){if(offset+1<data.length&&isHeaderPattern(data,offset)){const headerLength=4,header=parseHeader(data,offset);let frameLength=headerLength;null!=header&&header.frameLength&&(frameLength=header.frameLength);const newOffset=offset+frameLength;return newOffset===data.length||isHeader(data,newOffset)}return!1}const getAudioBSID=(data,offset)=>{let bsid=0,numBits=5;offset+=numBits;const temp=new Uint32Array(1),mask=new Uint32Array(1),byte=new Uint8Array(1);for(;numBits>0;){byte[0]=data[offset];const bits=Math.min(numBits,8),shift=8-bits;mask[0]=4278190080>>>24+shift<<shift,temp[0]=(byte[0]&mask[0])>>shift,bsid=bsid?bsid<<bits|temp[0]:temp[0],offset+=1,numBits-=bits}return bsid};class AC3Demuxer extends BaseAudioDemuxer{constructor(observer){super(),this.observer=void 0,this.observer=observer}resetInitSegment(initSegment,audioCodec,videoCodec,trackDuration){super.resetInitSegment(initSegment,audioCodec,videoCodec,trackDuration),this._audioTrack={container:"audio/ac-3",type:"audio",id:2,pid:-1,sequenceNumber:0,segmentCodec:"ac3",samples:[],manifestCodec:audioCodec,duration:trackDuration,inputTimeScale:9e4,dropped:0}}canParse(data,offset){return offset+64<data.length}appendFrame(track,data,offset){const frameLength=appendFrame(track,data,offset,this.basePTS,this.frameIndex);if(-1!==frameLength){return{sample:track.samples[track.samples.length-1],length:frameLength,missing:0}}}static probe(data){if(!data)return!1;const id3Data=getId3Data(data,0);if(!id3Data)return!1;const offset=id3Data.length;return 11===data[offset]&&119===data[offset+1]&&void 0!==getId3Timestamp(id3Data)&&getAudioBSID(data,offset)<16}}function appendFrame(track,data,start,pts,frameIndex){if(start+8>data.length)return-1;if(11!==data[start]||119!==data[start+1])return-1;const samplingRateCode=data[start+4]>>6;if(samplingRateCode>=3)return-1;const sampleRate=[48e3,44100,32e3][samplingRateCode],frameSizeCode=63&data[start+4],frameLength=2*[64,69,96,64,70,96,80,87,120,80,88,120,96,104,144,96,105,144,112,121,168,112,122,168,128,139,192,128,140,192,160,174,240,160,175,240,192,208,288,192,209,288,224,243,336,224,244,336,256,278,384,256,279,384,320,348,480,320,349,480,384,417,576,384,418,576,448,487,672,448,488,672,512,557,768,512,558,768,640,696,960,640,697,960,768,835,1152,768,836,1152,896,975,1344,896,976,1344,1024,1114,1536,1024,1115,1536,1152,1253,1728,1152,1254,1728,1280,1393,1920,1280,1394,1920][3*frameSizeCode+samplingRateCode];if(start+frameLength>data.length)return-1;const channelMode=data[start+6]>>5;let skipCount=0;2===channelMode?skipCount+=2:(1&channelMode&&1!==channelMode&&(skipCount+=2),4&channelMode&&(skipCount+=2));const lfeon=(data[start+6]<<8|data[start+7])>>12-skipCount&1,channelCount=[2,1,2,3,3,4,4,5][channelMode]+lfeon,bsid=data[start+5]>>3,bsmod=7&data[start+5],config=new Uint8Array([samplingRateCode<<6|bsid<<1|bsmod>>2,(3&bsmod)<<6|channelMode<<3|lfeon<<2|frameSizeCode>>4,frameSizeCode<<4&224]),stamp=pts+frameIndex*(1536/sampleRate*9e4),unit=data.subarray(start,start+frameLength);return track.config=config,track.channelCount=channelCount,track.samplerate=sampleRate,track.samples.push({unit,pts:stamp}),frameLength}const emsgSchemePattern=/\/emsg[-/]ID3/i;function getEmsgStartTime(emsgInfo,timeOffset){return isFiniteNumber(emsgInfo.presentationTime)?emsgInfo.presentationTime/emsgInfo.timeScale:timeOffset+emsgInfo.presentationTimeDelta/emsgInfo.timeScale}class SampleAesDecrypter{constructor(observer,config,keyData){this.keyData=void 0,this.decrypter=void 0,this.keyData=keyData,this.decrypter=new Decrypter(config,{removePKCS7Padding:!1})}decryptBuffer(encryptedData){return this.decrypter.decrypt(encryptedData,this.keyData.key.buffer,this.keyData.iv.buffer,DecrypterAesMode_cbc)}decryptAacSample(samples,sampleIndex,callback){const curUnit=samples[sampleIndex].unit;if(curUnit.length<=16)return;const encryptedData=curUnit.subarray(16,curUnit.length-curUnit.length%16),encryptedBuffer=encryptedData.buffer.slice(encryptedData.byteOffset,encryptedData.byteOffset+encryptedData.length);this.decryptBuffer(encryptedBuffer).then((decryptedBuffer=>{const decryptedData=new Uint8Array(decryptedBuffer);curUnit.set(decryptedData,16),this.decrypter.isSync()||this.decryptAacSamples(samples,sampleIndex+1,callback)}))}decryptAacSamples(samples,sampleIndex,callback){for(;;sampleIndex++){if(sampleIndex>=samples.length)return void callback();if(!(samples[sampleIndex].unit.length<32)&&(this.decryptAacSample(samples,sampleIndex,callback),!this.decrypter.isSync()))return}}getAvcEncryptedData(decodedData){const encryptedDataLen=16*Math.floor((decodedData.length-48)/160)+16,encryptedData=new Int8Array(encryptedDataLen);let outputPos=0;for(let inputPos=32;inputPos<decodedData.length-16;inputPos+=160,outputPos+=16)encryptedData.set(decodedData.subarray(inputPos,inputPos+16),outputPos);return encryptedData}getAvcDecryptedUnit(decodedData,decryptedData){const uint8DecryptedData=new Uint8Array(decryptedData);let inputPos=0;for(let outputPos=32;outputPos<decodedData.length-16;outputPos+=160,inputPos+=16)decodedData.set(uint8DecryptedData.subarray(inputPos,inputPos+16),outputPos);return decodedData}decryptAvcSample(samples,sampleIndex,unitIndex,callback,curUnit){const decodedData=discardEPB(curUnit.data),encryptedData=this.getAvcEncryptedData(decodedData);this.decryptBuffer(encryptedData.buffer).then((decryptedBuffer=>{curUnit.data=this.getAvcDecryptedUnit(decodedData,decryptedBuffer),this.decrypter.isSync()||this.decryptAvcSamples(samples,sampleIndex,unitIndex+1,callback)}))}decryptAvcSamples(samples,sampleIndex,unitIndex,callback){if(samples instanceof Uint8Array)throw new Error("Cannot decrypt samples of type Uint8Array");for(;;sampleIndex++,unitIndex=0){if(sampleIndex>=samples.length)return void callback();const curUnits=samples[sampleIndex].units;for(;!(unitIndex>=curUnits.length);unitIndex++){const curUnit=curUnits[unitIndex];if(!(curUnit.data.length<=48||1!==curUnit.type&&5!==curUnit.type||(this.decryptAvcSample(samples,sampleIndex,unitIndex,callback,curUnit),this.decrypter.isSync())))return}}}}class BaseVideoParser{constructor(){this.VideoSample=null}createVideoSample(key,pts,dts){return{key,frame:!1,pts,dts,units:[],length:0}}getLastNalUnit(samples){var _VideoSample;let lastUnit,VideoSample=this.VideoSample;if(VideoSample&&0!==VideoSample.units.length||(VideoSample=samples[samples.length-1]),null!=(_VideoSample=VideoSample)&&_VideoSample.units){const units=VideoSample.units;lastUnit=units[units.length-1]}return lastUnit}pushAccessUnit(VideoSample,videoTrack){if(VideoSample.units.length&&VideoSample.frame){if(void 0===VideoSample.pts){const samples=videoTrack.samples,nbSamples=samples.length;if(!nbSamples)return void videoTrack.dropped++;{const lastSample=samples[nbSamples-1];VideoSample.pts=lastSample.pts,VideoSample.dts=lastSample.dts}}videoTrack.samples.push(VideoSample)}}parseNALu(track,array,endOfSegment){const len=array.byteLength;let state=track.naluState||0;const lastState=state,units=[];let value,overflow,unitType,i=0,lastUnitStart=-1,lastUnitType=0;for(-1===state&&(lastUnitStart=0,lastUnitType=this.getNALuType(array,0),state=0,i=1);i<len;)if(value=array[i++],state)if(1!==state)if(value)if(1===value){if(overflow=i-state-1,lastUnitStart>=0){const unit={data:array.subarray(lastUnitStart,overflow),type:lastUnitType};units.push(unit)}else{const lastUnit=this.getLastNalUnit(track.samples);lastUnit&&(lastState&&i<=4-lastState&&lastUnit.state&&(lastUnit.data=lastUnit.data.subarray(0,lastUnit.data.byteLength-lastState)),overflow>0&&(lastUnit.data=appendUint8Array(lastUnit.data,array.subarray(0,overflow)),lastUnit.state=0))}i<len?(unitType=this.getNALuType(array,i),lastUnitStart=i,lastUnitType=unitType,state=0):state=-1}else state=0;else state=3;else state=value?0:2;else state=value?0:1;if(lastUnitStart>=0&&state>=0){const unit={data:array.subarray(lastUnitStart,len),type:lastUnitType,state};units.push(unit)}if(0===units.length){const lastUnit=this.getLastNalUnit(track.samples);lastUnit&&(lastUnit.data=appendUint8Array(lastUnit.data,array))}return track.naluState=state,units}}class ExpGolomb{constructor(data){this.data=void 0,this.bytesAvailable=void 0,this.word=void 0,this.bitsAvailable=void 0,this.data=data,this.bytesAvailable=data.byteLength,this.word=0,this.bitsAvailable=0}loadWord(){const data=this.data,bytesAvailable=this.bytesAvailable,position=data.byteLength-bytesAvailable,workingBytes=new Uint8Array(4),availableBytes=Math.min(4,bytesAvailable);if(0===availableBytes)throw new Error("no bytes available");workingBytes.set(data.subarray(position,position+availableBytes)),this.word=new DataView(workingBytes.buffer).getUint32(0),this.bitsAvailable=8*availableBytes,this.bytesAvailable-=availableBytes}skipBits(count){let skipBytes;count=Math.min(count,8*this.bytesAvailable+this.bitsAvailable),this.bitsAvailable>count?(this.word<<=count,this.bitsAvailable-=count):(skipBytes=(count-=this.bitsAvailable)>>3,count-=skipBytes<<3,this.bytesAvailable-=skipBytes,this.loadWord(),this.word<<=count,this.bitsAvailable-=count)}readBits(size){let bits=Math.min(this.bitsAvailable,size);const valu=this.word>>>32-bits;if(size>32&&logger.error("Cannot read more than 32 bits at a time"),this.bitsAvailable-=bits,this.bitsAvailable>0)this.word<<=bits;else{if(!(this.bytesAvailable>0))throw new Error("no bits available");this.loadWord()}return bits=size-bits,bits>0&&this.bitsAvailable?valu<<bits|this.readBits(bits):valu}skipLZ(){let leadingZeroCount;for(leadingZeroCount=0;leadingZeroCount<this.bitsAvailable;++leadingZeroCount)if(this.word&2147483648>>>leadingZeroCount)return this.word<<=leadingZeroCount,this.bitsAvailable-=leadingZeroCount,leadingZeroCount;return this.loadWord(),leadingZeroCount+this.skipLZ()}skipUEG(){this.skipBits(1+this.skipLZ())}skipEG(){this.skipBits(1+this.skipLZ())}readUEG(){const clz=this.skipLZ();return this.readBits(clz+1)-1}readEG(){const valu=this.readUEG();return 1&valu?1+valu>>>1:-1*(valu>>>1)}readBoolean(){return 1===this.readBits(1)}readUByte(){return this.readBits(8)}readUShort(){return this.readBits(16)}readUInt(){return this.readBits(32)}}class AvcVideoParser extends BaseVideoParser{parsePES(track,textTrack,pes,endOfSegment){const units=this.parseNALu(track,pes.data,endOfSegment);let push,VideoSample=this.VideoSample,spsfound=!1;pes.data=null,VideoSample&&units.length&&!track.audFound&&(this.pushAccessUnit(VideoSample,track),VideoSample=this.VideoSample=this.createVideoSample(!1,pes.pts,pes.dts)),units.forEach((unit=>{var _VideoSample2,_VideoSample3;switch(unit.type){case 1:{let iskey=!1;push=!0;const data=unit.data;if(spsfound&&data.length>4){const sliceType=this.readSliceType(data);2!==sliceType&&4!==sliceType&&7!==sliceType&&9!==sliceType||(iskey=!0)}var _VideoSample;if(iskey)null!=(_VideoSample=VideoSample)&&_VideoSample.frame&&!VideoSample.key&&(this.pushAccessUnit(VideoSample,track),VideoSample=this.VideoSample=null);VideoSample||(VideoSample=this.VideoSample=this.createVideoSample(!0,pes.pts,pes.dts)),VideoSample.frame=!0,VideoSample.key=iskey;break}case 5:push=!0,null!=(_VideoSample2=VideoSample)&&_VideoSample2.frame&&!VideoSample.key&&(this.pushAccessUnit(VideoSample,track),VideoSample=this.VideoSample=null),VideoSample||(VideoSample=this.VideoSample=this.createVideoSample(!0,pes.pts,pes.dts)),VideoSample.key=!0,VideoSample.frame=!0;break;case 6:push=!0,parseSEIMessageFromNALu(unit.data,1,pes.pts,textTrack.samples);break;case 7:{var _track$pixelRatio,_track$pixelRatio2;push=!0,spsfound=!0;const sps=unit.data,config=this.readSPS(sps);if(!track.sps||track.width!==config.width||track.height!==config.height||(null==(_track$pixelRatio=track.pixelRatio)?void 0:_track$pixelRatio[0])!==config.pixelRatio[0]||(null==(_track$pixelRatio2=track.pixelRatio)?void 0:_track$pixelRatio2[1])!==config.pixelRatio[1]){track.width=config.width,track.height=config.height,track.pixelRatio=config.pixelRatio,track.sps=[sps];const codecarray=sps.subarray(1,4);let codecstring="avc1.";for(let i=0;i<3;i++){let h=codecarray[i].toString(16);h.length<2&&(h="0"+h),codecstring+=h}track.codec=codecstring}break}case 8:push=!0,track.pps=[unit.data];break;case 9:push=!0,track.audFound=!0,null!=(_VideoSample3=VideoSample)&&_VideoSample3.frame&&(this.pushAccessUnit(VideoSample,track),VideoSample=null),VideoSample||(VideoSample=this.VideoSample=this.createVideoSample(!1,pes.pts,pes.dts));break;case 12:push=!0;break;default:push=!1}if(VideoSample&&push){VideoSample.units.push(unit)}})),endOfSegment&&VideoSample&&(this.pushAccessUnit(VideoSample,track),this.VideoSample=null)}getNALuType(data,offset){return 31&data[offset]}readSliceType(data){const eg=new ExpGolomb(data);return eg.readUByte(),eg.readUEG(),eg.readUEG()}skipScalingList(count,reader){let deltaScale,lastScale=8,nextScale=8;for(let j=0;j<count;j++)0!==nextScale&&(deltaScale=reader.readEG(),nextScale=(lastScale+deltaScale+256)%256),lastScale=0===nextScale?lastScale:nextScale}readSPS(sps){const eg=new ExpGolomb(sps);let numRefFramesInPicOrderCntCycle,scalingListCount,i,frameCropLeftOffset=0,frameCropRightOffset=0,frameCropTopOffset=0,frameCropBottomOffset=0;const readUByte=eg.readUByte.bind(eg),readBits=eg.readBits.bind(eg),readUEG=eg.readUEG.bind(eg),readBoolean=eg.readBoolean.bind(eg),skipBits=eg.skipBits.bind(eg),skipEG=eg.skipEG.bind(eg),skipUEG=eg.skipUEG.bind(eg),skipScalingList=this.skipScalingList.bind(this);readUByte();const profileIdc=readUByte();if(readBits(5),skipBits(3),readUByte(),skipUEG(),100===profileIdc||110===profileIdc||122===profileIdc||244===profileIdc||44===profileIdc||83===profileIdc||86===profileIdc||118===profileIdc||128===profileIdc){const chromaFormatIdc=readUEG();if(3===chromaFormatIdc&&skipBits(1),skipUEG(),skipUEG(),skipBits(1),readBoolean())for(scalingListCount=3!==chromaFormatIdc?8:12,i=0;i<scalingListCount;i++)readBoolean()&&skipScalingList(i<6?16:64,eg)}skipUEG();const picOrderCntType=readUEG();if(0===picOrderCntType)readUEG();else if(1===picOrderCntType)for(skipBits(1),skipEG(),skipEG(),numRefFramesInPicOrderCntCycle=readUEG(),i=0;i<numRefFramesInPicOrderCntCycle;i++)skipEG();skipUEG(),skipBits(1);const picWidthInMbsMinus1=readUEG(),picHeightInMapUnitsMinus1=readUEG(),frameMbsOnlyFlag=readBits(1);0===frameMbsOnlyFlag&&skipBits(1),skipBits(1),readBoolean()&&(frameCropLeftOffset=readUEG(),frameCropRightOffset=readUEG(),frameCropTopOffset=readUEG(),frameCropBottomOffset=readUEG());let pixelRatio=[1,1];if(readBoolean()&&readBoolean()){switch(readUByte()){case 1:pixelRatio=[1,1];break;case 2:pixelRatio=[12,11];break;case 3:pixelRatio=[10,11];break;case 4:pixelRatio=[16,11];break;case 5:pixelRatio=[40,33];break;case 6:pixelRatio=[24,11];break;case 7:pixelRatio=[20,11];break;case 8:pixelRatio=[32,11];break;case 9:pixelRatio=[80,33];break;case 10:pixelRatio=[18,11];break;case 11:pixelRatio=[15,11];break;case 12:pixelRatio=[64,33];break;case 13:pixelRatio=[160,99];break;case 14:pixelRatio=[4,3];break;case 15:pixelRatio=[3,2];break;case 16:pixelRatio=[2,1];break;case 255:pixelRatio=[readUByte()<<8|readUByte(),readUByte()<<8|readUByte()]}}return{width:Math.ceil(16*(picWidthInMbsMinus1+1)-2*frameCropLeftOffset-2*frameCropRightOffset),height:(2-frameMbsOnlyFlag)*(picHeightInMapUnitsMinus1+1)*16-(frameMbsOnlyFlag?2:4)*(frameCropTopOffset+frameCropBottomOffset),pixelRatio}}}class HevcVideoParser extends BaseVideoParser{constructor(...args){super(...args),this.initVPS=null}parsePES(track,textTrack,pes,endOfSegment){const units=this.parseNALu(track,pes.data,endOfSegment);let push,VideoSample=this.VideoSample,spsfound=!1;pes.data=null,VideoSample&&units.length&&!track.audFound&&(this.pushAccessUnit(VideoSample,track),VideoSample=this.VideoSample=this.createVideoSample(!1,pes.pts,pes.dts)),units.forEach((unit=>{var _VideoSample2,_VideoSample3;switch(unit.type){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:VideoSample||(VideoSample=this.VideoSample=this.createVideoSample(!1,pes.pts,pes.dts)),VideoSample.frame=!0,push=!0;break;case 16:case 17:case 18:case 21:var _VideoSample;if(push=!0,spsfound)null!=(_VideoSample=VideoSample)&&_VideoSample.frame&&!VideoSample.key&&(this.pushAccessUnit(VideoSample,track),VideoSample=this.VideoSample=null);VideoSample||(VideoSample=this.VideoSample=this.createVideoSample(!0,pes.pts,pes.dts)),VideoSample.key=!0,VideoSample.frame=!0;break;case 19:case 20:push=!0,null!=(_VideoSample2=VideoSample)&&_VideoSample2.frame&&!VideoSample.key&&(this.pushAccessUnit(VideoSample,track),VideoSample=this.VideoSample=null),VideoSample||(VideoSample=this.VideoSample=this.createVideoSample(!0,pes.pts,pes.dts)),VideoSample.key=!0,VideoSample.frame=!0;break;case 39:push=!0,parseSEIMessageFromNALu(unit.data,2,pes.pts,textTrack.samples);break;case 32:push=!0,track.vps||("object"!=typeof track.params&&(track.params={}),track.params=_extends(track.params,this.readVPS(unit.data)),this.initVPS=unit.data),track.vps=[unit.data];break;case 33:if(push=!0,spsfound=!0,void 0===track.vps||track.vps[0]===this.initVPS||void 0===track.sps||this.matchSPS(track.sps[0],unit.data)||(this.initVPS=track.vps[0],track.sps=track.pps=void 0),!track.sps){const config=this.readSPS(unit.data);track.width=config.width,track.height=config.height,track.pixelRatio=config.pixelRatio,track.codec=config.codecString,track.sps=[],"object"!=typeof track.params&&(track.params={});for(const prop in config.params)track.params[prop]=config.params[prop]}this.pushParameterSet(track.sps,unit.data,track.vps),VideoSample||(VideoSample=this.VideoSample=this.createVideoSample(!0,pes.pts,pes.dts)),VideoSample.key=!0;break;case 34:if(push=!0,"object"==typeof track.params){if(!track.pps){track.pps=[];const config=this.readPPS(unit.data);for(const prop in config)track.params[prop]=config[prop]}this.pushParameterSet(track.pps,unit.data,track.vps)}break;case 35:push=!0,track.audFound=!0,null!=(_VideoSample3=VideoSample)&&_VideoSample3.frame&&(this.pushAccessUnit(VideoSample,track),VideoSample=null),VideoSample||(VideoSample=this.VideoSample=this.createVideoSample(!1,pes.pts,pes.dts));break;default:push=!1}if(VideoSample&&push){VideoSample.units.push(unit)}})),endOfSegment&&VideoSample&&(this.pushAccessUnit(VideoSample,track),this.VideoSample=null)}pushParameterSet(parameterSets,data,vps){(vps&&vps[0]===this.initVPS||!vps&&!parameterSets.length)&&parameterSets.push(data)}getNALuType(data,offset){return(126&data[offset])>>>1}ebsp2rbsp(arr){const dst=new Uint8Array(arr.byteLength);let dstIdx=0;for(let i=0;i<arr.byteLength;i++)i>=2&&3===arr[i]&&0===arr[i-1]&&0===arr[i-2]||(dst[dstIdx]=arr[i],dstIdx++);return new Uint8Array(dst.buffer,0,dstIdx)}pushAccessUnit(VideoSample,videoTrack){super.pushAccessUnit(VideoSample,videoTrack),this.initVPS&&(this.initVPS=null)}readVPS(vps){const eg=new ExpGolomb(vps);eg.readUByte(),eg.readUByte(),eg.readBits(4),eg.skipBits(2),eg.readBits(6);return{numTemporalLayers:eg.readBits(3)+1,temporalIdNested:eg.readBoolean()}}readSPS(sps){const eg=new ExpGolomb(this.ebsp2rbsp(sps));eg.readUByte(),eg.readUByte(),eg.readBits(4);const max_sub_layers_minus1=eg.readBits(3);eg.readBoolean();const general_profile_space=eg.readBits(2),general_tier_flag=eg.readBoolean(),general_profile_idc=eg.readBits(5),general_profile_compatibility_flags_1=eg.readUByte(),general_profile_compatibility_flags_2=eg.readUByte(),general_profile_compatibility_flags_3=eg.readUByte(),general_profile_compatibility_flags_4=eg.readUByte(),general_constraint_indicator_flags_1=eg.readUByte(),general_constraint_indicator_flags_2=eg.readUByte(),general_constraint_indicator_flags_3=eg.readUByte(),general_constraint_indicator_flags_4=eg.readUByte(),general_constraint_indicator_flags_5=eg.readUByte(),general_constraint_indicator_flags_6=eg.readUByte(),general_level_idc=eg.readUByte(),sub_layer_profile_present_flags=[],sub_layer_level_present_flags=[];for(let i=0;i<max_sub_layers_minus1;i++)sub_layer_profile_present_flags.push(eg.readBoolean()),sub_layer_level_present_flags.push(eg.readBoolean());if(max_sub_layers_minus1>0)for(let i=max_sub_layers_minus1;i<8;i++)eg.readBits(2);for(let i=0;i<max_sub_layers_minus1;i++)sub_layer_profile_present_flags[i]&&(eg.readUByte(),eg.readUByte(),eg.readUByte(),eg.readUByte(),eg.readUByte(),eg.readUByte(),eg.readUByte(),eg.readUByte(),eg.readUByte(),eg.readUByte(),eg.readUByte()),sub_layer_level_present_flags[i]&&eg.readUByte();eg.readUEG();const chroma_format_idc=eg.readUEG();3==chroma_format_idc&&eg.skipBits(1);const pic_width_in_luma_samples=eg.readUEG(),pic_height_in_luma_samples=eg.readUEG(),conformance_window_flag=eg.readBoolean();let pic_left_offset=0,pic_right_offset=0,pic_top_offset=0,pic_bottom_offset=0;conformance_window_flag&&(pic_left_offset+=eg.readUEG(),pic_right_offset+=eg.readUEG(),pic_top_offset+=eg.readUEG(),pic_bottom_offset+=eg.readUEG());const bit_depth_luma_minus8=eg.readUEG(),bit_depth_chroma_minus8=eg.readUEG(),log2_max_pic_order_cnt_lsb_minus4=eg.readUEG();for(let i=eg.readBoolean()?0:max_sub_layers_minus1;i<=max_sub_layers_minus1;i++)eg.skipUEG(),eg.skipUEG(),eg.skipUEG();eg.skipUEG(),eg.skipUEG(),eg.skipUEG(),eg.skipUEG(),eg.skipUEG(),eg.skipUEG();if(eg.readBoolean()){if(eg.readBoolean())for(let sizeId=0;sizeId<4;sizeId++)for(let matrixId=0;matrixId<(3===sizeId?2:6);matrixId++){if(eg.readBoolean()){const coefNum=Math.min(64,1<<4+(sizeId<<1));sizeId>1&&eg.readEG();for(let i=0;i<coefNum;i++)eg.readEG()}else eg.readUEG()}}eg.readBoolean(),eg.readBoolean();eg.readBoolean()&&(eg.readUByte(),eg.skipUEG(),eg.skipUEG(),eg.readBoolean());const num_short_term_ref_pic_sets=eg.readUEG();let num_delta_pocs=0;for(let i=0;i<num_short_term_ref_pic_sets;i++){let inter_ref_pic_set_prediction_flag=!1;if(0!==i&&(inter_ref_pic_set_prediction_flag=eg.readBoolean()),inter_ref_pic_set_prediction_flag){i===num_short_term_ref_pic_sets&&eg.readUEG(),eg.readBoolean(),eg.readUEG();let next_num_delta_pocs=0;for(let j=0;j<=num_delta_pocs;j++){const used_by_curr_pic_flag=eg.readBoolean();let use_delta_flag=!1;used_by_curr_pic_flag||(use_delta_flag=eg.readBoolean()),(used_by_curr_pic_flag||use_delta_flag)&&next_num_delta_pocs++}num_delta_pocs=next_num_delta_pocs}else{const num_negative_pics=eg.readUEG(),num_positive_pics=eg.readUEG();num_delta_pocs=num_negative_pics+num_positive_pics;for(let j=0;j<num_negative_pics;j++)eg.readUEG(),eg.readBoolean();for(let j=0;j<num_positive_pics;j++)eg.readUEG(),eg.readBoolean()}}if(eg.readBoolean()){const num_long_term_ref_pics_sps=eg.readUEG();for(let i=0;i<num_long_term_ref_pics_sps;i++){for(let j=0;j<log2_max_pic_order_cnt_lsb_minus4+4;j++)eg.readBits(1);eg.readBits(1)}}let min_spatial_segmentation_idc=0,sar_width=1,sar_height=1,fps_fixed=!0,fps_den=1,fps_num=0;eg.readBoolean(),eg.readBoolean();let default_display_window_flag=!1;if(eg.readBoolean()){if(eg.readBoolean()){const aspect_ratio_idc=eg.readUByte();aspect_ratio_idc>0&&aspect_ratio_idc<16?(sar_width=[1,12,10,16,40,24,20,32,80,18,15,64,160,4,3,2][aspect_ratio_idc-1],sar_height=[1,11,11,11,33,11,11,11,33,11,11,33,99,3,2,1][aspect_ratio_idc-1]):255===aspect_ratio_idc&&(sar_width=eg.readBits(16),sar_height=eg.readBits(16))}eg.readBoolean()&&eg.readBoolean();if(eg.readBoolean()){eg.readBits(3),eg.readBoolean();eg.readBoolean()&&(eg.readUByte(),eg.readUByte(),eg.readUByte())}eg.readBoolean()&&(eg.readUEG(),eg.readUEG()),eg.readBoolean(),eg.readBoolean(),eg.readBoolean(),default_display_window_flag=eg.readBoolean(),default_display_window_flag&&(eg.skipUEG(),eg.skipUEG(),eg.skipUEG(),eg.skipUEG());if(eg.readBoolean()){fps_den=eg.readBits(32),fps_num=eg.readBits(32);eg.readBoolean()&&eg.readUEG();if(eg.readBoolean()){const nal_hrd_parameters_present_flag=eg.readBoolean(),vcl_hrd_parameters_present_flag=eg.readBoolean();let sub_pic_hrd_params_present_flag=!1;(nal_hrd_parameters_present_flag||vcl_hrd_parameters_present_flag)&&(sub_pic_hrd_params_present_flag=eg.readBoolean(),sub_pic_hrd_params_present_flag&&(eg.readUByte(),eg.readBits(5),eg.readBoolean(),eg.readBits(5)),eg.readBits(4),eg.readBits(4),sub_pic_hrd_params_present_flag&&eg.readBits(4),eg.readBits(5),eg.readBits(5),eg.readBits(5));for(let i=0;i<=max_sub_layers_minus1;i++){fps_fixed=eg.readBoolean();let low_delay_hrd_flag=!1;fps_fixed||eg.readBoolean()?eg.readEG():low_delay_hrd_flag=eg.readBoolean();const cpb_cnt=low_delay_hrd_flag?1:eg.readUEG()+1;if(nal_hrd_parameters_present_flag)for(let j=0;j<cpb_cnt;j++)eg.readUEG(),eg.readUEG(),sub_pic_hrd_params_present_flag&&(eg.readUEG(),eg.readUEG()),eg.skipBits(1);if(vcl_hrd_parameters_present_flag)for(let j=0;j<cpb_cnt;j++)eg.readUEG(),eg.readUEG(),sub_pic_hrd_params_present_flag&&(eg.readUEG(),eg.readUEG()),eg.skipBits(1)}}}eg.readBoolean()&&(eg.readBoolean(),eg.readBoolean(),eg.readBoolean(),min_spatial_segmentation_idc=eg.readUEG())}let width=pic_width_in_luma_samples,height=pic_height_in_luma_samples;if(conformance_window_flag){let chroma_scale_w=1,chroma_scale_h=1;1===chroma_format_idc?chroma_scale_w=chroma_scale_h=2:2==chroma_format_idc&&(chroma_scale_w=2),width=pic_width_in_luma_samples-chroma_scale_w*pic_right_offset-chroma_scale_w*pic_left_offset,height=pic_height_in_luma_samples-chroma_scale_h*pic_bottom_offset-chroma_scale_h*pic_top_offset}const profile_space_string=general_profile_space?["A","B","C"][general_profile_space]:"",profile_compatibility_buf=general_profile_compatibility_flags_1<<24|general_profile_compatibility_flags_2<<16|general_profile_compatibility_flags_3<<8|general_profile_compatibility_flags_4;let profile_compatibility_rev=0;for(let i=0;i<32;i++)profile_compatibility_rev=(profile_compatibility_rev|(profile_compatibility_buf>>i&1)<<31-i)>>>0;let profile_compatibility_flags_string=profile_compatibility_rev.toString(16);1===general_profile_idc&&"2"===profile_compatibility_flags_string&&(profile_compatibility_flags_string="6");return{codecString:`hvc1.${profile_space_string}${general_profile_idc}.${profile_compatibility_flags_string}.${general_tier_flag?"H":"L"}${general_level_idc}.B0`,params:{general_tier_flag,general_profile_idc,general_profile_space,general_profile_compatibility_flags:[general_profile_compatibility_flags_1,general_profile_compatibility_flags_2,general_profile_compatibility_flags_3,general_profile_compatibility_flags_4],general_constraint_indicator_flags:[general_constraint_indicator_flags_1,general_constraint_indicator_flags_2,general_constraint_indicator_flags_3,general_constraint_indicator_flags_4,general_constraint_indicator_flags_5,general_constraint_indicator_flags_6],general_level_idc,bit_depth:bit_depth_luma_minus8+8,bit_depth_luma_minus8,bit_depth_chroma_minus8,min_spatial_segmentation_idc,chroma_format_idc,frame_rate:{fixed:fps_fixed,fps:fps_num/fps_den}},width,height,pixelRatio:[sar_width,sar_height]}}readPPS(pps){const eg=new ExpGolomb(this.ebsp2rbsp(pps));eg.readUByte(),eg.readUByte(),eg.skipUEG(),eg.skipUEG(),eg.skipBits(2),eg.skipBits(3),eg.skipBits(2),eg.skipUEG(),eg.skipUEG(),eg.skipEG(),eg.skipBits(2);eg.readBoolean()&&eg.skipUEG(),eg.skipEG(),eg.skipEG(),eg.skipBits(4);const tiles_enabled_flag=eg.readBoolean(),entropy_coding_sync_enabled_flag=eg.readBoolean();let parallelismType=1;return entropy_coding_sync_enabled_flag&&tiles_enabled_flag?parallelismType=0:entropy_coding_sync_enabled_flag?parallelismType=3:tiles_enabled_flag&&(parallelismType=2),{parallelismType}}matchSPS(sps1,sps2){return String.fromCharCode.apply(null,sps1).substr(3)===String.fromCharCode.apply(null,sps2).substr(3)}}class TSDemuxer{constructor(observer,config,typeSupported,logger){this.logger=void 0,this.observer=void 0,this.config=void 0,this.typeSupported=void 0,this.sampleAes=null,this.pmtParsed=!1,this.audioCodec=void 0,this.videoCodec=void 0,this._pmtId=-1,this._videoTrack=void 0,this._audioTrack=void 0,this._id3Track=void 0,this._txtTrack=void 0,this.aacOverFlow=null,this.remainderData=null,this.videoParser=void 0,this.observer=observer,this.config=config,this.typeSupported=typeSupported,this.logger=logger,this.videoParser=null}static probe(data,logger){const syncOffset=TSDemuxer.syncOffset(data);return syncOffset>0&&logger.warn(`MPEG2-TS detected but first sync word found @ offset ${syncOffset}`),-1!==syncOffset}static syncOffset(data){const length=data.length;let scanwindow=Math.min(940,length-188)+1,i=0;for(;i<scanwindow;){let foundPat=!1,packetStart=-1,tsPackets=0;for(let j=i;j<length;j+=188){if(71!==data[j]||length-j!=188&&71!==data[j+188]){if(tsPackets)return-1;break}if(tsPackets++,-1===packetStart&&(packetStart=j,0!==packetStart&&(scanwindow=Math.min(packetStart+18612,data.length-188)+1)),foundPat||(foundPat=0===parsePID(data,j)),foundPat&&tsPackets>1&&(0===packetStart&&tsPackets>2||j+188>scanwindow))return packetStart}i++}return-1}static createTrack(type,duration){return{container:"video"===type||"audio"===type?"video/mp2t":void 0,type,id:RemuxerTrackIdConfig[type],pid:-1,inputTimeScale:9e4,sequenceNumber:0,samples:[],dropped:0,duration:"audio"===type?duration:void 0}}resetInitSegment(initSegment,audioCodec,videoCodec,trackDuration){this.pmtParsed=!1,this._pmtId=-1,this._videoTrack=TSDemuxer.createTrack("video"),this._videoTrack.duration=trackDuration,this._audioTrack=TSDemuxer.createTrack("audio",trackDuration),this._id3Track=TSDemuxer.createTrack("id3"),this._txtTrack=TSDemuxer.createTrack("text"),this._audioTrack.segmentCodec="aac",this.videoParser=null,this.aacOverFlow=null,this.remainderData=null,this.audioCodec=audioCodec,this.videoCodec=videoCodec}resetTimeStamp(){}resetContiguity(){const{_audioTrack,_videoTrack,_id3Track}=this;_audioTrack&&(_audioTrack.pesData=null),_videoTrack&&(_videoTrack.pesData=null),_id3Track&&(_id3Track.pesData=null),this.aacOverFlow=null,this.remainderData=null}demux(data,timeOffset,isSampleAes=!1,flush=!1){let pes;isSampleAes||(this.sampleAes=null);const videoTrack=this._videoTrack,audioTrack=this._audioTrack,id3Track=this._id3Track,textTrack=this._txtTrack;let videoPid=videoTrack.pid,videoData=videoTrack.pesData,audioPid=audioTrack.pid,id3Pid=id3Track.pid,audioData=audioTrack.pesData,id3Data=id3Track.pesData,unknownPID=null,pmtParsed=this.pmtParsed,pmtId=this._pmtId,len=data.length;if(this.remainderData&&(len=(data=appendUint8Array(this.remainderData,data)).length,this.remainderData=null),len<188&&!flush)return this.remainderData=data,{audioTrack,videoTrack,id3Track,textTrack};const syncOffset=Math.max(0,TSDemuxer.syncOffset(data));len-=(len-syncOffset)%188,len<data.byteLength&&!flush&&(this.remainderData=new Uint8Array(data.buffer,len,data.buffer.byteLength-len));let tsPacketErrors=0;for(let start=syncOffset;start<len;start+=188)if(71===data[start]){const stt=!!(64&data[start+1]),pid=parsePID(data,start);let offset;if((48&data[start+3])>>4>1){if(offset=start+5+data[start+4],offset===start+188)continue}else offset=start+4;switch(pid){case videoPid:stt&&(videoData&&(pes=parsePES(videoData,this.logger))&&(this.readyVideoParser(videoTrack.segmentCodec),null!==this.videoParser&&this.videoParser.parsePES(videoTrack,textTrack,pes,!1)),videoData={data:[],size:0}),videoData&&(videoData.data.push(data.subarray(offset,start+188)),videoData.size+=start+188-offset);break;case audioPid:if(stt){if(audioData&&(pes=parsePES(audioData,this.logger)))switch(audioTrack.segmentCodec){case"aac":this.parseAACPES(audioTrack,pes);break;case"mp3":this.parseMPEGPES(audioTrack,pes);break;case"ac3":this.parseAC3PES(audioTrack,pes)}audioData={data:[],size:0}}audioData&&(audioData.data.push(data.subarray(offset,start+188)),audioData.size+=start+188-offset);break;case id3Pid:stt&&(id3Data&&(pes=parsePES(id3Data,this.logger))&&this.parseID3PES(id3Track,pes),id3Data={data:[],size:0}),id3Data&&(id3Data.data.push(data.subarray(offset,start+188)),id3Data.size+=start+188-offset);break;case 0:stt&&(offset+=data[offset]+1),pmtId=this._pmtId=parsePAT(data,offset);break;case pmtId:{stt&&(offset+=data[offset]+1);const parsedPIDs=parsePMT(data,offset,this.typeSupported,isSampleAes,this.observer,this.logger);videoPid=parsedPIDs.videoPid,videoPid>0&&(videoTrack.pid=videoPid,videoTrack.segmentCodec=parsedPIDs.segmentVideoCodec),audioPid=parsedPIDs.audioPid,audioPid>0&&(audioTrack.pid=audioPid,audioTrack.segmentCodec=parsedPIDs.segmentAudioCodec),id3Pid=parsedPIDs.id3Pid,id3Pid>0&&(id3Track.pid=id3Pid),null===unknownPID||pmtParsed||(this.logger.warn(`MPEG-TS PMT found at ${start} after unknown PID '${unknownPID}'. Backtracking to sync byte @${syncOffset} to parse all TS packets.`),unknownPID=null,start=syncOffset-188),pmtParsed=this.pmtParsed=!0;break}case 17:case 8191:break;default:unknownPID=pid}}else tsPacketErrors++;tsPacketErrors>0&&emitParsingError(this.observer,new Error(`Found ${tsPacketErrors} TS packet/s that do not start with 0x47`),void 0,this.logger),videoTrack.pesData=videoData,audioTrack.pesData=audioData,id3Track.pesData=id3Data;const demuxResult={audioTrack,videoTrack,id3Track,textTrack};return flush&&this.extractRemainingSamples(demuxResult),demuxResult}flush(){const{remainderData}=this;let result;return this.remainderData=null,result=remainderData?this.demux(remainderData,-1,!1,!0):{videoTrack:this._videoTrack,audioTrack:this._audioTrack,id3Track:this._id3Track,textTrack:this._txtTrack},this.extractRemainingSamples(result),this.sampleAes?this.decrypt(result,this.sampleAes):result}extractRemainingSamples(demuxResult){const{audioTrack,videoTrack,id3Track,textTrack}=demuxResult,videoData=videoTrack.pesData,audioData=audioTrack.pesData,id3Data=id3Track.pesData;let pes;if(videoData&&(pes=parsePES(videoData,this.logger))?(this.readyVideoParser(videoTrack.segmentCodec),null!==this.videoParser&&(this.videoParser.parsePES(videoTrack,textTrack,pes,!0),videoTrack.pesData=null)):videoTrack.pesData=videoData,audioData&&(pes=parsePES(audioData,this.logger))){switch(audioTrack.segmentCodec){case"aac":this.parseAACPES(audioTrack,pes);break;case"mp3":this.parseMPEGPES(audioTrack,pes);break;case"ac3":this.parseAC3PES(audioTrack,pes)}audioTrack.pesData=null}else null!=audioData&&audioData.size&&this.logger.log("last AAC PES packet truncated,might overlap between fragments"),audioTrack.pesData=audioData;id3Data&&(pes=parsePES(id3Data,this.logger))?(this.parseID3PES(id3Track,pes),id3Track.pesData=null):id3Track.pesData=id3Data}demuxSampleAes(data,keyData,timeOffset){const demuxResult=this.demux(data,timeOffset,!0,!this.config.progressive),sampleAes=this.sampleAes=new SampleAesDecrypter(this.observer,this.config,keyData);return this.decrypt(demuxResult,sampleAes)}readyVideoParser(codec){null===this.videoParser&&("avc"===codec?this.videoParser=new AvcVideoParser:"hevc"===codec&&(this.videoParser=new HevcVideoParser))}decrypt(demuxResult,sampleAes){return new Promise((resolve=>{const{audioTrack,videoTrack}=demuxResult;audioTrack.samples&&"aac"===audioTrack.segmentCodec?sampleAes.decryptAacSamples(audioTrack.samples,0,(()=>{videoTrack.samples?sampleAes.decryptAvcSamples(videoTrack.samples,0,0,(()=>{resolve(demuxResult)})):resolve(demuxResult)})):videoTrack.samples&&sampleAes.decryptAvcSamples(videoTrack.samples,0,0,(()=>{resolve(demuxResult)}))}))}destroy(){this.observer&&this.observer.removeAllListeners(),this.config=this.logger=this.observer=null,this.aacOverFlow=this.videoParser=this.remainderData=this.sampleAes=null,this._videoTrack=this._audioTrack=this._id3Track=this._txtTrack=void 0}parseAACPES(track,pes){let startOffset=0;const aacOverFlow=this.aacOverFlow;let offset,len,pts,data=pes.data;if(aacOverFlow){this.aacOverFlow=null;const frameMissingBytes=aacOverFlow.missing,sampleLength=aacOverFlow.sample.unit.byteLength;if(-1===frameMissingBytes)data=appendUint8Array(aacOverFlow.sample.unit,data);else{const frameOverflowBytes=sampleLength-frameMissingBytes;aacOverFlow.sample.unit.set(data.subarray(0,frameMissingBytes),frameOverflowBytes),track.samples.push(aacOverFlow.sample),startOffset=aacOverFlow.missing}}for(offset=startOffset,len=data.length;offset<len-1&&!isHeader$1(data,offset);offset++);if(offset!==startOffset){let reason;const recoverable=offset<len-1;if(reason=recoverable?`AAC PES did not start with ADTS header,offset:${offset}`:"No ADTS header found in AAC PES",emitParsingError(this.observer,new Error(reason),recoverable,this.logger),!recoverable)return}if(initTrackConfig(track,this.observer,data,offset,this.audioCodec),void 0!==pes.pts)pts=pes.pts;else{if(!aacOverFlow)return void this.logger.warn("[tsdemuxer]: AAC PES unknown PTS");{const frameDuration=getFrameDuration(track.samplerate);pts=aacOverFlow.sample.pts+frameDuration}}let frame,frameIndex=0;for(;offset<len;){if(frame=appendFrame$2(track,data,offset,pts,frameIndex),offset+=frame.length,frame.missing){this.aacOverFlow=frame;break}for(frameIndex++;offset<len-1&&!isHeader$1(data,offset);offset++);}}parseMPEGPES(track,pes){const data=pes.data,length=data.length;let frameIndex=0,offset=0;const pts=pes.pts;if(void 0!==pts)for(;offset<length;)if(isHeader(data,offset)){const frame=appendFrame$1(track,data,offset,pts,frameIndex);if(!frame)break;offset+=frame.length,frameIndex++}else offset++;else this.logger.warn("[tsdemuxer]: MPEG PES unknown PTS")}parseAC3PES(track,pes){{const data=pes.data,pts=pes.pts;if(void 0===pts)return void this.logger.warn("[tsdemuxer]: AC3 PES unknown PTS");const length=data.length;let parsed,frameIndex=0,offset=0;for(;offset<length&&(parsed=appendFrame(track,data,offset,pts,frameIndex++))>0;)offset+=parsed}}parseID3PES(id3Track,pes){if(void 0===pes.pts)return void this.logger.warn("[tsdemuxer]: ID3 PES unknown PTS");const id3Sample=_extends({},pes,{type:this._videoTrack?MetadataSchema.emsg:MetadataSchema.audioId3,duration:Number.POSITIVE_INFINITY});id3Track.samples.push(id3Sample)}}function parsePID(data,offset){return((31&data[offset+1])<<8)+data[offset+2]}function parsePAT(data,offset){return(31&data[offset+10])<<8|data[offset+11]}function parsePMT(data,offset,typeSupported,isSampleAes,observer,logger){const result={audioPid:-1,videoPid:-1,id3Pid:-1,segmentVideoCodec:"avc",segmentAudioCodec:"aac"},tableEnd=offset+3+((15&data[offset+1])<<8|data[offset+2])-4;for(offset+=12+((15&data[offset+10])<<8|data[offset+11]);offset<tableEnd;){const pid=parsePID(data,offset),esInfoLength=(15&data[offset+3])<<8|data[offset+4];switch(data[offset]){case 207:if(!isSampleAes){logEncryptedSamplesFoundInUnencryptedStream("ADTS AAC",logger);break}case 15:-1===result.audioPid&&(result.audioPid=pid);break;case 21:-1===result.id3Pid&&(result.id3Pid=pid);break;case 219:if(!isSampleAes){logEncryptedSamplesFoundInUnencryptedStream("H.264",logger);break}case 27:-1===result.videoPid&&(result.videoPid=pid);break;case 3:case 4:typeSupported.mpeg||typeSupported.mp3?-1===result.audioPid&&(result.audioPid=pid,result.segmentAudioCodec="mp3"):logger.log("MPEG audio found, not supported in this browser");break;case 193:if(!isSampleAes){logEncryptedSamplesFoundInUnencryptedStream("AC-3",logger);break}case 129:typeSupported.ac3?-1===result.audioPid&&(result.audioPid=pid,result.segmentAudioCodec="ac3"):logger.log("AC-3 audio found, not supported in this browser");break;case 6:if(-1===result.audioPid&&esInfoLength>0){let parsePos=offset+5,remaining=esInfoLength;for(;remaining>2;){if(106===data[parsePos])!0!==typeSupported.ac3?logger.log("AC-3 audio found, not supported in this browser for now"):(result.audioPid=pid,result.segmentAudioCodec="ac3");const descriptorLen=data[parsePos+1]+2;parsePos+=descriptorLen,remaining-=descriptorLen}}break;case 194:case 135:return emitParsingError(observer,new Error("Unsupported EC-3 in M2TS found"),void 0,logger),result;case 36:-1===result.videoPid&&(result.videoPid=pid,result.segmentVideoCodec="hevc",logger.log("HEVC in M2TS found"))}offset+=esInfoLength+5}return result}function emitParsingError(observer,error,levelRetry,logger){logger.warn(`parsing error: ${error.message}`),observer.emit(Events.ERROR,Events.ERROR,{type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.FRAG_PARSING_ERROR,fatal:!1,levelRetry,error,reason:error.message})}function logEncryptedSamplesFoundInUnencryptedStream(type,logger){logger.log(`${type} with AES-128-CBC encryption found in unencrypted stream`)}function parsePES(stream,logger){let frag,pesLen,pesHdrLen,pesPts,pesDts,i=0;const data=stream.data;if(!stream||0===stream.size)return null;for(;data[0].length<19&&data.length>1;)data[0]=appendUint8Array(data[0],data[1]),data.splice(1,1);frag=data[0];if(1===(frag[0]<<16)+(frag[1]<<8)+frag[2]){if(pesLen=(frag[4]<<8)+frag[5],pesLen&&pesLen>stream.size-6)return null;const pesFlags=frag[7];192&pesFlags&&(pesPts=536870912*(14&frag[9])+4194304*(255&frag[10])+16384*(254&frag[11])+128*(255&frag[12])+(254&frag[13])/2,64&pesFlags?(pesDts=536870912*(14&frag[14])+4194304*(255&frag[15])+16384*(254&frag[16])+128*(255&frag[17])+(254&frag[18])/2,pesPts-pesDts>54e5&&(logger.warn(`${Math.round((pesPts-pesDts)/9e4)}s delta between PTS and DTS, align them`),pesPts=pesDts)):pesDts=pesPts),pesHdrLen=frag[8];let payloadStartOffset=pesHdrLen+9;if(stream.size<=payloadStartOffset)return null;stream.size-=payloadStartOffset;const pesData=new Uint8Array(stream.size);for(let j=0,dataLen=data.length;j<dataLen;j++){frag=data[j];let len=frag.byteLength;if(payloadStartOffset){if(payloadStartOffset>len){payloadStartOffset-=len;continue}frag=frag.subarray(payloadStartOffset),len-=payloadStartOffset,payloadStartOffset=0}pesData.set(frag,i),i+=len}return pesLen&&(pesLen-=pesHdrLen+3),{data:pesData,pts:pesPts,dts:pesDts,len:pesLen}}return null}class AAC{static getSilentFrame(codec,channelCount){if("mp4a.40.2"===codec){if(1===channelCount)return new Uint8Array([0,200,0,128,35,128]);if(2===channelCount)return new Uint8Array([33,0,73,144,2,25,0,35,128]);if(3===channelCount)return new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,142]);if(4===channelCount)return new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,128,44,128,8,2,56]);if(5===channelCount)return new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,130,48,4,153,0,33,144,2,56]);if(6===channelCount)return new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,130,48,4,153,0,33,144,2,0,178,0,32,8,224])}else{if(1===channelCount)return new Uint8Array([1,64,34,128,163,78,230,128,186,8,0,0,0,28,6,241,193,10,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,94]);if(2===channelCount)return new Uint8Array([1,64,34,128,163,94,230,128,186,8,0,0,0,0,149,0,6,241,161,10,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,94]);if(3===channelCount)return new Uint8Array([1,64,34,128,163,94,230,128,186,8,0,0,0,0,149,0,6,241,161,10,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,94])}}}const UINT32_MAX=Math.pow(2,32)-1;class MP4{static init(){let i;for(i in MP4.types={avc1:[],avcC:[],hvc1:[],hvcC:[],btrt:[],dinf:[],dref:[],esds:[],ftyp:[],hdlr:[],mdat:[],mdhd:[],mdia:[],mfhd:[],minf:[],moof:[],moov:[],mp4a:[],".mp3":[],dac3:[],"ac-3":[],mvex:[],mvhd:[],pasp:[],sdtp:[],stbl:[],stco:[],stsc:[],stsd:[],stsz:[],stts:[],tfdt:[],tfhd:[],traf:[],trak:[],trun:[],trex:[],tkhd:[],vmhd:[],smhd:[]},MP4.types)MP4.types.hasOwnProperty(i)&&(MP4.types[i]=[i.charCodeAt(0),i.charCodeAt(1),i.charCodeAt(2),i.charCodeAt(3)]);const videoHdlr=new Uint8Array([0,0,0,0,0,0,0,0,118,105,100,101,0,0,0,0,0,0,0,0,0,0,0,0,86,105,100,101,111,72,97,110,100,108,101,114,0]),audioHdlr=new Uint8Array([0,0,0,0,0,0,0,0,115,111,117,110,0,0,0,0,0,0,0,0,0,0,0,0,83,111,117,110,100,72,97,110,100,108,101,114,0]);MP4.HDLR_TYPES={video:videoHdlr,audio:audioHdlr};const dref=new Uint8Array([0,0,0,0,0,0,0,1,0,0,0,12,117,114,108,32,0,0,0,1]),stco=new Uint8Array([0,0,0,0,0,0,0,0]);MP4.STTS=MP4.STSC=MP4.STCO=stco,MP4.STSZ=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0]),MP4.VMHD=new Uint8Array([0,0,0,1,0,0,0,0,0,0,0,0]),MP4.SMHD=new Uint8Array([0,0,0,0,0,0,0,0]),MP4.STSD=new Uint8Array([0,0,0,0,0,0,0,1]);const majorBrand=new Uint8Array([105,115,111,109]),avc1Brand=new Uint8Array([97,118,99,49]),minorVersion=new Uint8Array([0,0,0,1]);MP4.FTYP=MP4.box(MP4.types.ftyp,majorBrand,minorVersion,majorBrand,avc1Brand),MP4.DINF=MP4.box(MP4.types.dinf,MP4.box(MP4.types.dref,dref))}static box(type,...payload){let size=8,i=payload.length;const len=i;for(;i--;)size+=payload[i].byteLength;const result=new Uint8Array(size);for(result[0]=size>>24&255,result[1]=size>>16&255,result[2]=size>>8&255,result[3]=255&size,result.set(type,4),i=0,size=8;i<len;i++)result.set(payload[i],size),size+=payload[i].byteLength;return result}static hdlr(type){return MP4.box(MP4.types.hdlr,MP4.HDLR_TYPES[type])}static mdat(data){return MP4.box(MP4.types.mdat,data)}static mdhd(timescale,duration){duration*=timescale;const upperWordDuration=Math.floor(duration/(UINT32_MAX+1)),lowerWordDuration=Math.floor(duration%(UINT32_MAX+1));return MP4.box(MP4.types.mdhd,new Uint8Array([1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,3,timescale>>24&255,timescale>>16&255,timescale>>8&255,255&timescale,upperWordDuration>>24,upperWordDuration>>16&255,upperWordDuration>>8&255,255&upperWordDuration,lowerWordDuration>>24,lowerWordDuration>>16&255,lowerWordDuration>>8&255,255&lowerWordDuration,85,196,0,0]))}static mdia(track){return MP4.box(MP4.types.mdia,MP4.mdhd(track.timescale||0,track.duration||0),MP4.hdlr(track.type),MP4.minf(track))}static mfhd(sequenceNumber){return MP4.box(MP4.types.mfhd,new Uint8Array([0,0,0,0,sequenceNumber>>24,sequenceNumber>>16&255,sequenceNumber>>8&255,255&sequenceNumber]))}static minf(track){return"audio"===track.type?MP4.box(MP4.types.minf,MP4.box(MP4.types.smhd,MP4.SMHD),MP4.DINF,MP4.stbl(track)):MP4.box(MP4.types.minf,MP4.box(MP4.types.vmhd,MP4.VMHD),MP4.DINF,MP4.stbl(track))}static moof(sn,baseMediaDecodeTime,track){return MP4.box(MP4.types.moof,MP4.mfhd(sn),MP4.traf(track,baseMediaDecodeTime))}static moov(tracks){let i=tracks.length;const boxes=[];for(;i--;)boxes[i]=MP4.trak(tracks[i]);return MP4.box.apply(null,[MP4.types.moov,MP4.mvhd(tracks[0].timescale||0,tracks[0].duration||0)].concat(boxes).concat(MP4.mvex(tracks)))}static mvex(tracks){let i=tracks.length;const boxes=[];for(;i--;)boxes[i]=MP4.trex(tracks[i]);return MP4.box.apply(null,[MP4.types.mvex,...boxes])}static mvhd(timescale,duration){duration*=timescale;const upperWordDuration=Math.floor(duration/(UINT32_MAX+1)),lowerWordDuration=Math.floor(duration%(UINT32_MAX+1)),bytes=new Uint8Array([1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,3,timescale>>24&255,timescale>>16&255,timescale>>8&255,255&timescale,upperWordDuration>>24,upperWordDuration>>16&255,upperWordDuration>>8&255,255&upperWordDuration,lowerWordDuration>>24,lowerWordDuration>>16&255,lowerWordDuration>>8&255,255&lowerWordDuration,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255]);return MP4.box(MP4.types.mvhd,bytes)}static sdtp(track){const samples=track.samples||[],bytes=new Uint8Array(4+samples.length);let i,flags;for(i=0;i<samples.length;i++)flags=samples[i].flags,bytes[i+4]=flags.dependsOn<<4|flags.isDependedOn<<2|flags.hasRedundancy;return MP4.box(MP4.types.sdtp,bytes)}static stbl(track){return MP4.box(MP4.types.stbl,MP4.stsd(track),MP4.box(MP4.types.stts,MP4.STTS),MP4.box(MP4.types.stsc,MP4.STSC),MP4.box(MP4.types.stsz,MP4.STSZ),MP4.box(MP4.types.stco,MP4.STCO))}static avc1(track){let i,data,len,sps=[],pps=[];for(i=0;i<track.sps.length;i++)data=track.sps[i],len=data.byteLength,sps.push(len>>>8&255),sps.push(255&len),sps=sps.concat(Array.prototype.slice.call(data));for(i=0;i<track.pps.length;i++)data=track.pps[i],len=data.byteLength,pps.push(len>>>8&255),pps.push(255&len),pps=pps.concat(Array.prototype.slice.call(data));const avcc=MP4.box(MP4.types.avcC,new Uint8Array([1,sps[3],sps[4],sps[5],255,224|track.sps.length].concat(sps).concat([track.pps.length]).concat(pps))),width=track.width,height=track.height,hSpacing=track.pixelRatio[0],vSpacing=track.pixelRatio[1];return MP4.box(MP4.types.avc1,new Uint8Array([0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,width>>8&255,255&width,height>>8&255,255&height,0,72,0,0,0,72,0,0,0,0,0,0,0,1,18,100,97,105,108,121,109,111,116,105,111,110,47,104,108,115,46,106,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,17,17]),avcc,MP4.box(MP4.types.btrt,new Uint8Array([0,28,156,128,0,45,198,192,0,45,198,192])),MP4.box(MP4.types.pasp,new Uint8Array([hSpacing>>24,hSpacing>>16&255,hSpacing>>8&255,255&hSpacing,vSpacing>>24,vSpacing>>16&255,vSpacing>>8&255,255&vSpacing])))}static esds(track){const config=track.config;return new Uint8Array([0,0,0,0,3,25,0,1,0,4,17,64,21,0,0,0,0,0,0,0,0,0,0,0,5,2,...config,6,1,2])}static audioStsd(track){const samplerate=track.samplerate||0;return new Uint8Array([0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,track.channelCount||0,0,16,0,0,0,0,samplerate>>8&255,255&samplerate,0,0])}static mp4a(track){return MP4.box(MP4.types.mp4a,MP4.audioStsd(track),MP4.box(MP4.types.esds,MP4.esds(track)))}static mp3(track){return MP4.box(MP4.types[".mp3"],MP4.audioStsd(track))}static ac3(track){return MP4.box(MP4.types["ac-3"],MP4.audioStsd(track),MP4.box(MP4.types.dac3,track.config))}static stsd(track){const{segmentCodec}=track;if("audio"===track.type){if("aac"===segmentCodec)return MP4.box(MP4.types.stsd,MP4.STSD,MP4.mp4a(track));if("ac3"===segmentCodec&&track.config)return MP4.box(MP4.types.stsd,MP4.STSD,MP4.ac3(track));if("mp3"===segmentCodec&&"mp3"===track.codec)return MP4.box(MP4.types.stsd,MP4.STSD,MP4.mp3(track))}else{if(!track.pps||!track.sps)throw new Error("video track missing pps or sps");if("avc"===segmentCodec)return MP4.box(MP4.types.stsd,MP4.STSD,MP4.avc1(track));if("hevc"===segmentCodec&&track.vps)return MP4.box(MP4.types.stsd,MP4.STSD,MP4.hvc1(track))}throw new Error(`unsupported ${track.type} segment codec (${segmentCodec}/${track.codec})`)}static tkhd(track){const id=track.id,duration=(track.duration||0)*(track.timescale||0),width=track.width||0,height=track.height||0,upperWordDuration=Math.floor(duration/(UINT32_MAX+1)),lowerWordDuration=Math.floor(duration%(UINT32_MAX+1));return MP4.box(MP4.types.tkhd,new Uint8Array([1,0,0,7,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,3,id>>24&255,id>>16&255,id>>8&255,255&id,0,0,0,0,upperWordDuration>>24,upperWordDuration>>16&255,upperWordDuration>>8&255,255&upperWordDuration,lowerWordDuration>>24,lowerWordDuration>>16&255,lowerWordDuration>>8&255,255&lowerWordDuration,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,width>>8&255,255&width,0,0,height>>8&255,255&height,0,0]))}static traf(track,baseMediaDecodeTime){const sampleDependencyTable=MP4.sdtp(track),id=track.id,upperWordBaseMediaDecodeTime=Math.floor(baseMediaDecodeTime/(UINT32_MAX+1)),lowerWordBaseMediaDecodeTime=Math.floor(baseMediaDecodeTime%(UINT32_MAX+1));return MP4.box(MP4.types.traf,MP4.box(MP4.types.tfhd,new Uint8Array([0,0,0,0,id>>24,id>>16&255,id>>8&255,255&id])),MP4.box(MP4.types.tfdt,new Uint8Array([1,0,0,0,upperWordBaseMediaDecodeTime>>24,upperWordBaseMediaDecodeTime>>16&255,upperWordBaseMediaDecodeTime>>8&255,255&upperWordBaseMediaDecodeTime,lowerWordBaseMediaDecodeTime>>24,lowerWordBaseMediaDecodeTime>>16&255,lowerWordBaseMediaDecodeTime>>8&255,255&lowerWordBaseMediaDecodeTime])),MP4.trun(track,sampleDependencyTable.length+16+20+8+16+8+8),sampleDependencyTable)}static trak(track){return track.duration=track.duration||4294967295,MP4.box(MP4.types.trak,MP4.tkhd(track),MP4.mdia(track))}static trex(track){const id=track.id;return MP4.box(MP4.types.trex,new Uint8Array([0,0,0,0,id>>24,id>>16&255,id>>8&255,255&id,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1]))}static trun(track,offset){const samples=track.samples||[],len=samples.length,arraylen=12+16*len,array=new Uint8Array(arraylen);let i,sample,duration,size,flags,cts;for(offset+=8+arraylen,array.set(["video"===track.type?1:0,0,15,1,len>>>24&255,len>>>16&255,len>>>8&255,255&len,offset>>>24&255,offset>>>16&255,offset>>>8&255,255&offset],0),i=0;i<len;i++)sample=samples[i],duration=sample.duration,size=sample.size,flags=sample.flags,cts=sample.cts,array.set([duration>>>24&255,duration>>>16&255,duration>>>8&255,255&duration,size>>>24&255,size>>>16&255,size>>>8&255,255&size,flags.isLeading<<2|flags.dependsOn,flags.isDependedOn<<6|flags.hasRedundancy<<4|flags.paddingValue<<1|flags.isNonSync,61440&flags.degradPrio,15&flags.degradPrio,cts>>>24&255,cts>>>16&255,cts>>>8&255,255&cts],12+16*i);return MP4.box(MP4.types.trun,array)}static initSegment(tracks){MP4.types||MP4.init();const movie=MP4.moov(tracks);return appendUint8Array(MP4.FTYP,movie)}static hvc1(track){const ps=track.params,units=[track.vps,track.sps,track.pps],config=new Uint8Array([1,ps.general_profile_space<<6|(ps.general_tier_flag?32:0)|ps.general_profile_idc,ps.general_profile_compatibility_flags[0],ps.general_profile_compatibility_flags[1],ps.general_profile_compatibility_flags[2],ps.general_profile_compatibility_flags[3],ps.general_constraint_indicator_flags[0],ps.general_constraint_indicator_flags[1],ps.general_constraint_indicator_flags[2],ps.general_constraint_indicator_flags[3],ps.general_constraint_indicator_flags[4],ps.general_constraint_indicator_flags[5],ps.general_level_idc,240|ps.min_spatial_segmentation_idc>>8,255&ps.min_spatial_segmentation_idc,252|ps.parallelismType,252|ps.chroma_format_idc,248|ps.bit_depth_luma_minus8,248|ps.bit_depth_chroma_minus8,0,parseInt(ps.frame_rate.fps),3|ps.temporal_id_nested<<2|ps.num_temporal_layers<<3|(ps.frame_rate.fixed?64:0),units.length]);let length=config.length;for(let i=0;i<units.length;i+=1){length+=3;for(let j=0;j<units[i].length;j+=1)length+=2+units[i][j].length}const hvcC=new Uint8Array(length);hvcC.set(config,0),length=config.length;const iMax=units.length-1;for(let i=0;i<units.length;i+=1){hvcC.set(new Uint8Array([32+i|(i===iMax?128:0),0,units[i].length]),length),length+=3;for(let j=0;j<units[i].length;j+=1)hvcC.set(new Uint8Array([units[i][j].length>>8,255&units[i][j].length]),length),length+=2,hvcC.set(units[i][j],length),length+=units[i][j].length}const hvcc=MP4.box(MP4.types.hvcC,hvcC),width=track.width,height=track.height,hSpacing=track.pixelRatio[0],vSpacing=track.pixelRatio[1];return MP4.box(MP4.types.hvc1,new Uint8Array([0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,width>>8&255,255&width,height>>8&255,255&height,0,72,0,0,0,72,0,0,0,0,0,0,0,1,18,100,97,105,108,121,109,111,116,105,111,110,47,104,108,115,46,106,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,17,17]),hvcc,MP4.box(MP4.types.btrt,new Uint8Array([0,28,156,128,0,45,198,192,0,45,198,192])),MP4.box(MP4.types.pasp,new Uint8Array([hSpacing>>24,hSpacing>>16&255,hSpacing>>8&255,255&hSpacing,vSpacing>>24,vSpacing>>16&255,vSpacing>>8&255,255&vSpacing])))}}MP4.types=void 0,MP4.HDLR_TYPES=void 0,MP4.STTS=void 0,MP4.STSC=void 0,MP4.STCO=void 0,MP4.STSZ=void 0,MP4.VMHD=void 0,MP4.SMHD=void 0,MP4.STSD=void 0,MP4.FTYP=void 0,MP4.DINF=void 0;const MPEG_TS_CLOCK_FREQ_HZ=9e4;function toTimescaleFromBase(baseTime,destScale,srcBase=1,round=!1){const result=baseTime*destScale*srcBase;return round?Math.round(result):result}function toMsFromMpegTsClock(baseTime,round=!1){return toTimescaleFromBase(baseTime,1e3,1/MPEG_TS_CLOCK_FREQ_HZ,round)}let now,chromeVersion=null,safariWebkitVersion=null;function createMp4Sample(isKeyframe,duration,size,cts){return{duration,size,cts,flags:{isLeading:0,isDependedOn:0,hasRedundancy:0,degradPrio:0,dependsOn:isKeyframe?2:1,isNonSync:isKeyframe?0:1}}}class MP4Remuxer extends Logger{constructor(observer,config,typeSupported,logger){if(super("mp4-remuxer",logger),this.observer=void 0,this.config=void 0,this.typeSupported=void 0,this.ISGenerated=!1,this._initPTS=null,this._initDTS=null,this.nextVideoTs=null,this.nextAudioTs=null,this.videoSampleDuration=null,this.isAudioContiguous=!1,this.isVideoContiguous=!1,this.videoTrackConfig=void 0,this.observer=observer,this.config=config,this.typeSupported=typeSupported,this.ISGenerated=!1,null===chromeVersion){const result=(navigator.userAgent||"").match(/Chrome\/(\d+)/i);chromeVersion=result?parseInt(result[1]):0}if(null===safariWebkitVersion){const result=navigator.userAgent.match(/Safari\/(\d+)/i);safariWebkitVersion=result?parseInt(result[1]):0}}destroy(){this.config=this.videoTrackConfig=this._initPTS=this._initDTS=null}resetTimeStamp(defaultTimeStamp){this.log("initPTS & initDTS reset"),this._initPTS=this._initDTS=defaultTimeStamp}resetNextTimestamp(){this.log("reset next timestamp"),this.isVideoContiguous=!1,this.isAudioContiguous=!1}resetInitSegment(){this.log("ISGenerated flag reset"),this.ISGenerated=!1,this.videoTrackConfig=void 0}getVideoStartPts(videoSamples){let rolloverDetected=!1;const firstPts=videoSamples[0].pts,startPTS=videoSamples.reduce(((minPTS,sample)=>{let pts=sample.pts,delta=pts-minPTS;return delta<-4294967296&&(rolloverDetected=!0,pts=normalizePts(pts,firstPts),delta=pts-minPTS),delta>0?minPTS:pts}),firstPts);return rolloverDetected&&this.debug("PTS rollover detected"),startPTS}remux(audioTrack,videoTrack,id3Track,textTrack,timeOffset,accurateTimeOffset,flush,playlistType){let video,audio,initSegment,text,id3,independent,audioTimeOffset=timeOffset,videoTimeOffset=timeOffset;const hasAudio=audioTrack.pid>-1,hasVideo=videoTrack.pid>-1,length=videoTrack.samples.length,enoughAudioSamples=audioTrack.samples.length>0,enoughVideoSamples=flush&&length>0||length>1;if((!hasAudio||enoughAudioSamples)&&(!hasVideo||enoughVideoSamples)||this.ISGenerated||flush){if(this.ISGenerated){var _videoTrack$pixelRati,_config$pixelRatio,_videoTrack$pixelRati2,_config$pixelRatio2;const config=this.videoTrackConfig;(config&&(videoTrack.width!==config.width||videoTrack.height!==config.height||(null==(_videoTrack$pixelRati=videoTrack.pixelRatio)?void 0:_videoTrack$pixelRati[0])!==(null==(_config$pixelRatio=config.pixelRatio)?void 0:_config$pixelRatio[0])||(null==(_videoTrack$pixelRati2=videoTrack.pixelRatio)?void 0:_videoTrack$pixelRati2[1])!==(null==(_config$pixelRatio2=config.pixelRatio)?void 0:_config$pixelRatio2[1]))||!config&&enoughVideoSamples||null===this.nextAudioTs&&enoughAudioSamples)&&this.resetInitSegment()}this.ISGenerated||(initSegment=this.generateIS(audioTrack,videoTrack,timeOffset,accurateTimeOffset));const isVideoContiguous=this.isVideoContiguous;let firstKeyFramePTS,firstKeyFrameIndex=-1;if(enoughVideoSamples&&(firstKeyFrameIndex=function findKeyframeIndex(samples){for(let i=0;i<samples.length;i++)if(samples[i].key)return i;return-1}(videoTrack.samples),!isVideoContiguous&&this.config.forceKeyFrameOnDiscontinuity))if(independent=!0,firstKeyFrameIndex>0){this.warn(`Dropped ${firstKeyFrameIndex} out of ${length} video samples due to a missing keyframe`);const startPTS=this.getVideoStartPts(videoTrack.samples);videoTrack.samples=videoTrack.samples.slice(firstKeyFrameIndex),videoTrack.dropped+=firstKeyFrameIndex,videoTimeOffset+=(videoTrack.samples[0].pts-startPTS)/videoTrack.inputTimeScale,firstKeyFramePTS=videoTimeOffset}else-1===firstKeyFrameIndex&&(this.warn(`No keyframe found out of ${length} video samples`),independent=!1);if(this.ISGenerated){if(enoughAudioSamples&&enoughVideoSamples){const startPTS=this.getVideoStartPts(videoTrack.samples),audiovideoTimestampDelta=(normalizePts(audioTrack.samples[0].pts,startPTS)-startPTS)/videoTrack.inputTimeScale;audioTimeOffset+=Math.max(0,audiovideoTimestampDelta),videoTimeOffset+=Math.max(0,-audiovideoTimestampDelta)}if(enoughAudioSamples){if(audioTrack.samplerate||(this.warn("regenerate InitSegment as audio detected"),initSegment=this.generateIS(audioTrack,videoTrack,timeOffset,accurateTimeOffset)),audio=this.remuxAudio(audioTrack,audioTimeOffset,this.isAudioContiguous,accurateTimeOffset,hasVideo||enoughVideoSamples||playlistType===PlaylistLevelType.AUDIO?videoTimeOffset:void 0),enoughVideoSamples){const audioTrackLength=audio?audio.endPTS-audio.startPTS:0;videoTrack.inputTimeScale||(this.warn("regenerate InitSegment as video detected"),initSegment=this.generateIS(audioTrack,videoTrack,timeOffset,accurateTimeOffset)),video=this.remuxVideo(videoTrack,videoTimeOffset,isVideoContiguous,audioTrackLength)}}else enoughVideoSamples&&(video=this.remuxVideo(videoTrack,videoTimeOffset,isVideoContiguous,0));video&&(video.firstKeyFrame=firstKeyFrameIndex,video.independent=-1!==firstKeyFrameIndex,video.firstKeyFramePTS=firstKeyFramePTS)}}return this.ISGenerated&&this._initPTS&&this._initDTS&&(id3Track.samples.length&&(id3=flushTextTrackMetadataCueSamples(id3Track,timeOffset,this._initPTS,this._initDTS)),textTrack.samples.length&&(text=flushTextTrackUserdataCueSamples(textTrack,timeOffset,this._initPTS))),{audio,video,initSegment,independent,text,id3}}generateIS(audioTrack,videoTrack,timeOffset,accurateTimeOffset){const audioSamples=audioTrack.samples,videoSamples=videoTrack.samples,typeSupported=this.typeSupported,tracks={},_initPTS=this._initPTS;let initPTS,initDTS,timescale,computePTSDTS=!_initPTS||accurateTimeOffset,container="audio/mp4",trackId=-1;if(computePTSDTS&&(initPTS=initDTS=1/0),audioTrack.config&&audioSamples.length){switch(audioTrack.timescale=audioTrack.samplerate,audioTrack.segmentCodec){case"mp3":typeSupported.mpeg?(container="audio/mpeg",audioTrack.codec=""):typeSupported.mp3&&(audioTrack.codec="mp3");break;case"ac3":audioTrack.codec="ac-3"}tracks.audio={id:"audio",container,codec:audioTrack.codec,initSegment:"mp3"===audioTrack.segmentCodec&&typeSupported.mpeg?new Uint8Array(0):MP4.initSegment([audioTrack]),metadata:{channelCount:audioTrack.channelCount}},computePTSDTS&&(trackId=audioTrack.id,timescale=audioTrack.inputTimeScale,_initPTS&&timescale===_initPTS.timescale?computePTSDTS=!1:initPTS=initDTS=audioSamples[0].pts-Math.round(timescale*timeOffset))}if(videoTrack.sps&&videoTrack.pps&&videoSamples.length){if(videoTrack.timescale=videoTrack.inputTimeScale,tracks.video={id:"main",container:"video/mp4",codec:videoTrack.codec,initSegment:MP4.initSegment([videoTrack]),metadata:{width:videoTrack.width,height:videoTrack.height}},computePTSDTS)if(trackId=videoTrack.id,timescale=videoTrack.inputTimeScale,_initPTS&&timescale===_initPTS.timescale)computePTSDTS=!1;else{const startPTS=this.getVideoStartPts(videoSamples),startOffset=Math.round(timescale*timeOffset);initDTS=Math.min(initDTS,normalizePts(videoSamples[0].dts,startPTS)-startOffset),initPTS=Math.min(initPTS,startPTS-startOffset)}this.videoTrackConfig={width:videoTrack.width,height:videoTrack.height,pixelRatio:videoTrack.pixelRatio}}if(Object.keys(tracks).length)return this.ISGenerated=!0,computePTSDTS?(_initPTS&&this.warn(`Timestamps at playlist time: ${accurateTimeOffset?"":"~"}${timeOffset} ${initPTS/timescale} != initPTS: ${_initPTS.baseTime/_initPTS.timescale} (${_initPTS.baseTime}/${_initPTS.timescale}) trackId: ${_initPTS.trackId}`),this.log(`Found initPTS at playlist time: ${timeOffset} offset: ${initPTS/timescale} (${initPTS}/${timescale}) trackId: ${trackId}`),this._initPTS={baseTime:initPTS,timescale,trackId},this._initDTS={baseTime:initDTS,timescale,trackId}):initPTS=timescale=void 0,{tracks,initPTS,timescale,trackId}}remuxVideo(track,timeOffset,contiguous,audioTrackLength){const timeScale=track.inputTimeScale,inputSamples=track.samples,outputSamples=[],nbSamples=inputSamples.length,initPTS=this._initPTS,initTime=initPTS.baseTime*timeScale/initPTS.timescale;let firstDTS,lastDTS,nextVideoTs=this.nextVideoTs,offset=8,mp4SampleDuration=this.videoSampleDuration,minPTS=Number.POSITIVE_INFINITY,maxPTS=Number.NEGATIVE_INFINITY,sortSamples=!1;if(!contiguous||null===nextVideoTs){const pts=initTime+timeOffset*timeScale,cts=inputSamples[0].pts-normalizePts(inputSamples[0].dts,inputSamples[0].pts);chromeVersion&&null!==nextVideoTs&&Math.abs(pts-cts-(nextVideoTs+initTime))<15e3?contiguous=!0:nextVideoTs=pts-cts-initTime}const nextVideoPts=nextVideoTs+initTime;for(let i=0;i<nbSamples;i++){const sample=inputSamples[i];sample.pts=normalizePts(sample.pts,nextVideoPts),sample.dts=normalizePts(sample.dts,nextVideoPts),sample.dts<inputSamples[i>0?i-1:i].dts&&(sortSamples=!0)}sortSamples&&inputSamples.sort((function(a,b){const deltadts=a.dts-b.dts,deltapts=a.pts-b.pts;return deltadts||deltapts})),firstDTS=inputSamples[0].dts,lastDTS=inputSamples[inputSamples.length-1].dts;const inputDuration=lastDTS-firstDTS,averageSampleDuration=inputDuration?Math.round(inputDuration/(nbSamples-1)):mp4SampleDuration||track.inputTimeScale/30;if(contiguous){const delta=firstDTS-nextVideoPts,foundHole=delta>averageSampleDuration,foundOverlap=delta<-1;if((foundHole||foundOverlap)&&(foundHole?this.warn(`${(track.segmentCodec||"").toUpperCase()}: ${toMsFromMpegTsClock(delta,!0)} ms (${delta}dts) hole between fragments detected at ${timeOffset.toFixed(3)}`):this.warn(`${(track.segmentCodec||"").toUpperCase()}: ${toMsFromMpegTsClock(-delta,!0)} ms (${delta}dts) overlapping between fragments detected at ${timeOffset.toFixed(3)}`),!foundOverlap||nextVideoPts>=inputSamples[0].pts||chromeVersion)){firstDTS=nextVideoPts;const firstPTS=inputSamples[0].pts-delta;if(foundHole)inputSamples[0].dts=firstDTS,inputSamples[0].pts=firstPTS;else{let isPTSOrderRetained=!0;for(let i=0;i<inputSamples.length&&!(inputSamples[i].dts>firstPTS&&isPTSOrderRetained);i++){const prevPTS=inputSamples[i].pts;if(inputSamples[i].dts-=delta,inputSamples[i].pts-=delta,i<inputSamples.length-1){const nextSamplePTS=inputSamples[i+1].pts;isPTSOrderRetained=nextSamplePTS<=inputSamples[i].pts==nextSamplePTS<=prevPTS}}}this.log(`Video: Initial PTS/DTS adjusted: ${toMsFromMpegTsClock(firstPTS,!0)}/${toMsFromMpegTsClock(firstDTS,!0)}, delta: ${toMsFromMpegTsClock(delta,!0)} ms`)}}firstDTS=Math.max(0,firstDTS);let nbNalu=0,naluLen=0,dtsStep=firstDTS;for(let i=0;i<nbSamples;i++){const sample=inputSamples[i],units=sample.units,nbUnits=units.length;let sampleLen=0;for(let j=0;j<nbUnits;j++)sampleLen+=units[j].data.length;naluLen+=sampleLen,nbNalu+=nbUnits,sample.length=sampleLen,sample.dts<dtsStep?(sample.dts=dtsStep,dtsStep+=averageSampleDuration/4|0||1):dtsStep=sample.dts,minPTS=Math.min(sample.pts,minPTS),maxPTS=Math.max(sample.pts,maxPTS)}lastDTS=inputSamples[nbSamples-1].dts;const mdatSize=naluLen+4*nbNalu+8;let mdat;try{mdat=new Uint8Array(mdatSize)}catch(err){return void this.observer.emit(Events.ERROR,Events.ERROR,{type:ErrorTypes.MUX_ERROR,details:ErrorDetails.REMUX_ALLOC_ERROR,fatal:!1,error:err,bytes:mdatSize,reason:`fail allocating video mdat ${mdatSize}`})}const view=new DataView(mdat.buffer);view.setUint32(0,mdatSize),mdat.set(MP4.types.mdat,4);let stretchedLastFrame=!1,minDtsDelta=Number.POSITIVE_INFINITY,minPtsDelta=Number.POSITIVE_INFINITY,maxDtsDelta=Number.NEGATIVE_INFINITY,maxPtsDelta=Number.NEGATIVE_INFINITY;for(let i=0;i<nbSamples;i++){const VideoSample=inputSamples[i],VideoSampleUnits=VideoSample.units;let ptsDelta,mp4SampleLength=0;for(let j=0,nbUnits=VideoSampleUnits.length;j<nbUnits;j++){const unit=VideoSampleUnits[j],unitData=unit.data,unitDataLen=unit.data.byteLength;view.setUint32(offset,unitDataLen),offset+=4,mdat.set(unitData,offset),offset+=unitDataLen,mp4SampleLength+=4+unitDataLen}if(i<nbSamples-1)mp4SampleDuration=inputSamples[i+1].dts-VideoSample.dts,ptsDelta=inputSamples[i+1].pts-VideoSample.pts;else{const config=this.config,lastFrameDuration=i>0?VideoSample.dts-inputSamples[i-1].dts:averageSampleDuration;if(ptsDelta=i>0?VideoSample.pts-inputSamples[i-1].pts:averageSampleDuration,config.stretchShortVideoTrack&&null!==this.nextAudioTs){const gapTolerance=Math.floor(config.maxBufferHole*timeScale),deltaToFrameEnd=(audioTrackLength?minPTS+audioTrackLength*timeScale:this.nextAudioTs+initTime)-VideoSample.pts;deltaToFrameEnd>gapTolerance?(mp4SampleDuration=deltaToFrameEnd-lastFrameDuration,mp4SampleDuration<0?mp4SampleDuration=lastFrameDuration:stretchedLastFrame=!0,this.log(`It is approximately ${deltaToFrameEnd/90} ms to the next segment; using duration ${mp4SampleDuration/90} ms for the last video frame.`)):mp4SampleDuration=lastFrameDuration}else mp4SampleDuration=lastFrameDuration}const compositionTimeOffset=Math.round(VideoSample.pts-VideoSample.dts);minDtsDelta=Math.min(minDtsDelta,mp4SampleDuration),maxDtsDelta=Math.max(maxDtsDelta,mp4SampleDuration),minPtsDelta=Math.min(minPtsDelta,ptsDelta),maxPtsDelta=Math.max(maxPtsDelta,ptsDelta),outputSamples.push(createMp4Sample(VideoSample.key,mp4SampleDuration,mp4SampleLength,compositionTimeOffset))}if(outputSamples.length)if(chromeVersion){if(chromeVersion<70){const flags=outputSamples[0].flags;flags.dependsOn=2,flags.isNonSync=0}}else if(safariWebkitVersion&&maxPtsDelta-minPtsDelta<maxDtsDelta-minDtsDelta&&averageSampleDuration/maxDtsDelta<.025&&0===outputSamples[0].cts){this.warn("Found irregular gaps in sample duration. Using PTS instead of DTS to determine MP4 sample duration.");let dts=firstDTS;for(let i=0,len=outputSamples.length;i<len;i++){const nextDts=dts+outputSamples[i].duration,pts=dts+outputSamples[i].cts;if(i<len-1){const nextPts=nextDts+outputSamples[i+1].cts;outputSamples[i].duration=nextPts-pts}else outputSamples[i].duration=i?outputSamples[i-1].duration:averageSampleDuration;outputSamples[i].cts=0,dts=nextDts}}mp4SampleDuration=stretchedLastFrame||!mp4SampleDuration?averageSampleDuration:mp4SampleDuration;const endDTS=lastDTS+mp4SampleDuration;this.nextVideoTs=nextVideoTs=endDTS-initTime,this.videoSampleDuration=mp4SampleDuration,this.isVideoContiguous=!0;const data={data1:MP4.moof(track.sequenceNumber++,firstDTS,_extends(track,{samples:outputSamples})),data2:mdat,startPTS:(minPTS-initTime)/timeScale,endPTS:(maxPTS+mp4SampleDuration-initTime)/timeScale,startDTS:(firstDTS-initTime)/timeScale,endDTS:nextVideoTs/timeScale,type:"video",hasAudio:!1,hasVideo:!0,nb:outputSamples.length,dropped:track.dropped};return track.samples=[],track.dropped=0,data}getSamplesPerFrame(track){switch(track.segmentCodec){case"mp3":return 1152;case"ac3":return 1536;default:return 1024}}remuxAudio(track,timeOffset,contiguous,accurateTimeOffset,videoTimeOffset){const inputTimeScale=track.inputTimeScale,scaleFactor=inputTimeScale/(track.samplerate?track.samplerate:inputTimeScale),mp4SampleDuration=this.getSamplesPerFrame(track),inputSampleDuration=mp4SampleDuration*scaleFactor,initPTS=this._initPTS,rawMPEG="mp3"===track.segmentCodec&&this.typeSupported.mpeg,outputSamples=[],alignedWithVideo=void 0!==videoTimeOffset;let inputSamples=track.samples,offset=rawMPEG?0:8,nextAudioTs=this.nextAudioTs||-1;const initTime=initPTS.baseTime*inputTimeScale/initPTS.timescale,timeOffsetMpegTS=initTime+timeOffset*inputTimeScale;if(this.isAudioContiguous=contiguous=contiguous||inputSamples.length&&nextAudioTs>0&&(accurateTimeOffset&&Math.abs(timeOffsetMpegTS-(nextAudioTs+initTime))<9e3||Math.abs(normalizePts(inputSamples[0].pts,timeOffsetMpegTS)-(nextAudioTs+initTime))<20*inputSampleDuration),inputSamples.forEach((function(sample){sample.pts=normalizePts(sample.pts,timeOffsetMpegTS)})),!contiguous||nextAudioTs<0){if(inputSamples=inputSamples.filter((sample=>sample.pts>=0)),!inputSamples.length)return;nextAudioTs=0===videoTimeOffset?0:accurateTimeOffset&&!alignedWithVideo?Math.max(0,timeOffsetMpegTS-initTime):inputSamples[0].pts-initTime}if("aac"===track.segmentCodec){const maxAudioFramesDrift=this.config.maxAudioFramesDrift;for(let i=0,nextPts=nextAudioTs+initTime;i<inputSamples.length;i++){const sample=inputSamples[i],pts=sample.pts,delta=pts-nextPts,duration=Math.abs(1e3*delta/inputTimeScale);if(delta<=-maxAudioFramesDrift*inputSampleDuration&&alignedWithVideo)0===i&&(this.warn(`Audio frame @ ${(pts/inputTimeScale).toFixed(3)}s overlaps marker by ${Math.round(1e3*delta/inputTimeScale)} ms.`),this.nextAudioTs=nextAudioTs=pts-initTime,nextPts=pts);else if(delta>=maxAudioFramesDrift*inputSampleDuration&&duration<1e4&&alignedWithVideo){let missing=Math.round(delta/inputSampleDuration);for(nextPts=pts-missing*inputSampleDuration;nextPts<0&&missing&&inputSampleDuration;)missing--,nextPts+=inputSampleDuration;0===i&&(this.nextAudioTs=nextAudioTs=nextPts-initTime),this.warn(`Injecting ${missing} audio frames @ ${((nextPts-initTime)/inputTimeScale).toFixed(3)}s due to ${Math.round(1e3*delta/inputTimeScale)} ms gap.`);for(let j=0;j<missing;j++){let fillFrame=AAC.getSilentFrame(track.parsedCodec||track.manifestCodec||track.codec,track.channelCount);fillFrame||(this.log("Unable to get silent frame for given audio codec; duplicating last frame instead."),fillFrame=sample.unit.subarray()),inputSamples.splice(i,0,{unit:fillFrame,pts:nextPts}),nextPts+=inputSampleDuration,i++}}sample.pts=nextPts,nextPts+=inputSampleDuration}}let mdat,firstPTS=null,lastPTS=null,mdatSize=0,sampleLength=inputSamples.length;for(;sampleLength--;)mdatSize+=inputSamples[sampleLength].unit.byteLength;for(let j=0,_nbSamples=inputSamples.length;j<_nbSamples;j++){const audioSample=inputSamples[j],unit=audioSample.unit;let pts=audioSample.pts;if(null!==lastPTS){outputSamples[j-1].duration=Math.round((pts-lastPTS)/scaleFactor)}else{if(contiguous&&"aac"===track.segmentCodec&&(pts=nextAudioTs+initTime),firstPTS=pts,!(mdatSize>0))return;mdatSize+=offset;try{mdat=new Uint8Array(mdatSize)}catch(err){return void this.observer.emit(Events.ERROR,Events.ERROR,{type:ErrorTypes.MUX_ERROR,details:ErrorDetails.REMUX_ALLOC_ERROR,fatal:!1,error:err,bytes:mdatSize,reason:`fail allocating audio mdat ${mdatSize}`})}if(!rawMPEG){new DataView(mdat.buffer).setUint32(0,mdatSize),mdat.set(MP4.types.mdat,4)}}mdat.set(unit,offset);const unitLen=unit.byteLength;offset+=unitLen,outputSamples.push(createMp4Sample(!0,mp4SampleDuration,unitLen,0)),lastPTS=pts}const nbSamples=outputSamples.length;if(!nbSamples)return;const lastSample=outputSamples[outputSamples.length-1];nextAudioTs=lastPTS-initTime,this.nextAudioTs=nextAudioTs+scaleFactor*lastSample.duration;const moof=rawMPEG?new Uint8Array(0):MP4.moof(track.sequenceNumber++,firstPTS/scaleFactor,_extends({},track,{samples:outputSamples}));track.samples=[];const start=(firstPTS-initTime)/inputTimeScale,end=nextAudioTs/inputTimeScale,audioData={data1:moof,data2:mdat,startPTS:start,endPTS:end,startDTS:start,endDTS:end,type:"audio",hasAudio:!0,hasVideo:!1,nb:nbSamples};return this.isAudioContiguous=!0,audioData}}function normalizePts(value,reference){let offset;if(null===reference)return value;for(offset=reference<value?-8589934592:8589934592;Math.abs(value-reference)>4294967296;)value+=offset;return value}function flushTextTrackMetadataCueSamples(track,timeOffset,initPTS,initDTS){const length=track.samples.length;if(!length)return;const inputTimeScale=track.inputTimeScale;for(let index=0;index<length;index++){const sample=track.samples[index];sample.pts=normalizePts(sample.pts-initPTS.baseTime*inputTimeScale/initPTS.timescale,timeOffset*inputTimeScale)/inputTimeScale,sample.dts=normalizePts(sample.dts-initDTS.baseTime*inputTimeScale/initDTS.timescale,timeOffset*inputTimeScale)/inputTimeScale}const samples=track.samples;return track.samples=[],{samples}}function flushTextTrackUserdataCueSamples(track,timeOffset,initPTS){const length=track.samples.length;if(!length)return;const inputTimeScale=track.inputTimeScale;for(let index=0;index<length;index++){const sample=track.samples[index];sample.pts=normalizePts(sample.pts-initPTS.baseTime*inputTimeScale/initPTS.timescale,timeOffset*inputTimeScale)/inputTimeScale}track.samples.sort(((a,b)=>a.pts-b.pts));const samples=track.samples;return track.samples=[],{samples}}function toStartEndOrDefault(trackTimes,defaultValue,end=!1){return void 0!==(null==trackTimes?void 0:trackTimes.start)?(trackTimes.start+(end?trackTimes.duration:0))/trackTimes.timescale:defaultValue}function getParsedTrackCodec(track,type,logger){const parsedCodec=track.codec;if(parsedCodec&&parsedCodec.length>4)return parsedCodec;if(type===ElementaryStreamTypes_AUDIO){if("ec-3"===parsedCodec||"ac-3"===parsedCodec||"alac"===parsedCodec)return parsedCodec;if("fLaC"===parsedCodec||"Opus"===parsedCodec){return getCodecCompatibleName(parsedCodec,!1)}return logger.warn(`Unhandled audio codec "${parsedCodec}" in mp4 MAP`),parsedCodec||"mp4a"}return logger.warn(`Unhandled video codec "${parsedCodec}" in mp4 MAP`),parsedCodec||"avc1"}try{now=self.performance.now.bind(self.performance)}catch(err){now=Date.now}const muxConfig=[{demux:class MP4Demuxer{constructor(observer,config){this.remainderData=null,this.timeOffset=0,this.config=void 0,this.videoTrack=void 0,this.audioTrack=void 0,this.id3Track=void 0,this.txtTrack=void 0,this.config=config}resetTimeStamp(){}resetInitSegment(initSegment,audioCodec,videoCodec,trackDuration){const videoTrack=this.videoTrack=dummyTrack("video",1),audioTrack=this.audioTrack=dummyTrack("audio",1),captionTrack=this.txtTrack=dummyTrack("text",1);if(this.id3Track=dummyTrack("id3",1),this.timeOffset=0,null==initSegment||!initSegment.byteLength)return;const initData=parseInitSegment(initSegment);if(initData.video){const{id,timescale,codec,supplemental}=initData.video;videoTrack.id=id,videoTrack.timescale=captionTrack.timescale=timescale,videoTrack.codec=codec,videoTrack.supplemental=supplemental}if(initData.audio){const{id,timescale,codec}=initData.audio;audioTrack.id=id,audioTrack.timescale=timescale,audioTrack.codec=codec}captionTrack.id=RemuxerTrackIdConfig.text,videoTrack.sampleDuration=0,videoTrack.duration=audioTrack.duration=trackDuration}resetContiguity(){this.remainderData=null}static probe(data){return function hasMoofData(data){const end=data.byteLength;for(let i=0;i<end;){const size=readUint32(data,i);if(size>8&&109===data[i+4]&&111===data[i+5]&&111===data[i+6]&&102===data[i+7])return!0;i=size>1?i+size:end}return!1}(data)}demux(data,timeOffset){this.timeOffset=timeOffset;let videoSamples=data;const videoTrack=this.videoTrack,textTrack=this.txtTrack;if(this.config.progressive){this.remainderData&&(videoSamples=appendUint8Array(this.remainderData,data));const segmentedData=function segmentValidRange(data){const segmentedRange={valid:null,remainder:null},moofs=findBox(data,["moof"]);if(moofs.length<2)return segmentedRange.remainder=data,segmentedRange;const last=moofs[moofs.length-1];return segmentedRange.valid=data.slice(0,last.byteOffset-8),segmentedRange.remainder=data.slice(last.byteOffset-8),segmentedRange}(videoSamples);this.remainderData=segmentedData.remainder,videoTrack.samples=segmentedData.valid||new Uint8Array}else videoTrack.samples=videoSamples;const id3Track=this.extractID3Track(videoTrack,timeOffset);return textTrack.samples=parseSamples(timeOffset,videoTrack),{videoTrack,audioTrack:this.audioTrack,id3Track,textTrack:this.txtTrack}}flush(){const timeOffset=this.timeOffset,videoTrack=this.videoTrack,textTrack=this.txtTrack;videoTrack.samples=this.remainderData||new Uint8Array,this.remainderData=null;const id3Track=this.extractID3Track(videoTrack,this.timeOffset);return textTrack.samples=parseSamples(timeOffset,videoTrack),{videoTrack,audioTrack:dummyTrack(),id3Track,textTrack:dummyTrack()}}extractID3Track(videoTrack,timeOffset){const id3Track=this.id3Track;if(videoTrack.samples.length){const emsgs=findBox(videoTrack.samples,["emsg"]);emsgs&&emsgs.forEach((data=>{const emsgInfo=function parseEmsg(data){const version=data[0];let schemeIdUri="",value="",timeScale=0,presentationTimeDelta=0,presentationTime=0,eventDuration=0,id=0,offset=0;if(0===version){for(;"\0"!==bin2str(data.subarray(offset,offset+1));)schemeIdUri+=bin2str(data.subarray(offset,offset+1)),offset+=1;for(schemeIdUri+=bin2str(data.subarray(offset,offset+1)),offset+=1;"\0"!==bin2str(data.subarray(offset,offset+1));)value+=bin2str(data.subarray(offset,offset+1)),offset+=1;value+=bin2str(data.subarray(offset,offset+1)),offset+=1,timeScale=readUint32(data,12),presentationTimeDelta=readUint32(data,16),eventDuration=readUint32(data,20),id=readUint32(data,24),offset=28}else if(1===version){offset+=4,timeScale=readUint32(data,offset),offset+=4;const leftPresentationTime=readUint32(data,offset);offset+=4;const rightPresentationTime=readUint32(data,offset);for(offset+=4,presentationTime=2**32*leftPresentationTime+rightPresentationTime,isSafeInteger(presentationTime)||(presentationTime=Number.MAX_SAFE_INTEGER,logger.warn("Presentation time exceeds safe integer limit and wrapped to max safe integer in parsing emsg box")),eventDuration=readUint32(data,offset),offset+=4,id=readUint32(data,offset),offset+=4;"\0"!==bin2str(data.subarray(offset,offset+1));)schemeIdUri+=bin2str(data.subarray(offset,offset+1)),offset+=1;for(schemeIdUri+=bin2str(data.subarray(offset,offset+1)),offset+=1;"\0"!==bin2str(data.subarray(offset,offset+1));)value+=bin2str(data.subarray(offset,offset+1)),offset+=1;value+=bin2str(data.subarray(offset,offset+1)),offset+=1}return{schemeIdUri,value,timeScale,presentationTime,presentationTimeDelta,eventDuration,id,payload:data.subarray(offset,data.byteLength)}}(data);if(emsgSchemePattern.test(emsgInfo.schemeIdUri)){const pts=getEmsgStartTime(emsgInfo,timeOffset);let duration=4294967295===emsgInfo.eventDuration?Number.POSITIVE_INFINITY:emsgInfo.eventDuration/emsgInfo.timeScale;duration<=.001&&(duration=Number.POSITIVE_INFINITY);const payload=emsgInfo.payload;id3Track.samples.push({data:payload,len:payload.byteLength,dts:pts,pts,type:MetadataSchema.emsg,duration})}else if(this.config.enableEmsgKLVMetadata&&emsgInfo.schemeIdUri.startsWith("urn:misb:KLV:bin:1910.1")){const pts=getEmsgStartTime(emsgInfo,timeOffset);id3Track.samples.push({data:emsgInfo.payload,len:emsgInfo.payload.byteLength,dts:pts,pts,type:MetadataSchema.misbklv,duration:Number.POSITIVE_INFINITY})}}))}return id3Track}demuxSampleAes(data,keyData,timeOffset){return Promise.reject(new Error("The MP4 demuxer does not support SAMPLE-AES decryption"))}destroy(){this.config=null,this.remainderData=null,this.videoTrack=this.audioTrack=this.id3Track=this.txtTrack=void 0}},remux:class PassThroughRemuxer extends Logger{constructor(observer,config,typeSupported,logger){super("passthrough-remuxer",logger),this.emitInitSegment=!1,this.audioCodec=void 0,this.videoCodec=void 0,this.initData=void 0,this.initPTS=null,this.initTracks=void 0,this.lastEndTime=null,this.isVideoContiguous=!1}destroy(){}resetTimeStamp(defaultInitPTS){this.lastEndTime=null;const initPTS=this.initPTS;initPTS&&defaultInitPTS&&initPTS.baseTime===defaultInitPTS.baseTime&&initPTS.timescale===defaultInitPTS.timescale||(this.initPTS=defaultInitPTS)}resetNextTimestamp(){this.isVideoContiguous=!1,this.lastEndTime=null}resetInitSegment(initSegment,audioCodec,videoCodec,decryptdata){this.audioCodec=audioCodec,this.videoCodec=videoCodec,this.generateInitSegment(initSegment,decryptdata),this.emitInitSegment=!0}generateInitSegment(initSegment,decryptdata){let{audioCodec,videoCodec}=this;if(null==initSegment||!initSegment.byteLength)return this.initTracks=void 0,void(this.initData=void 0);const{audio,video}=this.initData=parseInitSegment(initSegment);if(decryptdata)!function patchEncyptionData(initSegment,decryptdata){if(!initSegment||!decryptdata)return;const keyId=decryptdata.keyId;keyId&&decryptdata.isCommonEncryption&&findBox(initSegment,["moov","trak"]).forEach((trak=>{const sampleEntries=findBox(trak,["mdia","minf","stbl","stsd"])[0].subarray(8);let encBoxes=findBox(sampleEntries,["enca"]);const isAudio=encBoxes.length>0;isAudio||(encBoxes=findBox(sampleEntries,["encv"])),encBoxes.forEach((enc=>{findBox(isAudio?enc.subarray(28):enc.subarray(78),["sinf"]).forEach((sinf=>{const tenc=parseSinf(sinf);if(tenc){const tencKeyId=tenc.subarray(8,24);tencKeyId.some((b=>0!==b))||(logger.log(`[eme] Patching keyId in 'enc${isAudio?"a":"v"}>sinf>>tenc' box: ${Hex_hexDump(tencKeyId)} -> ${Hex_hexDump(keyId)}`),tenc.set(keyId,8))}}))}))}))}(initSegment,decryptdata);else{const eitherTrack=audio||video;null!=eitherTrack&&eitherTrack.encrypted&&this.warn(`Init segment with encrypted track with has no key ("${eitherTrack.codec}")!`)}audio&&(audioCodec=getParsedTrackCodec(audio,ElementaryStreamTypes_AUDIO,this)),video&&(videoCodec=getParsedTrackCodec(video,ElementaryStreamTypes_VIDEO,this));const tracks={};audio&&video?tracks.audiovideo={container:"video/mp4",codec:audioCodec+","+videoCodec,supplemental:video.supplemental,encrypted:video.encrypted,initSegment,id:"main"}:audio?tracks.audio={container:"audio/mp4",codec:audioCodec,encrypted:audio.encrypted,initSegment,id:"audio"}:video?tracks.video={container:"video/mp4",codec:videoCodec,supplemental:video.supplemental,encrypted:video.encrypted,initSegment,id:"main"}:this.warn("initSegment does not contain moov or trak boxes."),this.initTracks=tracks}remux(audioTrack,videoTrack,id3Track,textTrack,timeOffset,accurateTimeOffset){var _initData,_initData2;let{initPTS,lastEndTime}=this;const result={audio:void 0,video:void 0,text:textTrack,id3:id3Track,initSegment:void 0};isFiniteNumber(lastEndTime)||(lastEndTime=this.lastEndTime=timeOffset||0);const data=videoTrack.samples;if(!data.length)return result;const initSegment={initPTS:void 0,timescale:void 0,trackId:void 0};let initData=this.initData;if(null!=(_initData=initData)&&_initData.length||(this.generateInitSegment(data),initData=this.initData),null==(_initData2=initData)||!_initData2.length)return this.warn("Failed to generate initSegment."),result;this.emitInitSegment&&(initSegment.tracks=this.initTracks,this.emitInitSegment=!1);const trackSampleData=function getSampleData(data,initData,logger){const tracks={},trafs=findBox(data,["moof","traf"]);for(let i=0;i<trafs.length;i++){const traf=trafs[i],tfhd=findBox(traf,["tfhd"])[0],id=readUint32(tfhd,4),track=initData[id];if(!track)continue;tracks[id]||(tracks[id]={start:NaN,duration:0,sampleCount:0,timescale:track.timescale,type:track.type});const trackTimes=tracks[id],tfdt=findBox(traf,["tfdt"])[0];if(tfdt){const version=tfdt[0];let baseTime=readUint32(tfdt,4);1===version&&(baseTime===UINT32_MAX$1?logger.warn("[mp4-demuxer]: Ignoring assumed invalid signed 64-bit track fragment decode time"):(baseTime*=UINT32_MAX$1+1,baseTime+=readUint32(tfdt,8))),isFiniteNumber(baseTime)&&(!isFiniteNumber(trackTimes.start)||baseTime<trackTimes.start)&&(trackTimes.start=baseTime)}const trackDefault=track.default,tfhdFlags=readUint32(tfhd,0)|(null==trackDefault?void 0:trackDefault.flags);let defaultSampleDuration=(null==trackDefault?void 0:trackDefault.duration)||0;8&tfhdFlags&&(defaultSampleDuration=readUint32(tfhd,2&tfhdFlags?12:8));const truns=findBox(traf,["trun"]);let sampleDTS=trackTimes.start||0,rawDuration=0,sampleDuration=defaultSampleDuration;for(let j=0;j<truns.length;j++){const trun=truns[j],sampleCount=readUint32(trun,4),sampleIndex=trackTimes.sampleCount;trackTimes.sampleCount+=sampleCount;const dataOffsetPresent=1&trun[3],firstSampleFlagsPresent=4&trun[3],sampleDurationPresent=1&trun[2],sampleSizePresent=2&trun[2],sampleFlagsPresent=4&trun[2],sampleCompositionTimeOffsetPresent=8&trun[2];let offset=8,remaining=sampleCount;for(dataOffsetPresent&&(offset+=4),firstSampleFlagsPresent&&sampleCount&&(1&trun[offset+1]||void 0!==trackTimes.keyFrameIndex||(trackTimes.keyFrameIndex=sampleIndex),offset+=4,sampleDurationPresent?(sampleDuration=readUint32(trun,offset),offset+=4):sampleDuration=defaultSampleDuration,sampleSizePresent&&(offset+=4),sampleCompositionTimeOffsetPresent&&(offset+=4),sampleDTS+=sampleDuration,rawDuration+=sampleDuration,remaining--);remaining--;)sampleDurationPresent?(sampleDuration=readUint32(trun,offset),offset+=4):sampleDuration=defaultSampleDuration,sampleSizePresent&&(offset+=4),sampleFlagsPresent&&(1&trun[offset+1]||void 0===trackTimes.keyFrameIndex&&(trackTimes.keyFrameIndex=trackTimes.sampleCount-(remaining+1),trackTimes.keyFrameStart=sampleDTS),offset+=4),sampleCompositionTimeOffsetPresent&&(offset+=4),sampleDTS+=sampleDuration,rawDuration+=sampleDuration;!rawDuration&&defaultSampleDuration&&(rawDuration+=defaultSampleDuration*sampleCount)}trackTimes.duration+=rawDuration}if(!Object.keys(tracks).some((trackId=>tracks[trackId].duration))){let sidxMinStart=1/0,sidxMaxEnd=0;const sidxs=findBox(data,["sidx"]);for(let i=0;i<sidxs.length;i++){const sidx=parseSegmentIndex(sidxs[i]);if(null!=sidx&&sidx.references){sidxMinStart=Math.min(sidxMinStart,sidx.earliestPresentationTime/sidx.timescale);const subSegmentDuration=sidx.references.reduce(((dur,ref)=>dur+ref.info.duration||0),0);sidxMaxEnd=Math.max(sidxMaxEnd,subSegmentDuration+sidx.earliestPresentationTime/sidx.timescale)}}sidxMaxEnd&&isFiniteNumber(sidxMaxEnd)&&Object.keys(tracks).forEach((trackId=>{tracks[trackId].duration||(tracks[trackId].duration=sidxMaxEnd*tracks[trackId].timescale-tracks[trackId].start)}))}return tracks}(data,initData,this),audioSampleTimestamps=initData.audio?trackSampleData[initData.audio.id]:null,videoSampleTimestamps=initData.video?trackSampleData[initData.video.id]:null,videoStartTime=toStartEndOrDefault(videoSampleTimestamps,1/0),audioStartTime=toStartEndOrDefault(audioSampleTimestamps,1/0),videoEndTime=toStartEndOrDefault(videoSampleTimestamps,0,!0),audioEndTime=toStartEndOrDefault(audioSampleTimestamps,0,!0);let decodeTime=timeOffset,duration=0;const syncOnAudio=audioSampleTimestamps&&(!videoSampleTimestamps||!initPTS&&audioStartTime<videoStartTime||initPTS&&initPTS.trackId===initData.audio.id),baseOffsetSamples=syncOnAudio?audioSampleTimestamps:videoSampleTimestamps;if(baseOffsetSamples){const timescale=baseOffsetSamples.timescale,baseTime=baseOffsetSamples.start-timeOffset*timescale,trackId=syncOnAudio?initData.audio.id:initData.video.id;decodeTime=baseOffsetSamples.start/timescale,duration=syncOnAudio?audioEndTime-audioStartTime:videoEndTime-videoStartTime,!accurateTimeOffset&&initPTS||!function isInvalidInitPts(initPTS,startDTS,timeOffset,duration){if(null===initPTS)return!0;const minDuration=Math.max(duration,1),startTime=startDTS-initPTS.baseTime/initPTS.timescale;return Math.abs(startTime-timeOffset)>minDuration}(initPTS,decodeTime,timeOffset,duration)&&timescale===initPTS.timescale||(initPTS&&this.warn(`Timestamps at playlist time: ${accurateTimeOffset?"":"~"}${timeOffset} ${baseTime/timescale} != initPTS: ${initPTS.baseTime/initPTS.timescale} (${initPTS.baseTime}/${initPTS.timescale}) trackId: ${initPTS.trackId}`),this.log(`Found initPTS at playlist time: ${timeOffset} offset: ${decodeTime-timeOffset} (${baseTime}/${timescale}) trackId: ${trackId}`),initPTS=null,initSegment.initPTS=baseTime,initSegment.timescale=timescale,initSegment.trackId=trackId)}else this.warn(`No audio or video samples found for initPTS at playlist time: ${timeOffset}`);initPTS?(initSegment.initPTS=initPTS.baseTime,initSegment.timescale=initPTS.timescale,initSegment.trackId=initPTS.trackId):(initSegment.timescale&&void 0!==initSegment.trackId&&void 0!==initSegment.initPTS||(this.warn("Could not set initPTS"),initSegment.initPTS=decodeTime,initSegment.timescale=1,initSegment.trackId=-1),this.initPTS=initPTS={baseTime:initSegment.initPTS,timescale:initSegment.timescale,trackId:initSegment.trackId});const startTime=decodeTime-initPTS.baseTime/initPTS.timescale,endTime=startTime+duration;duration>0?this.lastEndTime=endTime:(this.warn("Duration parsed from mp4 should be greater than zero"),this.resetNextTimestamp());const hasAudio=!!initData.audio,hasVideo=!!initData.video;let type="";hasAudio&&(type+="audio"),hasVideo&&(type+="video");const track={data1:data,startPTS:startTime,startDTS:startTime,endPTS:endTime,endDTS:endTime,type,hasAudio,hasVideo,nb:1,dropped:0,encrypted:!!initData.audio&&initData.audio.encrypted||!!initData.video&&initData.video.encrypted};result.audio=hasAudio&&!hasVideo?track:void 0,result.video=hasVideo?track:void 0;const videoSampleCount=null==videoSampleTimestamps?void 0:videoSampleTimestamps.sampleCount;if(videoSampleCount){const firstKeyFrame=videoSampleTimestamps.keyFrameIndex,independent=-1!==firstKeyFrame;track.nb=videoSampleCount,track.dropped=0===firstKeyFrame||this.isVideoContiguous?0:independent?firstKeyFrame:videoSampleCount,track.independent=independent,track.firstKeyFrame=firstKeyFrame,independent&&videoSampleTimestamps.keyFrameStart&&(track.firstKeyFramePTS=(videoSampleTimestamps.keyFrameStart-initPTS.baseTime)/initPTS.timescale),this.isVideoContiguous||(result.independent=independent),this.isVideoContiguous||(this.isVideoContiguous=independent),track.dropped&&this.warn(`fmp4 does not start with IDR: firstIDR ${firstKeyFrame}/${videoSampleCount} dropped: ${track.dropped} start: ${track.firstKeyFramePTS||"NA"}`)}return result.initSegment=initSegment,result.id3=flushTextTrackMetadataCueSamples(id3Track,timeOffset,initPTS,initPTS),textTrack.samples.length&&(result.text=flushTextTrackUserdataCueSamples(textTrack,timeOffset,initPTS)),result}}},{demux:TSDemuxer,remux:MP4Remuxer},{demux:class AACDemuxer extends BaseAudioDemuxer{constructor(observer,config){super(),this.observer=void 0,this.config=void 0,this.observer=observer,this.config=config}resetInitSegment(initSegment,audioCodec,videoCodec,trackDuration){super.resetInitSegment(initSegment,audioCodec,videoCodec,trackDuration),this._audioTrack={container:"audio/adts",type:"audio",id:2,pid:-1,sequenceNumber:0,segmentCodec:"aac",samples:[],manifestCodec:audioCodec,duration:trackDuration,inputTimeScale:9e4,dropped:0}}static probe(data,logger){if(!data)return!1;const id3Data=getId3Data(data,0);let offset=(null==id3Data?void 0:id3Data.length)||0;if(probe(data,offset))return!1;for(let length=data.length;offset<length;offset++)if(probe$1(data,offset))return logger.log("ADTS sync word found !"),!0;return!1}canParse(data,offset){return function canParse$1(data,offset){return function canGetFrameLength(data,offset){return offset+5<data.length}(data,offset)&&isHeaderPattern$1(data,offset)&&getFullFrameLength(data,offset)<=data.length-offset}(data,offset)}appendFrame(track,data,offset){initTrackConfig(track,this.observer,data,offset,track.manifestCodec);const frame=appendFrame$2(track,data,offset,this.basePTS,this.frameIndex);if(frame&&0===frame.missing)return frame}},remux:MP4Remuxer},{demux:class MP3Demuxer extends BaseAudioDemuxer{resetInitSegment(initSegment,audioCodec,videoCodec,trackDuration){super.resetInitSegment(initSegment,audioCodec,videoCodec,trackDuration),this._audioTrack={container:"audio/mpeg",type:"audio",id:2,pid:-1,sequenceNumber:0,segmentCodec:"mp3",samples:[],manifestCodec:audioCodec,duration:trackDuration,inputTimeScale:9e4,dropped:0}}static probe(data){if(!data)return!1;const id3Data=getId3Data(data,0);let offset=(null==id3Data?void 0:id3Data.length)||0;if(id3Data&&11===data[offset]&&119===data[offset+1]&&void 0!==getId3Timestamp(id3Data)&&getAudioBSID(data,offset)<=16)return!1;for(let length=data.length;offset<length;offset++)if(probe(data,offset))return logger.log("MPEG Audio sync word found !"),!0;return!1}canParse(data,offset){return function canParse(data,offset){return isHeaderPattern(data,offset)&&4<=data.length-offset}(data,offset)}appendFrame(track,data,offset){if(null!==this.basePTS)return appendFrame$1(track,data,offset,this.basePTS,this.frameIndex)}},remux:MP4Remuxer}];muxConfig.splice(2,0,{demux:AC3Demuxer,remux:MP4Remuxer});class Transmuxer{constructor(observer,typeSupported,config,vendor,id,logger){this.asyncResult=!1,this.logger=void 0,this.observer=void 0,this.typeSupported=void 0,this.config=void 0,this.id=void 0,this.demuxer=void 0,this.remuxer=void 0,this.decrypter=void 0,this.probe=void 0,this.decryptionPromise=null,this.transmuxConfig=void 0,this.currentTransmuxState=void 0,this.observer=observer,this.typeSupported=typeSupported,this.config=config,this.id=id,this.logger=logger}configure(transmuxConfig){this.transmuxConfig=transmuxConfig,this.decrypter&&this.decrypter.reset()}push(data,decryptdata,chunkMeta,state){const stats=chunkMeta.transmuxing;stats.executeStart=now();let uintData=new Uint8Array(data);const{currentTransmuxState,transmuxConfig}=this;state&&(this.currentTransmuxState=state);const{contiguous,discontinuity,trackSwitch,accurateTimeOffset,timeOffset,initSegmentChange}=state||currentTransmuxState,{audioCodec,videoCodec,defaultInitPts,duration,initSegmentData}=transmuxConfig,keyData=function getEncryptionType(data,decryptData){let encryptionType=null;data.byteLength>0&&null!=(null==decryptData?void 0:decryptData.key)&&null!==decryptData.iv&&null!=decryptData.method&&(encryptionType=decryptData);return encryptionType}(uintData,decryptdata);if(keyData&&isFullSegmentEncryption(keyData.method)){const decrypter=this.getDecrypter(),aesMode=getAesModeFromFullSegmentMethod(keyData.method);if(!decrypter.isSync())return this.asyncResult=!0,this.decryptionPromise=decrypter.webCryptoDecrypt(uintData,keyData.key.buffer,keyData.iv.buffer,aesMode).then((decryptedData=>{const result=this.push(decryptedData,null,chunkMeta);return this.decryptionPromise=null,result})),this.decryptionPromise;{let decryptedData=decrypter.softwareDecrypt(uintData,keyData.key.buffer,keyData.iv.buffer,aesMode);if(chunkMeta.part>-1){const _data=decrypter.flush();decryptedData=_data?_data.buffer:_data}if(!decryptedData)return stats.executeEnd=now(),emptyResult(chunkMeta);uintData=new Uint8Array(decryptedData)}}const resetMuxers=this.needsProbing(discontinuity,trackSwitch);if(resetMuxers){const error=this.configureTransmuxer(uintData);if(error)return this.logger.warn(`[transmuxer] ${error.message}`),this.observer.emit(Events.ERROR,Events.ERROR,{type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.FRAG_PARSING_ERROR,fatal:!1,error,reason:error.message}),stats.executeEnd=now(),emptyResult(chunkMeta)}(discontinuity||trackSwitch||initSegmentChange||resetMuxers)&&this.resetInitSegment(initSegmentData,audioCodec,videoCodec,duration,decryptdata),(discontinuity||initSegmentChange||resetMuxers)&&this.resetInitialTimestamp(defaultInitPts),contiguous||this.resetContiguity();const result=this.transmux(uintData,keyData,timeOffset,accurateTimeOffset,chunkMeta);this.asyncResult=isPromise(result);const currentState=this.currentTransmuxState;return currentState.contiguous=!0,currentState.discontinuity=!1,currentState.trackSwitch=!1,stats.executeEnd=now(),result}flush(chunkMeta){const stats=chunkMeta.transmuxing;stats.executeStart=now();const{decrypter,currentTransmuxState,decryptionPromise}=this;if(decryptionPromise)return this.asyncResult=!0,decryptionPromise.then((()=>this.flush(chunkMeta)));const transmuxResults=[],{timeOffset}=currentTransmuxState;if(decrypter){const decryptedData=decrypter.flush();decryptedData&&transmuxResults.push(this.push(decryptedData.buffer,null,chunkMeta))}const{demuxer,remuxer}=this;if(!demuxer||!remuxer){stats.executeEnd=now();const emptyResults=[emptyResult(chunkMeta)];return this.asyncResult?Promise.resolve(emptyResults):emptyResults}const demuxResultOrPromise=demuxer.flush(timeOffset);return isPromise(demuxResultOrPromise)?(this.asyncResult=!0,demuxResultOrPromise.then((demuxResult=>(this.flushRemux(transmuxResults,demuxResult,chunkMeta),transmuxResults)))):(this.flushRemux(transmuxResults,demuxResultOrPromise,chunkMeta),this.asyncResult?Promise.resolve(transmuxResults):transmuxResults)}flushRemux(transmuxResults,demuxResult,chunkMeta){const{audioTrack,videoTrack,id3Track,textTrack}=demuxResult,{accurateTimeOffset,timeOffset}=this.currentTransmuxState;this.logger.log(`[transmuxer.ts]: Flushed ${this.id} sn: ${chunkMeta.sn}${chunkMeta.part>-1?" part: "+chunkMeta.part:""} of ${this.id===PlaylistLevelType.MAIN?"level":"track"} ${chunkMeta.level}`);const remuxResult=this.remuxer.remux(audioTrack,videoTrack,id3Track,textTrack,timeOffset,accurateTimeOffset,!0,this.id);transmuxResults.push({remuxResult,chunkMeta}),chunkMeta.transmuxing.executeEnd=now()}resetInitialTimestamp(defaultInitPts){const{demuxer,remuxer}=this;demuxer&&remuxer&&(demuxer.resetTimeStamp(defaultInitPts),remuxer.resetTimeStamp(defaultInitPts))}resetContiguity(){const{demuxer,remuxer}=this;demuxer&&remuxer&&(demuxer.resetContiguity(),remuxer.resetNextTimestamp())}resetInitSegment(initSegmentData,audioCodec,videoCodec,trackDuration,decryptdata){const{demuxer,remuxer}=this;demuxer&&remuxer&&(demuxer.resetInitSegment(initSegmentData,audioCodec,videoCodec,trackDuration),remuxer.resetInitSegment(initSegmentData,audioCodec,videoCodec,decryptdata))}destroy(){this.demuxer&&(this.demuxer.destroy(),this.demuxer=void 0),this.remuxer&&(this.remuxer.destroy(),this.remuxer=void 0)}transmux(data,keyData,timeOffset,accurateTimeOffset,chunkMeta){let result;return result=keyData&&"SAMPLE-AES"===keyData.method?this.transmuxSampleAes(data,keyData,timeOffset,accurateTimeOffset,chunkMeta):this.transmuxUnencrypted(data,timeOffset,accurateTimeOffset,chunkMeta),result}transmuxUnencrypted(data,timeOffset,accurateTimeOffset,chunkMeta){const{audioTrack,videoTrack,id3Track,textTrack}=this.demuxer.demux(data,timeOffset,!1,!this.config.progressive);return{remuxResult:this.remuxer.remux(audioTrack,videoTrack,id3Track,textTrack,timeOffset,accurateTimeOffset,!1,this.id),chunkMeta}}transmuxSampleAes(data,decryptData,timeOffset,accurateTimeOffset,chunkMeta){return this.demuxer.demuxSampleAes(data,decryptData,timeOffset).then((demuxResult=>({remuxResult:this.remuxer.remux(demuxResult.audioTrack,demuxResult.videoTrack,demuxResult.id3Track,demuxResult.textTrack,timeOffset,accurateTimeOffset,!1,this.id),chunkMeta})))}configureTransmuxer(data){const{config,observer,typeSupported}=this;let mux;for(let i=0,len=muxConfig.length;i<len;i++){var _muxConfig$i$demux;if(null!=(_muxConfig$i$demux=muxConfig[i].demux)&&_muxConfig$i$demux.probe(data,this.logger)){mux=muxConfig[i];break}}if(!mux)return new Error("Failed to find demuxer by probing fragment data");const demuxer=this.demuxer,remuxer=this.remuxer,Remuxer=mux.remux,Demuxer=mux.demux;remuxer&&remuxer instanceof Remuxer||(this.remuxer=new Remuxer(observer,config,typeSupported,this.logger)),demuxer&&demuxer instanceof Demuxer||(this.demuxer=new Demuxer(observer,config,typeSupported,this.logger),this.probe=Demuxer.probe)}needsProbing(discontinuity,trackSwitch){return!this.demuxer||!this.remuxer||discontinuity||trackSwitch}getDecrypter(){let decrypter=this.decrypter;return decrypter||(decrypter=this.decrypter=new Decrypter(this.config)),decrypter}}const emptyResult=chunkMeta=>({remuxResult:{},chunkMeta});function isPromise(p){return"then"in p&&p.then instanceof Function}class TransmuxConfig{constructor(audioCodec,videoCodec,initSegmentData,duration,defaultInitPts){this.audioCodec=void 0,this.videoCodec=void 0,this.initSegmentData=void 0,this.duration=void 0,this.defaultInitPts=void 0,this.audioCodec=audioCodec,this.videoCodec=videoCodec,this.initSegmentData=initSegmentData,this.duration=duration,this.defaultInitPts=defaultInitPts||null}}class TransmuxState{constructor(discontinuity,contiguous,accurateTimeOffset,trackSwitch,timeOffset,initSegmentChange){this.discontinuity=void 0,this.contiguous=void 0,this.accurateTimeOffset=void 0,this.trackSwitch=void 0,this.timeOffset=void 0,this.initSegmentChange=void 0,this.discontinuity=discontinuity,this.contiguous=contiguous,this.accurateTimeOffset=accurateTimeOffset,this.trackSwitch=trackSwitch,this.timeOffset=timeOffset,this.initSegmentChange=initSegmentChange}}let transmuxerInstanceCount=0;class TransmuxerInterface{constructor(_hls,id,onTransmuxComplete,onFlush){this.error=null,this.hls=void 0,this.id=void 0,this.instanceNo=transmuxerInstanceCount++,this.observer=void 0,this.frag=null,this.part=null,this.useWorker=void 0,this.workerContext=null,this.transmuxer=null,this.onTransmuxComplete=void 0,this.onFlush=void 0,this.onWorkerMessage=event=>{const data=event.data,hls=this.hls;if(hls&&null!=data&&data.event&&data.instanceNo===this.instanceNo)switch(data.event){case"init":{var _this$workerContext;const objectURL=null==(_this$workerContext=this.workerContext)?void 0:_this$workerContext.objectURL;objectURL&&self.URL.revokeObjectURL(objectURL);break}case"transmuxComplete":this.handleTransmuxComplete(data.data);break;case"flush":this.onFlush(data.data);break;case"workerLog":hls.logger[data.data.logType]&&hls.logger[data.data.logType](data.data.message);break;default:data.data=data.data||{},data.data.frag=this.frag,data.data.part=this.part,data.data.id=this.id,hls.trigger(data.event,data.data)}},this.onWorkerError=event=>{if(!this.hls)return;const error=new Error(`${event.message}  (${event.filename}:${event.lineno})`);this.hls.config.enableWorker=!1,this.hls.logger.warn(`Error in "${this.id}" Web Worker, fallback to inline`),this.hls.trigger(Events.ERROR,{type:ErrorTypes.OTHER_ERROR,details:ErrorDetails.INTERNAL_EXCEPTION,fatal:!1,event:"demuxerWorker",error})};const config=_hls.config;this.hls=_hls,this.id=id,this.useWorker=!!config.enableWorker,this.onTransmuxComplete=onTransmuxComplete,this.onFlush=onFlush;const forwardMessage=(ev,data)=>{(data=data||{}).frag=this.frag||void 0,ev===Events.ERROR&&(data.parent=this.id,data.part=this.part,this.error=data.error),this.hls.trigger(ev,data)};this.observer=new EventEmitter,this.observer.on(Events.FRAG_DECRYPTED,forwardMessage),this.observer.on(Events.ERROR,forwardMessage);const m2tsTypeSupported=getM2TSSupportedAudioTypes(config.preferManagedMediaSource);if(this.useWorker&&"undefined"!=typeof Worker){const logger=this.hls.logger;if(config.workerPath||function hasUMDWorker(){return"function"==typeof __HLS_WORKER_BUNDLE__}()){try{config.workerPath?(logger.log(`loading Web Worker ${config.workerPath} for "${id}"`),this.workerContext=function loadWorker(path){const workerContext=workerStore[path];if(workerContext)return workerContext.clientCount++,workerContext;const scriptURL=new self.URL(path,self.location.href).href,result={worker:new self.Worker(scriptURL),scriptURL,clientCount:1};return workerStore[path]=result,result}(config.workerPath)):(logger.log(`injecting Web Worker for "${id}"`),this.workerContext=function injectWorker(){const workerContext=workerStore["1.6.10"];if(workerContext)return workerContext.clientCount++,workerContext;const blob=new self.Blob([`var exports={};var module={exports:exports};function define(f){f()};define.amd=true;(${__HLS_WORKER_BUNDLE__.toString()})(true);`],{type:"text/javascript"}),objectURL=self.URL.createObjectURL(blob),result={worker:new self.Worker(objectURL),objectURL,clientCount:1};return workerStore["1.6.10"]=result,result}());const{worker}=this.workerContext;worker.addEventListener("message",this.onWorkerMessage),worker.addEventListener("error",this.onWorkerError),worker.postMessage({instanceNo:this.instanceNo,cmd:"init",typeSupported:m2tsTypeSupported,id,config:stringify(config)})}catch(err){logger.warn(`Error setting up "${id}" Web Worker, fallback to inline`,err),this.terminateWorker(),this.error=null,this.transmuxer=new Transmuxer(this.observer,m2tsTypeSupported,config,"",id,_hls.logger)}return}}this.transmuxer=new Transmuxer(this.observer,m2tsTypeSupported,config,"",id,_hls.logger)}reset(){if(this.frag=null,this.part=null,this.workerContext){const instanceNo=this.instanceNo;this.instanceNo=transmuxerInstanceCount++;const config=this.hls.config,m2tsTypeSupported=getM2TSSupportedAudioTypes(config.preferManagedMediaSource);this.workerContext.worker.postMessage({instanceNo:this.instanceNo,cmd:"reset",resetNo:instanceNo,typeSupported:m2tsTypeSupported,id:this.id,config:stringify(config)})}}terminateWorker(){if(this.workerContext){const{worker}=this.workerContext;this.workerContext=null,worker.removeEventListener("message",this.onWorkerMessage),worker.removeEventListener("error",this.onWorkerError),function removeWorkerFromStore(path){const workerContext=workerStore[path||"1.6.10"];if(workerContext&&1==workerContext.clientCount--){const{worker,objectURL}=workerContext;delete workerStore[path||"1.6.10"],objectURL&&self.URL.revokeObjectURL(objectURL),worker.terminate()}}(this.hls.config.workerPath)}}destroy(){if(this.workerContext)this.terminateWorker(),this.onWorkerMessage=this.onWorkerError=null;else{const transmuxer=this.transmuxer;transmuxer&&(transmuxer.destroy(),this.transmuxer=null)}const observer=this.observer;observer&&observer.removeAllListeners(),this.frag=null,this.part=null,this.observer=null,this.hls=null}push(data,initSegmentData,audioCodec,videoCodec,frag,part,duration,accurateTimeOffset,chunkMeta,defaultInitPTS){var _frag$initSegment,_lastFrag$initSegment;chunkMeta.transmuxing.start=self.performance.now();const{instanceNo,transmuxer}=this,timeOffset=part?part.start:frag.start,decryptdata=frag.decryptdata,lastFrag=this.frag,discontinuity=!(lastFrag&&frag.cc===lastFrag.cc),trackSwitch=!(lastFrag&&chunkMeta.level===lastFrag.level),snDiff=lastFrag?chunkMeta.sn-lastFrag.sn:-1,partDiff=this.part?chunkMeta.part-this.part.index:-1,progressive=0===snDiff&&chunkMeta.id>1&&chunkMeta.id===(null==lastFrag?void 0:lastFrag.stats.chunkCount),contiguous=!trackSwitch&&(1===snDiff||0===snDiff&&(1===partDiff||progressive&&partDiff<=0)),now=self.performance.now();(trackSwitch||snDiff||0===frag.stats.parsing.start)&&(frag.stats.parsing.start=now),!part||!partDiff&&contiguous||(part.stats.parsing.start=now);const initSegmentChange=!(lastFrag&&(null==(_frag$initSegment=frag.initSegment)?void 0:_frag$initSegment.url)===(null==(_lastFrag$initSegment=lastFrag.initSegment)?void 0:_lastFrag$initSegment.url)),state=new TransmuxState(discontinuity,contiguous,accurateTimeOffset,trackSwitch,timeOffset,initSegmentChange);if(!contiguous||discontinuity||initSegmentChange){this.hls.logger.log(`[transmuxer-interface]: Starting new transmux session for ${frag.type} sn: ${chunkMeta.sn}${chunkMeta.part>-1?" part: "+chunkMeta.part:""} ${this.id===PlaylistLevelType.MAIN?"level":"track"}: ${chunkMeta.level} id: ${chunkMeta.id}\n        discontinuity: ${discontinuity}\n        trackSwitch: ${trackSwitch}\n        contiguous: ${contiguous}\n        accurateTimeOffset: ${accurateTimeOffset}\n        timeOffset: ${timeOffset}\n        initSegmentChange: ${initSegmentChange}`);const config=new TransmuxConfig(audioCodec,videoCodec,initSegmentData,duration,defaultInitPTS);this.configureTransmuxer(config)}if(this.frag=frag,this.part=part,this.workerContext)this.workerContext.worker.postMessage({instanceNo,cmd:"demux",data,decryptdata,chunkMeta,state},data instanceof ArrayBuffer?[data]:[]);else if(transmuxer){const transmuxResult=transmuxer.push(data,decryptdata,chunkMeta,state);isPromise(transmuxResult)?transmuxResult.then((data=>{this.handleTransmuxComplete(data)})).catch((error=>{this.transmuxerError(error,chunkMeta,"transmuxer-interface push error")})):this.handleTransmuxComplete(transmuxResult)}}flush(chunkMeta){chunkMeta.transmuxing.start=self.performance.now();const{instanceNo,transmuxer}=this;if(this.workerContext)this.workerContext.worker.postMessage({instanceNo,cmd:"flush",chunkMeta});else if(transmuxer){const transmuxResult=transmuxer.flush(chunkMeta);isPromise(transmuxResult)?transmuxResult.then((data=>{this.handleFlushResult(data,chunkMeta)})).catch((error=>{this.transmuxerError(error,chunkMeta,"transmuxer-interface flush error")})):this.handleFlushResult(transmuxResult,chunkMeta)}}transmuxerError(error,chunkMeta,reason){this.hls&&(this.error=error,this.hls.trigger(Events.ERROR,{type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.FRAG_PARSING_ERROR,chunkMeta,frag:this.frag||void 0,part:this.part||void 0,fatal:!1,error,err:error,reason}))}handleFlushResult(results,chunkMeta){results.forEach((result=>{this.handleTransmuxComplete(result)})),this.onFlush(chunkMeta)}configureTransmuxer(config){const{instanceNo,transmuxer}=this;this.workerContext?this.workerContext.worker.postMessage({instanceNo,cmd:"configure",config}):transmuxer&&transmuxer.configure(config)}handleTransmuxComplete(result){result.chunkMeta.transmuxing.end=self.performance.now(),this.onTransmuxComplete(result)}}class AudioStreamController extends BaseStreamController{constructor(hls,fragmentTracker,keyLoader){super(hls,fragmentTracker,keyLoader,"audio-stream-controller",PlaylistLevelType.AUDIO),this.mainAnchor=null,this.mainFragLoading=null,this.audioOnly=!1,this.bufferedTrack=null,this.switchingTrack=null,this.trackId=-1,this.waitingData=null,this.mainDetails=null,this.flushing=!1,this.bufferFlushed=!1,this.cachedTrackLoadedData=null,this.registerListeners()}onHandlerDestroying(){this.unregisterListeners(),super.onHandlerDestroying(),this.resetItem()}resetItem(){this.mainDetails=this.mainAnchor=this.mainFragLoading=this.bufferedTrack=this.switchingTrack=this.waitingData=this.cachedTrackLoadedData=null}registerListeners(){super.registerListeners();const{hls}=this;hls.on(Events.LEVEL_LOADED,this.onLevelLoaded,this),hls.on(Events.AUDIO_TRACKS_UPDATED,this.onAudioTracksUpdated,this),hls.on(Events.AUDIO_TRACK_SWITCHING,this.onAudioTrackSwitching,this),hls.on(Events.AUDIO_TRACK_LOADED,this.onAudioTrackLoaded,this),hls.on(Events.BUFFER_RESET,this.onBufferReset,this),hls.on(Events.BUFFER_CREATED,this.onBufferCreated,this),hls.on(Events.BUFFER_FLUSHING,this.onBufferFlushing,this),hls.on(Events.BUFFER_FLUSHED,this.onBufferFlushed,this),hls.on(Events.INIT_PTS_FOUND,this.onInitPtsFound,this),hls.on(Events.FRAG_LOADING,this.onFragLoading,this),hls.on(Events.FRAG_BUFFERED,this.onFragBuffered,this)}unregisterListeners(){const{hls}=this;hls&&(super.unregisterListeners(),hls.off(Events.LEVEL_LOADED,this.onLevelLoaded,this),hls.off(Events.AUDIO_TRACKS_UPDATED,this.onAudioTracksUpdated,this),hls.off(Events.AUDIO_TRACK_SWITCHING,this.onAudioTrackSwitching,this),hls.off(Events.AUDIO_TRACK_LOADED,this.onAudioTrackLoaded,this),hls.off(Events.BUFFER_RESET,this.onBufferReset,this),hls.off(Events.BUFFER_CREATED,this.onBufferCreated,this),hls.off(Events.BUFFER_FLUSHING,this.onBufferFlushing,this),hls.off(Events.BUFFER_FLUSHED,this.onBufferFlushed,this),hls.off(Events.INIT_PTS_FOUND,this.onInitPtsFound,this),hls.off(Events.FRAG_LOADING,this.onFragLoading,this),hls.off(Events.FRAG_BUFFERED,this.onFragBuffered,this))}onInitPtsFound(event,{frag,id,initPTS,timescale,trackId}){if(id===PlaylistLevelType.MAIN){const cc=frag.cc,inFlightFrag=this.fragCurrent;if(this.initPTS[cc]={baseTime:initPTS,timescale,trackId},this.log(`InitPTS for cc: ${cc} found from main: ${initPTS/timescale} (${initPTS}/${timescale}) trackId: ${trackId}`),this.mainAnchor=frag,this.state===State.WAITING_INIT_PTS){const waitingData=this.waitingData;(!waitingData&&!this.loadingParts||waitingData&&waitingData.frag.cc!==cc)&&this.syncWithAnchor(frag,null==waitingData?void 0:waitingData.frag)}else!this.hls.hasEnoughToStart&&inFlightFrag&&inFlightFrag.cc!==cc?(inFlightFrag.abortRequests(),this.syncWithAnchor(frag,inFlightFrag)):this.state===State.IDLE&&this.tick()}}getLoadPosition(){return!this.startFragRequested&&this.nextLoadPosition>=0?this.nextLoadPosition:super.getLoadPosition()}syncWithAnchor(mainAnchor,waitingToAppend){var _this$mainFragLoading;const mainFragLoading=(null==(_this$mainFragLoading=this.mainFragLoading)?void 0:_this$mainFragLoading.frag)||null;if(waitingToAppend&&(null==mainFragLoading?void 0:mainFragLoading.cc)===waitingToAppend.cc)return;const targetDiscontinuity=(mainFragLoading||mainAnchor).cc,syncFrag=findNearestWithCC(this.getLevelDetails(),targetDiscontinuity,this.getLoadPosition());syncFrag&&(this.log(`Syncing with main frag at ${syncFrag.start} cc ${syncFrag.cc}`),this.startFragRequested=!1,this.nextLoadPosition=syncFrag.start,this.resetLoadingState(),this.state===State.IDLE&&this.doTickIdle())}startLoad(startPosition,skipSeekToStartPosition){if(!this.levels)return this.startPosition=startPosition,void(this.state=State.STOPPED);const lastCurrentTime=this.lastCurrentTime;this.stopLoad(),this.setInterval(100),lastCurrentTime>0&&-1===startPosition?(this.log(`Override startPosition with lastCurrentTime @${lastCurrentTime.toFixed(3)}`),startPosition=lastCurrentTime,this.state=State.IDLE):this.state=State.WAITING_TRACK,this.nextLoadPosition=this.lastCurrentTime=startPosition+this.timelineOffset,this.startPosition=skipSeekToStartPosition?-1:startPosition,this.tick()}doTick(){switch(this.state){case State.IDLE:this.doTickIdle();break;case State.WAITING_TRACK:{const{levels,trackId}=this,currenTrack=null==levels?void 0:levels[trackId],details=null==currenTrack?void 0:currenTrack.details;if(details&&!this.waitForLive(currenTrack)){if(this.waitForCdnTuneIn(details))break;this.state=State.WAITING_INIT_PTS}break}case State.FRAG_LOADING_WAITING_RETRY:{var _this$media;const now=performance.now(),retryDate=this.retryDate;if(!retryDate||now>=retryDate||null!=(_this$media=this.media)&&_this$media.seeking){const{levels,trackId}=this;this.log("RetryDate reached, switch back to IDLE state"),this.resetStartWhenNotLoaded((null==levels?void 0:levels[trackId])||null),this.state=State.IDLE}break}case State.WAITING_INIT_PTS:{const waitingData=this.waitingData;if(waitingData){const{frag,part,cache,complete}=waitingData,mainAnchor=this.mainAnchor;if(void 0!==this.initPTS[frag.cc]){this.waitingData=null,this.state=State.FRAG_LOADING;const data={frag,part,payload:cache.flush().buffer,networkDetails:null};this._handleFragmentLoadProgress(data),complete&&super._handleFragmentLoadComplete(data)}else mainAnchor&&mainAnchor.cc!==waitingData.frag.cc&&this.syncWithAnchor(mainAnchor,waitingData.frag)}else this.state=State.IDLE}}this.onTickEnd()}resetLoadingState(){const waitingData=this.waitingData;waitingData&&(this.fragmentTracker.removeFragment(waitingData.frag),this.waitingData=null),super.resetLoadingState()}onTickEnd(){const{media}=this;null!=media&&media.readyState&&(this.lastCurrentTime=media.currentTime)}doTickIdle(){var _this$mainFragLoading2;const{hls,levels,media,trackId}=this,config=hls.config;if(!this.buffering||!media&&!this.primaryPrefetch&&(this.startFragRequested||!config.startFragPrefetch)||null==levels||!levels[trackId])return;const levelInfo=levels[trackId],trackDetails=levelInfo.details;if(!trackDetails||this.waitForLive(levelInfo)||this.waitForCdnTuneIn(trackDetails))return this.state=State.WAITING_TRACK,void(this.startFragRequested=!1);const bufferable=this.mediaBuffer?this.mediaBuffer:this.media;this.bufferFlushed&&bufferable&&(this.bufferFlushed=!1,this.afterBufferFlushed(bufferable,ElementaryStreamTypes_AUDIO,PlaylistLevelType.AUDIO));const bufferInfo=this.getFwdBufferInfo(bufferable,PlaylistLevelType.AUDIO);if(null===bufferInfo)return;if(!this.switchingTrack&&this._streamEnded(bufferInfo,trackDetails))return hls.trigger(Events.BUFFER_EOS,{type:"audio"}),void(this.state=State.ENDED);const bufferLen=bufferInfo.len,maxBufLen=hls.maxBufferLength,fragments=trackDetails.fragments,start=fragments[0].start,loadPosition=this.getLoadPosition(),targetBufferTime=this.flushing?loadPosition:bufferInfo.end;if(this.switchingTrack&&media){const pos=loadPosition;trackDetails.PTSKnown&&pos<start&&(bufferInfo.end>start||bufferInfo.nextStart)&&(this.log("Alt audio track ahead of main track, seek to start of alt audio track"),media.currentTime=start+.05)}if(bufferLen>=maxBufLen&&!this.switchingTrack&&targetBufferTime<fragments[fragments.length-1].start)return;let frag=this.getNextFragment(targetBufferTime,trackDetails);if(frag&&this.isLoopLoading(frag,targetBufferTime)&&(frag=this.getNextFragmentLoopLoading(frag,trackDetails,bufferInfo,PlaylistLevelType.MAIN,maxBufLen)),!frag)return void(this.bufferFlushed=!0);let mainFragLoading=(null==(_this$mainFragLoading2=this.mainFragLoading)?void 0:_this$mainFragLoading2.frag)||null;if(!this.audioOnly&&this.startFragRequested&&mainFragLoading&&isMediaFragment(frag)&&!frag.endList&&(!trackDetails.live||!this.loadingParts&&targetBufferTime<this.hls.liveSyncPosition)&&(this.fragmentTracker.getState(mainFragLoading)===FragmentState_OK&&(this.mainFragLoading=mainFragLoading=null),mainFragLoading&&isMediaFragment(mainFragLoading))){if(frag.start>mainFragLoading.end){const mainFragAtPos=this.fragmentTracker.getFragAtPos(targetBufferTime,PlaylistLevelType.MAIN);mainFragAtPos&&mainFragAtPos.end>mainFragLoading.end&&(mainFragLoading=mainFragAtPos,this.mainFragLoading={frag:mainFragAtPos,targetBufferTime:null})}if(frag.start>mainFragLoading.end)return}this.loadFragment(frag,levelInfo,targetBufferTime)}onMediaDetaching(event,data){this.bufferFlushed=this.flushing=!1,super.onMediaDetaching(event,data)}onAudioTracksUpdated(event,{audioTracks}){this.resetTransmuxer(),this.levels=audioTracks.map((mediaPlaylist=>new Level(mediaPlaylist)))}onAudioTrackSwitching(event,data){const altAudio=!!data.url;this.trackId=data.id;const{fragCurrent}=this;fragCurrent&&(fragCurrent.abortRequests(),this.removeUnbufferedFrags(fragCurrent.start)),this.resetLoadingState(),altAudio?(this.switchingTrack=data,this.flushAudioIfNeeded(data),this.state!==State.STOPPED&&(this.setInterval(100),this.state=State.IDLE,this.tick())):(this.resetTransmuxer(),this.switchingTrack=null,this.bufferedTrack=data,this.clearInterval())}onManifestLoading(){super.onManifestLoading(),this.bufferFlushed=this.flushing=this.audioOnly=!1,this.resetItem(),this.trackId=-1}onLevelLoaded(event,data){this.mainDetails=data.details;const cachedTrackLoadedData=this.cachedTrackLoadedData;cachedTrackLoadedData&&(this.cachedTrackLoadedData=null,this.onAudioTrackLoaded(Events.AUDIO_TRACK_LOADED,cachedTrackLoadedData))}onAudioTrackLoaded(event,data){var _trackLevel$details;const{levels}=this,{details:newDetails,id:trackId,groupId,track}=data;if(!levels)return void this.warn(`Audio tracks reset while loading track ${trackId} "${track.name}" of "${groupId}"`);const mainDetails=this.mainDetails;if(!mainDetails||newDetails.endCC>mainDetails.endCC||mainDetails.expired)return this.cachedTrackLoadedData=data,void(this.state!==State.STOPPED&&(this.state=State.WAITING_TRACK));this.cachedTrackLoadedData=null,this.log(`Audio track ${trackId} "${track.name}" of "${groupId}" loaded [${newDetails.startSN},${newDetails.endSN}]${newDetails.lastPartSn?`[part-${newDetails.lastPartSn}-${newDetails.lastPartIndex}]`:""},duration:${newDetails.totalduration}`);const trackLevel=levels[trackId];let sliding=0;if(newDetails.live||null!=(_trackLevel$details=trackLevel.details)&&_trackLevel$details.live){if(this.checkLiveUpdate(newDetails),newDetails.deltaUpdateFailed)return;var _this$levelLastLoaded;if(trackLevel.details)sliding=this.alignPlaylists(newDetails,trackLevel.details,null==(_this$levelLastLoaded=this.levelLastLoaded)?void 0:_this$levelLastLoaded.details);newDetails.alignedSliding||(alignDiscontinuities(newDetails,mainDetails),newDetails.alignedSliding||alignMediaPlaylistByPDT(newDetails,mainDetails),sliding=newDetails.fragmentStart)}trackLevel.details=newDetails,this.levelLastLoaded=trackLevel,this.startFragRequested||this.setStartPosition(mainDetails,sliding),this.hls.trigger(Events.AUDIO_TRACK_UPDATED,{details:newDetails,id:trackId,groupId:data.groupId}),this.state!==State.WAITING_TRACK||this.waitForCdnTuneIn(newDetails)||(this.state=State.IDLE),this.tick()}_handleFragmentLoadProgress(data){var _frag$initSegment;const frag=data.frag,{part,payload}=data,{config,trackId,levels}=this;if(!levels)return void this.warn(`Audio tracks were reset while fragment load was in progress. Fragment ${frag.sn} of level ${frag.level} will not be buffered`);const track=levels[trackId];if(!track)return void this.warn("Audio track is undefined on fragment load progress");const details=track.details;if(!details)return this.warn("Audio track details undefined on fragment load progress"),void this.removeUnbufferedFrags(frag.start);const audioCodec=config.defaultAudioCodec||track.audioCodec||"mp4a.40.2";let transmuxer=this.transmuxer;transmuxer||(transmuxer=this.transmuxer=new TransmuxerInterface(this.hls,PlaylistLevelType.AUDIO,this._handleTransmuxComplete.bind(this),this._handleTransmuxerFlush.bind(this)));const initPTS=this.initPTS[frag.cc],initSegmentData=null==(_frag$initSegment=frag.initSegment)?void 0:_frag$initSegment.data;if(void 0!==initPTS){const accurateTimeOffset=!1,partIndex=part?part.index:-1,partial=-1!==partIndex,chunkMeta=new ChunkMetadata(frag.level,frag.sn,frag.stats.chunkCount,payload.byteLength,partIndex,partial);transmuxer.push(payload,initSegmentData,audioCodec,"",frag,part,details.totalduration,accurateTimeOffset,chunkMeta,initPTS)}else{this.log(`Unknown video PTS for cc ${frag.cc}, waiting for video PTS before demuxing audio frag ${frag.sn} of [${details.startSN} ,${details.endSN}],track ${trackId}`);const{cache}=this.waitingData=this.waitingData||{frag,part,cache:new ChunkCache,complete:!1};cache.push(new Uint8Array(payload)),this.state!==State.STOPPED&&(this.state=State.WAITING_INIT_PTS)}}_handleFragmentLoadComplete(fragLoadedData){this.waitingData?this.waitingData.complete=!0:super._handleFragmentLoadComplete(fragLoadedData)}onBufferReset(){this.mediaBuffer=null}onBufferCreated(event,data){this.bufferFlushed=this.flushing=!1;const audioTrack=data.tracks.audio;audioTrack&&(this.mediaBuffer=audioTrack.buffer||null)}onFragLoading(event,data){!this.audioOnly&&data.frag.type===PlaylistLevelType.MAIN&&isMediaFragment(data.frag)&&(this.mainFragLoading=data,this.state===State.IDLE&&this.tick())}onFragBuffered(event,data){const{frag,part}=data;if(frag.type===PlaylistLevelType.AUDIO)if(this.fragContextChanged(frag))this.warn(`Fragment ${frag.sn}${part?" p: "+part.index:""} of level ${frag.level} finished buffering, but was aborted. state: ${this.state}, audioSwitch: ${this.switchingTrack?this.switchingTrack.name:"false"}`);else{if(isMediaFragment(frag)){this.fragPrevious=frag;const track=this.switchingTrack;track&&(this.bufferedTrack=track,this.switchingTrack=null,this.hls.trigger(Events.AUDIO_TRACK_SWITCHED,_objectSpread2({},track)))}this.fragBufferedComplete(frag,part),this.media&&this.tick()}else this.audioOnly||frag.type!==PlaylistLevelType.MAIN||frag.elementaryStreams.video||frag.elementaryStreams.audiovideo||(this.audioOnly=!0,this.mainFragLoading=null)}onError(event,data){var _data$context;if(data.fatal)this.state=State.ERROR;else switch(data.details){case ErrorDetails.FRAG_GAP:case ErrorDetails.FRAG_PARSING_ERROR:case ErrorDetails.FRAG_DECRYPT_ERROR:case ErrorDetails.FRAG_LOAD_ERROR:case ErrorDetails.FRAG_LOAD_TIMEOUT:case ErrorDetails.KEY_LOAD_ERROR:case ErrorDetails.KEY_LOAD_TIMEOUT:this.onFragmentOrKeyLoadError(PlaylistLevelType.AUDIO,data);break;case ErrorDetails.AUDIO_TRACK_LOAD_ERROR:case ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT:case ErrorDetails.LEVEL_PARSING_ERROR:data.levelRetry||this.state!==State.WAITING_TRACK||(null==(_data$context=data.context)?void 0:_data$context.type)!==PlaylistContextType_AUDIO_TRACK||(this.state=State.IDLE);break;case ErrorDetails.BUFFER_ADD_CODEC_ERROR:case ErrorDetails.BUFFER_APPEND_ERROR:if("audio"!==data.parent)return;this.reduceLengthAndFlushBuffer(data)||this.resetLoadingState();break;case ErrorDetails.BUFFER_FULL_ERROR:if("audio"!==data.parent)return;this.reduceLengthAndFlushBuffer(data)&&(this.bufferedTrack=null,super.flushMainBuffer(0,Number.POSITIVE_INFINITY,"audio"));break;case ErrorDetails.INTERNAL_EXCEPTION:this.recoverWorkerError(data)}}onBufferFlushing(event,{type}){type!==ElementaryStreamTypes_VIDEO&&(this.flushing=!0)}onBufferFlushed(event,{type}){if(type!==ElementaryStreamTypes_VIDEO){this.flushing=!1,this.bufferFlushed=!0,this.state===State.ENDED&&(this.state=State.IDLE);const mediaBuffer=this.mediaBuffer||this.media;mediaBuffer&&(this.afterBufferFlushed(mediaBuffer,type,PlaylistLevelType.AUDIO),this.tick())}}_handleTransmuxComplete(transmuxResult){var _id3$samples;const id="audio",{hls}=this,{remuxResult,chunkMeta}=transmuxResult,context=this.getCurrentContext(chunkMeta);if(!context)return void this.resetWhenMissingContext(chunkMeta);const{frag,part,level}=context,{details}=level,{audio,text,id3,initSegment}=remuxResult;if(!this.fragContextChanged(frag)&&details){if(this.state=State.PARSING,this.switchingTrack&&audio&&this.completeAudioSwitch(this.switchingTrack),null!=initSegment&&initSegment.tracks){const mapFragment=frag.initSegment||frag;if(this.unhandledEncryptionError(initSegment,frag))return;this._bufferInitSegment(level,initSegment.tracks,mapFragment,chunkMeta),hls.trigger(Events.FRAG_PARSING_INIT_SEGMENT,{frag:mapFragment,id,tracks:initSegment.tracks})}if(audio){const{startPTS,endPTS,startDTS,endDTS}=audio;part&&(part.elementaryStreams[ElementaryStreamTypes_AUDIO]={startPTS,endPTS,startDTS,endDTS}),frag.setElementaryStreamInfo(ElementaryStreamTypes_AUDIO,startPTS,endPTS,startDTS,endDTS),this.bufferFragmentData(audio,frag,part,chunkMeta)}if(null!=id3&&null!=(_id3$samples=id3.samples)&&_id3$samples.length){const emittedID3=_extends({id,frag,details},id3);hls.trigger(Events.FRAG_PARSING_METADATA,emittedID3)}if(text){const emittedText=_extends({id,frag,details},text);hls.trigger(Events.FRAG_PARSING_USERDATA,emittedText)}}else this.fragmentTracker.removeFragment(frag)}_bufferInitSegment(currentLevel,tracks,frag,chunkMeta){if(this.state!==State.PARSING)return;if(tracks.video&&delete tracks.video,tracks.audiovideo&&delete tracks.audiovideo,!tracks.audio)return;const track=tracks.audio;track.id=PlaylistLevelType.AUDIO;const variantAudioCodecs=currentLevel.audioCodec;this.log(`Init audio buffer, container:${track.container}, codecs[level/parsed]=[${variantAudioCodecs}/${track.codec}]`),variantAudioCodecs&&1===variantAudioCodecs.split(",").length&&(track.levelCodec=variantAudioCodecs),this.hls.trigger(Events.BUFFER_CODECS,tracks);const initSegment=track.initSegment;if(null!=initSegment&&initSegment.byteLength){const segment={type:"audio",frag,part:null,chunkMeta,parent:frag.type,data:initSegment};this.hls.trigger(Events.BUFFER_APPENDING,segment)}this.tickImmediate()}loadFragment(frag,track,targetBufferTime){const fragState=this.fragmentTracker.getState(frag);var _track$details;if(this.switchingTrack||fragState===FragmentState_NOT_LOADED||fragState===FragmentState_PARTIAL)if(isMediaFragment(frag))if(null!=(_track$details=track.details)&&_track$details.live&&!this.initPTS[frag.cc]){this.log(`Waiting for video PTS in continuity counter ${frag.cc} of live stream before loading audio fragment ${frag.sn} of level ${this.trackId}`),this.state=State.WAITING_INIT_PTS;const mainDetails=this.mainDetails;mainDetails&&mainDetails.fragmentStart!==track.details.fragmentStart&&alignMediaPlaylistByPDT(track.details,mainDetails)}else super.loadFragment(frag,track,targetBufferTime);else this._loadInitSegment(frag,track);else this.clearTrackerIfNeeded(frag)}flushAudioIfNeeded(switchingTrack){if(this.media&&this.bufferedTrack){const{name,lang,assocLang,characteristics,audioCodec,channels}=this.bufferedTrack;matchesOption({name,lang,assocLang,characteristics,audioCodec,channels},switchingTrack,audioMatchPredicate)||(useAlternateAudio(switchingTrack.url,this.hls)?(this.log("Switching audio track : flushing all audio"),super.flushMainBuffer(0,Number.POSITIVE_INFINITY,"audio"),this.bufferedTrack=null):this.bufferedTrack=switchingTrack)}}completeAudioSwitch(switchingTrack){const{hls}=this;this.flushAudioIfNeeded(switchingTrack),this.bufferedTrack=switchingTrack,this.switchingTrack=null,hls.trigger(Events.AUDIO_TRACK_SWITCHED,_objectSpread2({},switchingTrack))}}class BasePlaylistController extends Logger{constructor(hls,logPrefix){super(logPrefix,hls.logger),this.hls=void 0,this.canLoad=!1,this.timer=-1,this.hls=hls}destroy(){this.clearTimer(),this.hls=this.log=this.warn=null}clearTimer(){-1!==this.timer&&(self.clearTimeout(this.timer),this.timer=-1)}startLoad(){this.canLoad=!0,this.loadPlaylist()}stopLoad(){this.canLoad=!1,this.clearTimer()}switchParams(playlistUri,previous,current){const renditionReports=null==previous?void 0:previous.renditionReports;if(renditionReports){let foundIndex=-1;for(let i=0;i<renditionReports.length;i++){const attr=renditionReports[i];let uri;try{uri=new self.URL(attr.URI,previous.url).href}catch(error){this.warn(`Could not construct new URL for Rendition Report: ${error}`),uri=attr.URI||""}if(uri===playlistUri){foundIndex=i;break}uri===playlistUri.substring(0,uri.length)&&(foundIndex=i)}if(-1!==foundIndex){const attr=renditionReports[foundIndex],msn=parseInt(attr["LAST-MSN"])||previous.lastPartSn;let part=parseInt(attr["LAST-PART"])||previous.lastPartIndex;if(this.hls.config.lowLatencyMode){const currentGoal=Math.min(previous.age-previous.partTarget,previous.targetduration);part>=0&&currentGoal>previous.partTarget&&(part+=1)}const skip=current&&getSkipValue(current);return new HlsUrlParameters(msn,part>=0?part:void 0,skip)}}}loadPlaylist(hlsUrlParameters){this.clearTimer()}loadingPlaylist(playlist,hlsUrlParameters){this.clearTimer()}shouldLoadPlaylist(playlist){return this.canLoad&&!!playlist&&!!playlist.url&&(!playlist.details||playlist.details.live)}getUrlWithDirectives(uri,hlsUrlParameters){if(hlsUrlParameters)try{return hlsUrlParameters.addDirectives(uri)}catch(error){this.warn(`Could not construct new URL with HLS Delivery Directives: ${error}`)}return uri}playlistLoaded(index,data,previousDetails){const{details,stats}=data,now=self.performance.now(),elapsed=stats.loading.first?Math.max(0,now-stats.loading.first):0;details.advancedDateTime=Date.now()-elapsed;const timelineOffset=this.hls.config.timelineOffset;if(timelineOffset!==details.appliedTimelineOffset){const offset=Math.max(timelineOffset||0,0);details.appliedTimelineOffset=offset,details.fragments.forEach((frag=>{frag.setStart(frag.playlistOffset+offset)}))}if(details.live||null!=previousDetails&&previousDetails.live){const levelOrTrack="levelInfo"in data?data.levelInfo:data.track;if(details.reloaded(previousDetails),previousDetails&&details.fragments.length>0){mergeDetails(previousDetails,details,this);const error=details.playlistParsingError;if(error){this.warn(error);const hls=this.hls;if(!hls.config.ignorePlaylistParsingErrors){var _details$fragments$;const{networkDetails}=data;return void hls.trigger(Events.ERROR,{type:ErrorTypes.NETWORK_ERROR,details:ErrorDetails.LEVEL_PARSING_ERROR,fatal:!1,url:details.url,error,reason:error.message,level:data.level||void 0,parent:null==(_details$fragments$=details.fragments[0])?void 0:_details$fragments$.type,networkDetails,stats})}details.playlistParsingError=null}}-1===details.requestScheduled&&(details.requestScheduled=stats.loading.start);const bufferInfo=this.hls.mainForwardBufferInfo,position=bufferInfo?bufferInfo.end-bufferInfo.len:0,reloadInterval=computeReloadInterval(details,1e3*(details.edge-position));if(details.requestScheduled+reloadInterval<now?details.requestScheduled=now:details.requestScheduled+=reloadInterval,this.log(`live playlist ${index} ${details.advanced?"REFRESHED "+details.lastPartSn+"-"+details.lastPartIndex:details.updated?"UPDATED":"MISSED"}`),!this.canLoad||!details.live)return;let deliveryDirectives,msn,part;if(details.canBlockReload&&details.endSN&&details.advanced){const lowLatencyMode=this.hls.config.lowLatencyMode,lastPartSn=details.lastPartSn,endSn=details.endSN,lastPartIndex=details.lastPartIndex,atLastPartOfSegment=lastPartSn===endSn;-1!==lastPartIndex?atLastPartOfSegment?(msn=endSn+1,part=lowLatencyMode?0:lastPartIndex):(msn=lastPartSn,part=lowLatencyMode?lastPartIndex+1:details.maxPartIndex):msn=endSn+1;const lastAdvanced=details.age,cdnAge=lastAdvanced+details.ageHeader;let currentGoal=Math.min(cdnAge-details.partTarget,1.5*details.targetduration);if(currentGoal>0){if(cdnAge>3*details.targetduration)this.log(`Playlist last advanced ${lastAdvanced.toFixed(2)}s ago. Omitting segment and part directives.`),msn=void 0,part=void 0;else if(null!=previousDetails&&previousDetails.tuneInGoal&&cdnAge-details.partTarget>previousDetails.tuneInGoal)this.warn(`CDN Tune-in goal increased from: ${previousDetails.tuneInGoal} to: ${currentGoal} with playlist age: ${details.age}`),currentGoal=0;else{const segments=Math.floor(currentGoal/details.targetduration);if(msn+=segments,void 0!==part){part+=Math.round(currentGoal%details.targetduration/details.partTarget)}this.log(`CDN Tune-in age: ${details.ageHeader}s last advanced ${lastAdvanced.toFixed(2)}s goal: ${currentGoal} skip sn ${segments} to part ${part}`)}details.tuneInGoal=currentGoal}if(deliveryDirectives=this.getDeliveryDirectives(details,data.deliveryDirectives,msn,part),lowLatencyMode||!atLastPartOfSegment)return details.requestScheduled=now,void this.loadingPlaylist(levelOrTrack,deliveryDirectives)}else(details.canBlockReload||details.canSkipUntil)&&(deliveryDirectives=this.getDeliveryDirectives(details,data.deliveryDirectives,msn,part));deliveryDirectives&&void 0!==msn&&details.canBlockReload&&(details.requestScheduled=stats.loading.first+Math.max(reloadInterval-2*elapsed,reloadInterval/2)),this.scheduleLoading(levelOrTrack,deliveryDirectives,details)}else this.clearTimer()}scheduleLoading(levelOrTrack,deliveryDirectives,updatedDetails){const details=updatedDetails||levelOrTrack.details;if(!details)return void this.loadingPlaylist(levelOrTrack,deliveryDirectives);const now=self.performance.now(),requestScheduled=details.requestScheduled;if(now>=requestScheduled)return void this.loadingPlaylist(levelOrTrack,deliveryDirectives);const estimatedTimeUntilUpdate=requestScheduled-now;this.log(`reload live playlist ${levelOrTrack.name||levelOrTrack.bitrate+"bps"} in ${Math.round(estimatedTimeUntilUpdate)} ms`),this.clearTimer(),this.timer=self.setTimeout((()=>this.loadingPlaylist(levelOrTrack,deliveryDirectives)),estimatedTimeUntilUpdate)}getDeliveryDirectives(details,previousDeliveryDirectives,msn,part){let skip=getSkipValue(details);return null!=previousDeliveryDirectives&&previousDeliveryDirectives.skip&&details.deltaUpdateFailed&&(msn=previousDeliveryDirectives.msn,part=previousDeliveryDirectives.part,skip=HlsSkip.No),new HlsUrlParameters(msn,part,skip)}checkRetry(errorEvent){const errorDetails=errorEvent.details,isTimeout=isTimeoutError(errorEvent),errorAction=errorEvent.errorAction,{action,retryCount=0,retryConfig}=errorAction||{},retry=!!errorAction&&!!retryConfig&&(action===NetworkErrorAction.RetryRequest||!errorAction.resolved&&action===NetworkErrorAction.SendAlternateToPenaltyBox);if(retry){var _errorEvent$context;if(retryCount>=retryConfig.maxNumRetry)return!1;if(isTimeout&&null!=(_errorEvent$context=errorEvent.context)&&_errorEvent$context.deliveryDirectives)this.warn(`Retrying playlist loading ${retryCount+1}/${retryConfig.maxNumRetry} after "${errorDetails}" without delivery-directives`),this.loadPlaylist();else{const delay=getRetryDelay(retryConfig,retryCount);this.clearTimer(),this.timer=self.setTimeout((()=>this.loadPlaylist()),delay),this.warn(`Retrying playlist loading ${retryCount+1}/${retryConfig.maxNumRetry} after "${errorDetails}" in ${delay}ms`)}errorEvent.levelRetry=!0,errorAction.resolved=!0}return retry}}function subtitleOptionsIdentical(trackList1,trackList2){if(trackList1.length!==trackList2.length)return!1;for(let i=0;i<trackList1.length;i++)if(!mediaAttributesIdentical(trackList1[i].attrs,trackList2[i].attrs))return!1;return!0}function mediaAttributesIdentical(attrs1,attrs2,customAttributes){const stableRenditionId=attrs1["STABLE-RENDITION-ID"];return stableRenditionId&&!customAttributes?stableRenditionId===attrs2["STABLE-RENDITION-ID"]:!(customAttributes||["LANGUAGE","NAME","CHARACTERISTICS","AUTOSELECT","DEFAULT","FORCED","ASSOC-LANGUAGE"]).some((subtitleAttribute=>attrs1[subtitleAttribute]!==attrs2[subtitleAttribute]))}function subtitleTrackMatchesTextTrack(subtitleTrack,textTrack){return textTrack.label.toLowerCase()===subtitleTrack.name.toLowerCase()&&(!textTrack.language||textTrack.language.toLowerCase()===(subtitleTrack.lang||"").toLowerCase())}class AudioTrackController extends BasePlaylistController{constructor(hls){super(hls,"audio-track-controller"),this.tracks=[],this.groupIds=null,this.tracksInGroup=[],this.trackId=-1,this.currentTrack=null,this.selectDefaultTrack=!0,this.registerListeners()}registerListeners(){const{hls}=this;hls.on(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.on(Events.MANIFEST_PARSED,this.onManifestParsed,this),hls.on(Events.LEVEL_LOADING,this.onLevelLoading,this),hls.on(Events.LEVEL_SWITCHING,this.onLevelSwitching,this),hls.on(Events.AUDIO_TRACK_LOADED,this.onAudioTrackLoaded,this),hls.on(Events.ERROR,this.onError,this)}unregisterListeners(){const{hls}=this;hls.off(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.off(Events.MANIFEST_PARSED,this.onManifestParsed,this),hls.off(Events.LEVEL_LOADING,this.onLevelLoading,this),hls.off(Events.LEVEL_SWITCHING,this.onLevelSwitching,this),hls.off(Events.AUDIO_TRACK_LOADED,this.onAudioTrackLoaded,this),hls.off(Events.ERROR,this.onError,this)}destroy(){this.unregisterListeners(),this.tracks.length=0,this.tracksInGroup.length=0,this.currentTrack=null,super.destroy()}onManifestLoading(){this.tracks=[],this.tracksInGroup=[],this.groupIds=null,this.currentTrack=null,this.trackId=-1,this.selectDefaultTrack=!0}onManifestParsed(event,data){this.tracks=data.audioTracks||[]}onAudioTrackLoaded(event,data){const{id,groupId,details}=data,trackInActiveGroup=this.tracksInGroup[id];if(!trackInActiveGroup||trackInActiveGroup.groupId!==groupId)return void this.warn(`Audio track with id:${id} and group:${groupId} not found in active group ${null==trackInActiveGroup?void 0:trackInActiveGroup.groupId}`);const curDetails=trackInActiveGroup.details;trackInActiveGroup.details=data.details,this.log(`Audio track ${id} "${trackInActiveGroup.name}" lang:${trackInActiveGroup.lang} group:${groupId} loaded [${details.startSN}-${details.endSN}]`),id===this.trackId&&this.playlistLoaded(id,data,curDetails)}onLevelLoading(event,data){this.switchLevel(data.level)}onLevelSwitching(event,data){this.switchLevel(data.level)}switchLevel(levelIndex){const levelInfo=this.hls.levels[levelIndex];if(!levelInfo)return;const audioGroups=levelInfo.audioGroups||null,currentGroups=this.groupIds;let currentTrack=this.currentTrack;if(!audioGroups||(null==currentGroups?void 0:currentGroups.length)!==(null==audioGroups?void 0:audioGroups.length)||null!=audioGroups&&audioGroups.some((groupId=>-1===(null==currentGroups?void 0:currentGroups.indexOf(groupId))))){this.groupIds=audioGroups,this.trackId=-1,this.currentTrack=null;const audioTracks=this.tracks.filter((track=>!audioGroups||-1!==audioGroups.indexOf(track.groupId)));if(audioTracks.length)this.selectDefaultTrack&&!audioTracks.some((track=>track.default))&&(this.selectDefaultTrack=!1),audioTracks.forEach(((track,i)=>{track.id=i}));else if(!currentTrack&&!this.tracksInGroup.length)return;this.tracksInGroup=audioTracks;const audioPreference=this.hls.config.audioPreference;if(!currentTrack&&audioPreference){const groupIndex=findMatchingOption(audioPreference,audioTracks,audioMatchPredicate);if(groupIndex>-1)currentTrack=audioTracks[groupIndex];else{const allIndex=findMatchingOption(audioPreference,this.tracks);currentTrack=this.tracks[allIndex]}}let trackId=this.findTrackId(currentTrack);-1===trackId&&currentTrack&&(trackId=this.findTrackId(null));const audioTracksUpdated={audioTracks};this.log(`Updating audio tracks, ${audioTracks.length} track(s) found in group(s): ${null==audioGroups?void 0:audioGroups.join(",")}`),this.hls.trigger(Events.AUDIO_TRACKS_UPDATED,audioTracksUpdated);const selectedTrackId=this.trackId;if(-1!==trackId&&-1===selectedTrackId)this.setAudioTrack(trackId);else if(audioTracks.length&&-1===selectedTrackId){var _this$groupIds;const error=new Error(`No audio track selected for current audio group-ID(s): ${null==(_this$groupIds=this.groupIds)?void 0:_this$groupIds.join(",")} track count: ${audioTracks.length}`);this.warn(error.message),this.hls.trigger(Events.ERROR,{type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.AUDIO_TRACK_LOAD_ERROR,fatal:!0,error})}}}onError(event,data){!data.fatal&&data.context&&(data.context.type!==PlaylistContextType_AUDIO_TRACK||data.context.id!==this.trackId||this.groupIds&&-1===this.groupIds.indexOf(data.context.groupId)||this.checkRetry(data))}get allAudioTracks(){return this.tracks}get audioTracks(){return this.tracksInGroup}get audioTrack(){return this.trackId}set audioTrack(newId){this.selectDefaultTrack=!1,this.setAudioTrack(newId)}setAudioOption(audioOption){const hls=this.hls;if(hls.config.audioPreference=audioOption,audioOption){const allAudioTracks=this.allAudioTracks;if(this.selectDefaultTrack=!1,allAudioTracks.length){const currentTrack=this.currentTrack;if(currentTrack&&matchesOption(audioOption,currentTrack,audioMatchPredicate))return currentTrack;const groupIndex=findMatchingOption(audioOption,this.tracksInGroup,audioMatchPredicate);if(groupIndex>-1){const track=this.tracksInGroup[groupIndex];return this.setAudioTrack(groupIndex),track}if(currentTrack){let searchIndex=hls.loadLevel;-1===searchIndex&&(searchIndex=hls.firstAutoLevel);const switchIndex=function findClosestLevelWithAudioGroup(option,levels,allAudioTracks,searchIndex,matchPredicate){const currentLevel=levels[searchIndex],renditions=levels.reduce(((variantMap,level,index)=>{const uri=level.uri;return(variantMap[uri]||(variantMap[uri]=[])).push(index),variantMap}),{})[currentLevel.uri];renditions.length>1&&(searchIndex=Math.max.apply(Math,renditions));const currentVideoRange=currentLevel.videoRange,currentFrameRate=currentLevel.frameRate,currentVideoCodec=currentLevel.codecSet.substring(0,4),matchingVideo=searchDownAndUpList(levels,searchIndex,(level=>{if(level.videoRange!==currentVideoRange||level.frameRate!==currentFrameRate||level.codecSet.substring(0,4)!==currentVideoCodec)return!1;const audioGroups=level.audioGroups,tracks=allAudioTracks.filter((track=>!audioGroups||-1!==audioGroups.indexOf(track.groupId)));return findMatchingOption(option,tracks,matchPredicate)>-1}));return matchingVideo>-1?matchingVideo:searchDownAndUpList(levels,searchIndex,(level=>{const audioGroups=level.audioGroups,tracks=allAudioTracks.filter((track=>!audioGroups||-1!==audioGroups.indexOf(track.groupId)));return findMatchingOption(option,tracks,matchPredicate)>-1}))}(audioOption,hls.levels,allAudioTracks,searchIndex,audioMatchPredicate);if(-1===switchIndex)return null;hls.nextLoadLevel=switchIndex}if(audioOption.channels||audioOption.audioCodec){const withoutCodecAndChannelsMatch=findMatchingOption(audioOption,allAudioTracks);if(withoutCodecAndChannelsMatch>-1)return allAudioTracks[withoutCodecAndChannelsMatch]}}}return null}setAudioTrack(newId){const tracks=this.tracksInGroup;if(newId<0||newId>=tracks.length)return void this.warn(`Invalid audio track id: ${newId}`);this.selectDefaultTrack=!1;const lastTrack=this.currentTrack,track=tracks[newId],trackLoaded=track.details&&!track.details.live;if(newId===this.trackId&&track===lastTrack&&trackLoaded)return;if(this.log(`Switching to audio-track ${newId} "${track.name}" lang:${track.lang} group:${track.groupId} channels:${track.channels}`),this.trackId=newId,this.currentTrack=track,this.hls.trigger(Events.AUDIO_TRACK_SWITCHING,_objectSpread2({},track)),trackLoaded)return;const hlsUrlParameters=this.switchParams(track.url,null==lastTrack?void 0:lastTrack.details,track.details);this.loadPlaylist(hlsUrlParameters)}findTrackId(currentTrack){const audioTracks=this.tracksInGroup;for(let i=0;i<audioTracks.length;i++){const track=audioTracks[i];if((!this.selectDefaultTrack||track.default)&&(!currentTrack||matchesOption(currentTrack,track,audioMatchPredicate)))return i}if(currentTrack){const{name,lang,assocLang,characteristics,audioCodec,channels}=currentTrack;for(let i=0;i<audioTracks.length;i++){if(matchesOption({name,lang,assocLang,characteristics,audioCodec,channels},audioTracks[i],audioMatchPredicate))return i}for(let i=0;i<audioTracks.length;i++){const track=audioTracks[i];if(mediaAttributesIdentical(currentTrack.attrs,track.attrs,["LANGUAGE","ASSOC-LANGUAGE","CHARACTERISTICS"]))return i}for(let i=0;i<audioTracks.length;i++){const track=audioTracks[i];if(mediaAttributesIdentical(currentTrack.attrs,track.attrs,["LANGUAGE"]))return i}}return-1}loadPlaylist(hlsUrlParameters){super.loadPlaylist();const audioTrack=this.currentTrack;this.shouldLoadPlaylist(audioTrack)&&useAlternateAudio(audioTrack.url,this.hls)&&this.scheduleLoading(audioTrack,hlsUrlParameters)}loadingPlaylist(audioTrack,hlsUrlParameters){super.loadingPlaylist(audioTrack,hlsUrlParameters);const id=audioTrack.id,groupId=audioTrack.groupId,url=this.getUrlWithDirectives(audioTrack.url,hlsUrlParameters),details=audioTrack.details,age=null==details?void 0:details.age;this.log(`Loading audio-track ${id} "${audioTrack.name}" lang:${audioTrack.lang} group:${groupId}${void 0!==(null==hlsUrlParameters?void 0:hlsUrlParameters.msn)?" at sn "+hlsUrlParameters.msn+" part "+hlsUrlParameters.part:""}${age&&details.live?" age "+age.toFixed(1)+(details.type?" "+details.type||0:""):""} ${url}`),this.hls.trigger(Events.AUDIO_TRACK_LOADING,{url,id,groupId,deliveryDirectives:hlsUrlParameters||null,track:audioTrack})}}class BufferOperationQueue{constructor(sourceBufferReference){this.tracks=void 0,this.queues={video:[],audio:[],audiovideo:[]},this.tracks=sourceBufferReference}destroy(){this.tracks=this.queues=null}append(operation,type,pending){if(null===this.queues||null===this.tracks)return;const queue=this.queues[type];queue.push(operation),1!==queue.length||pending||this.executeNext(type)}appendBlocker(type){return new Promise((resolve=>{const operation={label:"async-blocker",execute:resolve,onStart:()=>{},onComplete:()=>{},onError:()=>{}};this.append(operation,type)}))}prependBlocker(type){return new Promise((resolve=>{if(this.queues){const operation={label:"async-blocker-prepend",execute:resolve,onStart:()=>{},onComplete:()=>{},onError:()=>{}};this.queues[type].unshift(operation)}}))}removeBlockers(){null!==this.queues&&[this.queues.video,this.queues.audio,this.queues.audiovideo].forEach((queue=>{var _queue$;const label=null==(_queue$=queue[0])?void 0:_queue$.label;"async-blocker"!==label&&"async-blocker-prepend"!==label||(queue[0].execute(),queue.splice(0,1))}))}unblockAudio(op){if(null===this.queues)return;this.queues.audio[0]===op&&this.shiftAndExecuteNext("audio")}executeNext(type){if(null===this.queues||null===this.tracks)return;const queue=this.queues[type];if(queue.length){const operation=queue[0];try{operation.execute()}catch(error){var _this$tracks$type;if(operation.onError(error),null===this.queues||null===this.tracks)return;const sb=null==(_this$tracks$type=this.tracks[type])?void 0:_this$tracks$type.buffer;null!=sb&&sb.updating||this.shiftAndExecuteNext(type)}}}shiftAndExecuteNext(type){null!==this.queues&&(this.queues[type].shift(),this.executeNext(type))}current(type){var _this$queues;return(null==(_this$queues=this.queues)?void 0:_this$queues[type][0])||null}toString(){const{queues,tracks}=this;return null===queues||null===tracks?"<destroyed>":`\n${this.list("video")}\n${this.list("audio")}\n${this.list("audiovideo")}}`}list(type){var _this$queues2,_this$tracks;return null!=(_this$queues2=this.queues)&&_this$queues2[type]||null!=(_this$tracks=this.tracks)&&_this$tracks[type]?`${type}: (${this.listSbInfo(type)}) ${this.listOps(type)}`:""}listSbInfo(type){var _this$tracks2;const track=null==(_this$tracks2=this.tracks)?void 0:_this$tracks2[type],sb=null==track?void 0:track.buffer;return sb?`SourceBuffer${sb.updating?" updating":""}${track.ended?" ended":""}${track.ending?" ending":""}`:"none"}listOps(type){var _this$queues3;return(null==(_this$queues3=this.queues)?void 0:_this$queues3[type].map((op=>op.label)).join(", "))||""}}const VIDEO_CODEC_PROFILE_REPLACE=/(avc[1234]|hvc1|hev1|dvh[1e]|vp09|av01)(?:\.[^.,]+)+/;class HlsJsTrackRemovedError extends Error{constructor(message){super(message),this.name="HlsJsTrackRemovedError"}}class BufferController extends Logger{constructor(hls,fragmentTracker){super("buffer-controller",hls.logger),this.hls=void 0,this.fragmentTracker=void 0,this.details=null,this._objectUrl=null,this.operationQueue=null,this.bufferCodecEventsTotal=0,this.media=null,this.mediaSource=null,this.lastMpegAudioChunk=null,this.blockedAudioAppend=null,this.lastVideoAppendEnd=0,this.appendSource=void 0,this.transferData=void 0,this.overrides=void 0,this.appendErrors={audio:0,video:0,audiovideo:0},this.tracks={},this.sourceBuffers=[[null,null],[null,null]],this._onEndStreaming=event=>{var _this$mediaSource;this.hls&&"open"===(null==(_this$mediaSource=this.mediaSource)?void 0:_this$mediaSource.readyState)&&this.hls.pauseBuffering()},this._onStartStreaming=event=>{this.hls&&this.hls.resumeBuffering()},this._onMediaSourceOpen=e=>{const{media,mediaSource}=this;e&&this.log("Media source opened"),media&&mediaSource&&(mediaSource.removeEventListener("sourceopen",this._onMediaSourceOpen),media.removeEventListener("emptied",this._onMediaEmptied),this.updateDuration(),this.hls.trigger(Events.MEDIA_ATTACHED,{media,mediaSource}),null!==this.mediaSource&&this.checkPendingTracks())},this._onMediaSourceClose=()=>{this.log("Media source closed")},this._onMediaSourceEnded=()=>{this.log("Media source ended")},this._onMediaEmptied=()=>{const{mediaSrc,_objectUrl}=this;mediaSrc!==_objectUrl&&this.error(`Media element src was set while attaching MediaSource (${_objectUrl} > ${mediaSrc})`)},this.hls=hls,this.fragmentTracker=fragmentTracker,this.appendSource=function isManagedMediaSource(source){return"undefined"!=typeof self&&source===self.ManagedMediaSource}(getMediaSource(hls.config.preferManagedMediaSource)),this.initTracks(),this.registerListeners()}hasSourceTypes(){return Object.keys(this.tracks).length>0}destroy(){this.unregisterListeners(),this.details=null,this.lastMpegAudioChunk=this.blockedAudioAppend=null,this.transferData=this.overrides=void 0,this.operationQueue&&(this.operationQueue.destroy(),this.operationQueue=null),this.hls=this.fragmentTracker=null,this._onMediaSourceOpen=this._onMediaSourceClose=null,this._onMediaSourceEnded=null,this._onStartStreaming=this._onEndStreaming=null}registerListeners(){const{hls}=this;hls.on(Events.MEDIA_ATTACHING,this.onMediaAttaching,this),hls.on(Events.MEDIA_DETACHING,this.onMediaDetaching,this),hls.on(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.on(Events.MANIFEST_PARSED,this.onManifestParsed,this),hls.on(Events.BUFFER_RESET,this.onBufferReset,this),hls.on(Events.BUFFER_APPENDING,this.onBufferAppending,this),hls.on(Events.BUFFER_CODECS,this.onBufferCodecs,this),hls.on(Events.BUFFER_EOS,this.onBufferEos,this),hls.on(Events.BUFFER_FLUSHING,this.onBufferFlushing,this),hls.on(Events.LEVEL_UPDATED,this.onLevelUpdated,this),hls.on(Events.FRAG_PARSED,this.onFragParsed,this),hls.on(Events.FRAG_CHANGED,this.onFragChanged,this),hls.on(Events.ERROR,this.onError,this)}unregisterListeners(){const{hls}=this;hls.off(Events.MEDIA_ATTACHING,this.onMediaAttaching,this),hls.off(Events.MEDIA_DETACHING,this.onMediaDetaching,this),hls.off(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.off(Events.MANIFEST_PARSED,this.onManifestParsed,this),hls.off(Events.BUFFER_RESET,this.onBufferReset,this),hls.off(Events.BUFFER_APPENDING,this.onBufferAppending,this),hls.off(Events.BUFFER_CODECS,this.onBufferCodecs,this),hls.off(Events.BUFFER_EOS,this.onBufferEos,this),hls.off(Events.BUFFER_FLUSHING,this.onBufferFlushing,this),hls.off(Events.LEVEL_UPDATED,this.onLevelUpdated,this),hls.off(Events.FRAG_PARSED,this.onFragParsed,this),hls.off(Events.FRAG_CHANGED,this.onFragChanged,this),hls.off(Events.ERROR,this.onError,this)}transferMedia(){const{media,mediaSource}=this;if(!media)return null;const tracks={};if(this.operationQueue){const updating=this.isUpdating();updating||this.operationQueue.removeBlockers();const queued=this.isQueued();(updating||queued)&&this.warn(`Transfering MediaSource with${queued?" operations in queue":""}${updating?" updating SourceBuffer(s)":""} ${this.operationQueue}`),this.operationQueue.destroy()}const transferData=this.transferData;return!this.sourceBufferCount&&transferData&&transferData.mediaSource===mediaSource?_extends(tracks,transferData.tracks):this.sourceBuffers.forEach((tuple=>{const[type]=tuple;type&&(tracks[type]=_extends({},this.tracks[type]),this.removeBuffer(type)),tuple[0]=tuple[1]=null})),{media,mediaSource,tracks}}initTracks(){this.sourceBuffers=[[null,null],[null,null]],this.tracks={},this.resetQueue(),this.resetAppendErrors(),this.lastMpegAudioChunk=this.blockedAudioAppend=null,this.lastVideoAppendEnd=0}onManifestLoading(){this.bufferCodecEventsTotal=0,this.details=null}onManifestParsed(event,data){var _this$transferData;let codecEvents=2;(data.audio&&!data.video||!data.altAudio)&&(codecEvents=1),this.bufferCodecEventsTotal=codecEvents,this.log(`${codecEvents} bufferCodec event(s) expected.`),null!=(_this$transferData=this.transferData)&&_this$transferData.mediaSource&&this.sourceBufferCount&&codecEvents&&this.bufferCreated()}onMediaAttaching(event,data){const media=this.media=data.media;this.transferData=this.overrides=void 0;const MediaSource=getMediaSource(this.appendSource);if(MediaSource){const transferringMedia=!!data.mediaSource;(transferringMedia||data.overrides)&&(this.transferData=data,this.overrides=data.overrides);const ms=this.mediaSource=data.mediaSource||new MediaSource;if(this.assignMediaSource(ms),transferringMedia)this._objectUrl=media.src,this.attachTransferred();else{const objectUrl=this._objectUrl=self.URL.createObjectURL(ms);if(this.appendSource)try{media.removeAttribute("src");const MMS=self.ManagedMediaSource;media.disableRemotePlayback=media.disableRemotePlayback||MMS&&ms instanceof MMS,removeSourceChildren(media),function addSource(media,url){const source=self.document.createElement("source");source.type="video/mp4",source.src=url,media.appendChild(source)}(media,objectUrl),media.load()}catch(error){media.src=objectUrl}else media.src=objectUrl}media.addEventListener("emptied",this._onMediaEmptied)}}assignMediaSource(ms){var _this$transferData2,_ms$constructor;this.log(`${(null==(_this$transferData2=this.transferData)?void 0:_this$transferData2.mediaSource)===ms?"transferred":"created"} media source: ${null==(_ms$constructor=ms.constructor)?void 0:_ms$constructor.name}`),ms.addEventListener("sourceopen",this._onMediaSourceOpen),ms.addEventListener("sourceended",this._onMediaSourceEnded),ms.addEventListener("sourceclose",this._onMediaSourceClose),this.appendSource&&(ms.addEventListener("startstreaming",this._onStartStreaming),ms.addEventListener("endstreaming",this._onEndStreaming))}attachTransferred(){const media=this.media,data=this.transferData;if(!data||!media)return;const requiredTracks=this.tracks,transferredTracks=data.tracks,trackNames=transferredTracks?Object.keys(transferredTracks):null,trackCount=trackNames?trackNames.length:0,mediaSourceOpenCallback=()=>{Promise.resolve().then((()=>{this.media&&this.mediaSourceOpenOrEnded&&this._onMediaSourceOpen()}))};if(transferredTracks&&trackNames&&trackCount){if(!this.tracksReady)return this.hls.config.startFragPrefetch=!0,void this.log("attachTransferred: waiting for SourceBuffer track info");if(this.log(`attachTransferred: (bufferCodecEventsTotal ${this.bufferCodecEventsTotal})\nrequired tracks: ${stringify(requiredTracks,((key,value)=>"initSegment"===key?void 0:value))};\ntransfer tracks: ${stringify(transferredTracks,((key,value)=>"initSegment"===key?void 0:value))}}`),!isCompatibleTrackChange(transferredTracks,requiredTracks)){data.mediaSource=null,data.tracks=void 0;const currentTime=media.currentTime,details=this.details,startTime=Math.max(currentTime,(null==details?void 0:details.fragments[0].start)||0);return startTime-currentTime>1?void this.log(`attachTransferred: waiting for playback to reach new tracks start time ${currentTime} -> ${startTime}`):(this.warn(`attachTransferred: resetting MediaSource for incompatible tracks ("${Object.keys(transferredTracks)}"->"${Object.keys(requiredTracks)}") start time: ${startTime} currentTime: ${currentTime}`),this.onMediaDetaching(Events.MEDIA_DETACHING,{}),this.onMediaAttaching(Events.MEDIA_ATTACHING,data),void(media.currentTime=startTime))}this.transferData=void 0,trackNames.forEach((trackName=>{const type=trackName,track=transferredTracks[type];if(track){const sb=track.buffer;if(sb){const fragmentTracker=this.fragmentTracker,playlistType=track.id;if(fragmentTracker.hasFragments(playlistType)||fragmentTracker.hasParts(playlistType)){const bufferedTimeRanges=BufferHelper.getBuffered(sb);fragmentTracker.detectEvictedFragments(type,bufferedTimeRanges,playlistType,null,!0)}const sbIndex=sourceBufferNameToIndex(type),sbTuple=[type,sb];this.sourceBuffers[sbIndex]=sbTuple,sb.updating&&this.operationQueue&&this.operationQueue.prependBlocker(type),this.trackSourceBuffer(type,track)}}})),mediaSourceOpenCallback(),this.bufferCreated()}else this.log("attachTransferred: MediaSource w/o SourceBuffers"),mediaSourceOpenCallback()}get mediaSourceOpenOrEnded(){var _this$mediaSource2;const readyState=null==(_this$mediaSource2=this.mediaSource)?void 0:_this$mediaSource2.readyState;return"open"===readyState||"ended"===readyState}onMediaDetaching(event,data){const transferringMedia=!!data.transferMedia;this.transferData=this.overrides=void 0;const{media,mediaSource,_objectUrl}=this;if(mediaSource){if(this.log("media source "+(transferringMedia?"transferring":"detaching")),transferringMedia)this.sourceBuffers.forEach((([type])=>{type&&this.removeBuffer(type)})),this.resetQueue();else{if(this.mediaSourceOpenOrEnded){const open="open"===mediaSource.readyState;try{const sourceBuffers=mediaSource.sourceBuffers;for(let i=sourceBuffers.length;i--;)open&&sourceBuffers[i].abort(),mediaSource.removeSourceBuffer(sourceBuffers[i]);open&&mediaSource.endOfStream()}catch(err){this.warn(`onMediaDetaching: ${err.message} while calling endOfStream`)}}this.sourceBufferCount&&this.onBufferReset()}mediaSource.removeEventListener("sourceopen",this._onMediaSourceOpen),mediaSource.removeEventListener("sourceended",this._onMediaSourceEnded),mediaSource.removeEventListener("sourceclose",this._onMediaSourceClose),this.appendSource&&(mediaSource.removeEventListener("startstreaming",this._onStartStreaming),mediaSource.removeEventListener("endstreaming",this._onEndStreaming)),this.mediaSource=null,this._objectUrl=null}media&&(media.removeEventListener("emptied",this._onMediaEmptied),transferringMedia||(_objectUrl&&self.URL.revokeObjectURL(_objectUrl),this.mediaSrc===_objectUrl?(media.removeAttribute("src"),this.appendSource&&removeSourceChildren(media),media.load()):this.warn("media|source.src was changed by a third party - skip cleanup")),this.media=null),this.hls.trigger(Events.MEDIA_DETACHED,data)}onBufferReset(){this.sourceBuffers.forEach((([type])=>{type&&this.resetBuffer(type)})),this.initTracks()}resetBuffer(type){var _this$tracks$type;const sb=null==(_this$tracks$type=this.tracks[type])?void 0:_this$tracks$type.buffer;if(this.removeBuffer(type),sb)try{var _this$mediaSource3;null!=(_this$mediaSource3=this.mediaSource)&&_this$mediaSource3.sourceBuffers.length&&this.mediaSource.removeSourceBuffer(sb)}catch(err){this.warn(`onBufferReset ${type}`,err)}delete this.tracks[type]}removeBuffer(type){this.removeBufferListeners(type),this.sourceBuffers[sourceBufferNameToIndex(type)]=[null,null];const track=this.tracks[type];track&&(track.buffer=void 0)}resetQueue(){this.operationQueue&&this.operationQueue.destroy(),this.operationQueue=new BufferOperationQueue(this.tracks)}onBufferCodecs(event,data){const tracks=this.tracks,trackNames=Object.keys(data);this.log(`BUFFER_CODECS: "${trackNames}" (current SB count ${this.sourceBufferCount})`);const unmuxedToMuxed="audiovideo"in data&&(tracks.audio||tracks.video)||tracks.audiovideo&&("audio"in data||"video"in data),muxedToUnmuxed=!unmuxedToMuxed&&this.sourceBufferCount&&this.media&&trackNames.some((sbName=>!tracks[sbName]));unmuxedToMuxed||muxedToUnmuxed?this.warn(`Unsupported transition between "${Object.keys(tracks)}" and "${trackNames}" SourceBuffers`):(trackNames.forEach((trackName=>{var _this$transferData3,_trackCodec;const parsedTrack=data[trackName],{id,codec,levelCodec,container,metadata,supplemental}=parsedTrack;let track=tracks[trackName];const transferredTrack=null==(_this$transferData3=this.transferData)||null==(_this$transferData3=_this$transferData3.tracks)?void 0:_this$transferData3[trackName],sbTrack=null!=transferredTrack&&transferredTrack.buffer?transferredTrack:track,sbCodec=(null==sbTrack?void 0:sbTrack.pendingCodec)||(null==sbTrack?void 0:sbTrack.codec),trackLevelCodec=null==sbTrack?void 0:sbTrack.levelCodec;track||(track=tracks[trackName]={buffer:void 0,listeners:[],codec,supplemental,container,levelCodec,metadata,id});const currentCodecFull=pickMostCompleteCodecName(sbCodec,trackLevelCodec),currentCodec=null==currentCodecFull?void 0:currentCodecFull.replace(VIDEO_CODEC_PROFILE_REPLACE,"$1");let trackCodec=pickMostCompleteCodecName(codec,levelCodec);const nextCodec=null==(_trackCodec=trackCodec)?void 0:_trackCodec.replace(VIDEO_CODEC_PROFILE_REPLACE,"$1");trackCodec&&currentCodecFull&&currentCodec!==nextCodec&&("audio"===trackName.slice(0,5)&&(trackCodec=getCodecCompatibleName(trackCodec,this.appendSource)),this.log(`switching codec ${sbCodec} to ${trackCodec}`),trackCodec!==(track.pendingCodec||track.codec)&&(track.pendingCodec=trackCodec),track.container=container,this.appendChangeType(trackName,container,trackCodec))})),(this.tracksReady||this.sourceBufferCount)&&(data.tracks=this.sourceBufferTracks),this.sourceBufferCount||this.mediaSourceOpenOrEnded&&this.checkPendingTracks())}get sourceBufferTracks(){return Object.keys(this.tracks).reduce(((baseTracks,type)=>{const track=this.tracks[type];return baseTracks[type]={id:track.id,container:track.container,codec:track.codec,levelCodec:track.levelCodec},baseTracks}),{})}appendChangeType(type,container,codec){const mimeType=`${container};codecs=${codec}`,operation={label:`change-type=${mimeType}`,execute:()=>{const track=this.tracks[type];if(track){const sb=track.buffer;null!=sb&&sb.changeType&&(this.log(`changing ${type} sourceBuffer type to ${mimeType}`),sb.changeType(mimeType),track.codec=codec,track.container=container)}this.shiftAndExecuteNext(type)},onStart:()=>{},onComplete:()=>{},onError:error=>{this.warn(`Failed to change ${type} SourceBuffer type`,error)}};this.append(operation,type,this.isPending(this.tracks[type]))}blockAudio(partOrFrag){var _this$fragmentTracker;const pStart=partOrFrag.start,pTime=pStart+.05*partOrFrag.duration;if(!0===(null==(_this$fragmentTracker=this.fragmentTracker.getAppendedFrag(pStart,PlaylistLevelType.MAIN))?void 0:_this$fragmentTracker.gap))return;const op={label:"block-audio",execute:()=>{var _this$fragmentTracker2;const videoTrack=this.tracks.video;(this.lastVideoAppendEnd>pTime||null!=videoTrack&&videoTrack.buffer&&BufferHelper.isBuffered(videoTrack.buffer,pTime)||!0===(null==(_this$fragmentTracker2=this.fragmentTracker.getAppendedFrag(pTime,PlaylistLevelType.MAIN))?void 0:_this$fragmentTracker2.gap))&&(this.blockedAudioAppend=null,this.shiftAndExecuteNext("audio"))},onStart:()=>{},onComplete:()=>{},onError:error=>{this.warn("Error executing block-audio operation",error)}};this.blockedAudioAppend={op,frag:partOrFrag},this.append(op,"audio",!0)}unblockAudio(){const{blockedAudioAppend,operationQueue}=this;blockedAudioAppend&&operationQueue&&(this.blockedAudioAppend=null,operationQueue.unblockAudio(blockedAudioAppend.op))}onBufferAppending(event,eventData){const{tracks}=this,{data,type,parent,frag,part,chunkMeta,offset}=eventData,chunkStats=chunkMeta.buffering[type],{sn,cc}=frag,bufferAppendingStart=self.performance.now();chunkStats.start=bufferAppendingStart;const fragBuffering=frag.stats.buffering,partBuffering=part?part.stats.buffering:null;0===fragBuffering.start&&(fragBuffering.start=bufferAppendingStart),partBuffering&&0===partBuffering.start&&(partBuffering.start=bufferAppendingStart);const audioTrack=tracks.audio;let checkTimestampOffset=!1;"audio"===type&&"audio/mpeg"===(null==audioTrack?void 0:audioTrack.container)&&(checkTimestampOffset=!this.lastMpegAudioChunk||1===chunkMeta.id||this.lastMpegAudioChunk.sn!==chunkMeta.sn,this.lastMpegAudioChunk=chunkMeta);const videoTrack=tracks.video,videoSb=null==videoTrack?void 0:videoTrack.buffer;if(videoSb&&"initSegment"!==sn){const partOrFrag=part||frag,blockedAudioAppend=this.blockedAudioAppend;if("audio"!==type||"main"===parent||this.blockedAudioAppend||videoTrack.ending||videoTrack.ended){if("video"===type){const videoAppendEnd=partOrFrag.end;if(blockedAudioAppend){const audioStart=blockedAudioAppend.frag.start;(videoAppendEnd>audioStart||videoAppendEnd<this.lastVideoAppendEnd||BufferHelper.isBuffered(videoSb,audioStart))&&this.unblockAudio()}this.lastVideoAppendEnd=videoAppendEnd}}else{const pTime=partOrFrag.start+.05*partOrFrag.duration,vbuffered=videoSb.buffered,vappending=this.currentOp("video");vbuffered.length||vappending?!vappending&&!BufferHelper.isBuffered(videoSb,pTime)&&this.lastVideoAppendEnd<pTime&&this.blockAudio(partOrFrag):this.blockAudio(partOrFrag)}}const fragStart=(part||frag).start,operation={label:`append-${type}`,execute:()=>{var _this$tracks$type2;chunkStats.executeStart=self.performance.now();const sb=null==(_this$tracks$type2=this.tracks[type])?void 0:_this$tracks$type2.buffer;sb&&(checkTimestampOffset?this.updateTimestampOffset(sb,fragStart,.1,type,sn,cc):void 0!==offset&&isFiniteNumber(offset)&&this.updateTimestampOffset(sb,offset,1e-6,type,sn,cc)),this.appendExecutor(data,type)},onStart:()=>{},onComplete:()=>{const end=self.performance.now();chunkStats.executeEnd=chunkStats.end=end,0===fragBuffering.first&&(fragBuffering.first=end),partBuffering&&0===partBuffering.first&&(partBuffering.first=end);const timeRanges={};this.sourceBuffers.forEach((([type,sb])=>{type&&(timeRanges[type]=BufferHelper.getBuffered(sb))})),this.appendErrors[type]=0,"audio"===type||"video"===type?this.appendErrors.audiovideo=0:(this.appendErrors.audio=0,this.appendErrors.video=0),this.hls.trigger(Events.BUFFER_APPENDED,{type,frag,part,chunkMeta,parent:frag.type,timeRanges})},onError:error=>{var _this$media;const event={type:ErrorTypes.MEDIA_ERROR,parent:frag.type,details:ErrorDetails.BUFFER_APPEND_ERROR,sourceBufferName:type,frag,part,chunkMeta,error,err:error,fatal:!1},mediaError=null==(_this$media=this.media)?void 0:_this$media.error;if(error.code===DOMException.QUOTA_EXCEEDED_ERR||"QuotaExceededError"==error.name||"quota"in error)event.details=ErrorDetails.BUFFER_FULL_ERROR;else if(error.code===DOMException.INVALID_STATE_ERR&&this.mediaSourceOpenOrEnded&&!mediaError)event.errorAction=createDoNothingErrorAction(!0);else if("HlsJsTrackRemovedError"===error.name&&0===this.sourceBufferCount)event.errorAction=createDoNothingErrorAction(!0);else{const appendErrorCount=++this.appendErrors[type];this.warn(`Failed ${appendErrorCount}/${this.hls.config.appendErrorMaxRetry} times to append segment in "${type}" sourceBuffer (${mediaError||"no media error"})`),(appendErrorCount>=this.hls.config.appendErrorMaxRetry||mediaError)&&(event.fatal=!0)}this.hls.trigger(Events.ERROR,event)}};this.append(operation,type,this.isPending(this.tracks[type]))}getFlushOp(type,start,end){return this.log(`queuing "${type}" remove ${start}-${end}`),{label:"remove",execute:()=>{this.removeExecutor(type,start,end)},onStart:()=>{},onComplete:()=>{this.hls.trigger(Events.BUFFER_FLUSHED,{type})},onError:error=>{this.warn(`Failed to remove ${start}-${end} from "${type}" SourceBuffer`,error)}}}onBufferFlushing(event,data){const{type,startOffset,endOffset}=data;type?this.append(this.getFlushOp(type,startOffset,endOffset),type):this.sourceBuffers.forEach((([type])=>{type&&this.append(this.getFlushOp(type,startOffset,endOffset),type)}))}onFragParsed(event,data){const{frag,part}=data,buffersAppendedTo=[],elementaryStreams=part?part.elementaryStreams:frag.elementaryStreams;elementaryStreams[ElementaryStreamTypes_AUDIOVIDEO]?buffersAppendedTo.push("audiovideo"):(elementaryStreams[ElementaryStreamTypes_AUDIO]&&buffersAppendedTo.push("audio"),elementaryStreams[ElementaryStreamTypes_VIDEO]&&buffersAppendedTo.push("video"));0===buffersAppendedTo.length&&this.warn(`Fragments must have at least one ElementaryStreamType set. type: ${frag.type} level: ${frag.level} sn: ${frag.sn}`),this.blockBuffers((()=>{const now=self.performance.now();frag.stats.buffering.end=now,part&&(part.stats.buffering.end=now);const stats=part?part.stats:frag.stats;this.hls.trigger(Events.FRAG_BUFFERED,{frag,part,stats,id:frag.type})}),buffersAppendedTo).catch((error=>{this.warn(`Fragment buffered callback ${error}`),this.stepOperationQueue(this.sourceBufferTypes)}))}onFragChanged(event,data){this.trimBuffers()}get bufferedToEnd(){return this.sourceBufferCount>0&&!this.sourceBuffers.some((([type])=>{if(type){const track=this.tracks[type];if(track)return!track.ended||track.ending}return!1}))}onBufferEos(event,data){var _this$overrides;this.sourceBuffers.forEach((([type])=>{if(type){const track=this.tracks[type];data.type&&data.type!==type||(track.ending=!0,track.ended||(track.ended=!0,this.log(`${type} buffer reached EOS`)))}}));const allowEndOfStream=!1!==(null==(_this$overrides=this.overrides)?void 0:_this$overrides.endOfStream);this.sourceBufferCount>0&&!this.sourceBuffers.some((([type])=>{var _this$tracks$type3;return type&&!(null!=(_this$tracks$type3=this.tracks[type])&&_this$tracks$type3.ended)}))?allowEndOfStream?(this.log("Queueing EOS"),this.blockUntilOpen((()=>{this.tracksEnded();const{mediaSource}=this;mediaSource&&"open"===mediaSource.readyState?(this.log("Calling mediaSource.endOfStream()"),mediaSource.endOfStream(),this.hls.trigger(Events.BUFFERED_TO_END,void 0)):mediaSource&&this.log(`Could not call mediaSource.endOfStream(). mediaSource.readyState: ${mediaSource.readyState}`)}))):(this.tracksEnded(),this.hls.trigger(Events.BUFFERED_TO_END,void 0)):"video"===data.type&&this.unblockAudio()}tracksEnded(){this.sourceBuffers.forEach((([type])=>{if(null!==type){const track=this.tracks[type];track&&(track.ending=!1)}}))}onLevelUpdated(event,{details}){details.fragments.length&&(this.details=details,this.updateDuration())}updateDuration(){this.blockUntilOpen((()=>{const durationAndRange=this.getDurationAndRange();durationAndRange&&this.updateMediaSource(durationAndRange)}))}onError(event,data){if(data.details===ErrorDetails.BUFFER_APPEND_ERROR&&data.frag){var _data$errorAction;const nextAutoLevel=null==(_data$errorAction=data.errorAction)?void 0:_data$errorAction.nextAutoLevel;isFiniteNumber(nextAutoLevel)&&nextAutoLevel!==data.frag.level&&this.resetAppendErrors()}}resetAppendErrors(){this.appendErrors={audio:0,video:0,audiovideo:0}}trimBuffers(){const{hls,details,media}=this;if(!media||null===details)return;if(!this.sourceBufferCount)return;const config=hls.config,currentTime=media.currentTime,targetDuration=details.levelTargetDuration,backBufferLength=details.live&&null!==config.liveBackBufferLength?config.liveBackBufferLength:config.backBufferLength;if(isFiniteNumber(backBufferLength)&&backBufferLength>=0){const maxBackBufferLength=Math.max(backBufferLength,targetDuration),targetBackBufferPosition=Math.floor(currentTime/targetDuration)*targetDuration-maxBackBufferLength;this.flushBackBuffer(currentTime,targetDuration,targetBackBufferPosition)}const frontBufferFlushThreshold=config.frontBufferFlushThreshold;if(isFiniteNumber(frontBufferFlushThreshold)&&frontBufferFlushThreshold>0){const frontBufferLength=Math.max(config.maxBufferLength,frontBufferFlushThreshold),maxFrontBufferLength=Math.max(frontBufferLength,targetDuration),targetFrontBufferPosition=Math.floor(currentTime/targetDuration)*targetDuration+maxFrontBufferLength;this.flushFrontBuffer(currentTime,targetDuration,targetFrontBufferPosition)}}flushBackBuffer(currentTime,targetDuration,targetBackBufferPosition){this.sourceBuffers.forEach((([type,sb])=>{if(sb){const buffered=BufferHelper.getBuffered(sb);if(buffered.length>0&&targetBackBufferPosition>buffered.start(0)){var _this$details;this.hls.trigger(Events.BACK_BUFFER_REACHED,{bufferEnd:targetBackBufferPosition});const track=this.tracks[type];if(null!=(_this$details=this.details)&&_this$details.live)this.hls.trigger(Events.LIVE_BACK_BUFFER_REACHED,{bufferEnd:targetBackBufferPosition});else if(null!=track&&track.ended)return void this.log(`Cannot flush ${type} back buffer while SourceBuffer is in ended state`);this.hls.trigger(Events.BUFFER_FLUSHING,{startOffset:0,endOffset:targetBackBufferPosition,type})}}}))}flushFrontBuffer(currentTime,targetDuration,targetFrontBufferPosition){this.sourceBuffers.forEach((([type,sb])=>{if(sb){const buffered=BufferHelper.getBuffered(sb),numBufferedRanges=buffered.length;if(numBufferedRanges<2)return;const bufferStart=buffered.start(numBufferedRanges-1),bufferEnd=buffered.end(numBufferedRanges-1);if(targetFrontBufferPosition>bufferStart||currentTime>=bufferStart&&currentTime<=bufferEnd)return;this.hls.trigger(Events.BUFFER_FLUSHING,{startOffset:bufferStart,endOffset:1/0,type})}}))}getDurationAndRange(){var _this$overrides2;const{details,mediaSource}=this;if(!details||!this.media||"open"!==(null==mediaSource?void 0:mediaSource.readyState))return null;const playlistEnd=details.edge;if(details.live&&this.hls.config.liveDurationInfinity){if(details.fragments.length&&mediaSource.setLiveSeekableRange){const start=Math.max(0,details.fragmentStart);return{duration:1/0,start,end:Math.max(start,playlistEnd)}}return{duration:1/0}}const overrideDuration=null==(_this$overrides2=this.overrides)?void 0:_this$overrides2.duration;if(overrideDuration)return isFiniteNumber(overrideDuration)?{duration:overrideDuration}:null;const mediaDuration=this.media.duration;return playlistEnd>(isFiniteNumber(mediaSource.duration)?mediaSource.duration:0)&&playlistEnd>mediaDuration||!isFiniteNumber(mediaDuration)?{duration:playlistEnd}:null}updateMediaSource({duration,start,end}){const mediaSource=this.mediaSource;this.media&&mediaSource&&"open"===mediaSource.readyState&&(mediaSource.duration!==duration&&(isFiniteNumber(duration)&&this.log(`Updating MediaSource duration to ${duration.toFixed(3)}`),mediaSource.duration=duration),void 0!==start&&void 0!==end&&(this.log(`MediaSource duration is set to ${mediaSource.duration}. Setting seekable range to ${start}-${end}.`),mediaSource.setLiveSeekableRange(start,end)))}get tracksReady(){const pendingTrackCount=this.pendingTrackCount;return pendingTrackCount>0&&(pendingTrackCount>=this.bufferCodecEventsTotal||this.isPending(this.tracks.audiovideo))}checkPendingTracks(){const{bufferCodecEventsTotal,pendingTrackCount,tracks}=this;if(this.log(`checkPendingTracks (pending: ${pendingTrackCount} codec events expected: ${bufferCodecEventsTotal}) ${stringify(tracks)}`),this.tracksReady){var _this$transferData4;const transferredTracks=null==(_this$transferData4=this.transferData)?void 0:_this$transferData4.tracks;transferredTracks&&Object.keys(transferredTracks).length?this.attachTransferred():this.createSourceBuffers()}}bufferCreated(){if(this.sourceBufferCount){const tracks={};this.sourceBuffers.forEach((([type,buffer])=>{if(type){const track=this.tracks[type];tracks[type]={buffer,container:track.container,codec:track.codec,supplemental:track.supplemental,levelCodec:track.levelCodec,id:track.id,metadata:track.metadata}}})),this.hls.trigger(Events.BUFFER_CREATED,{tracks}),this.log(`SourceBuffers created. Running queue: ${this.operationQueue}`),this.sourceBuffers.forEach((([type])=>{this.executeNext(type)}))}else{const error=new Error("could not create source buffer for media codec(s)");this.hls.trigger(Events.ERROR,{type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.BUFFER_INCOMPATIBLE_CODECS_ERROR,fatal:!0,error,reason:error.message})}}createSourceBuffers(){const{tracks,sourceBuffers,mediaSource}=this;if(!mediaSource)throw new Error("createSourceBuffers called when mediaSource was null");for(const trackName in tracks){const type=trackName,track=tracks[type];if(this.isPending(track)){const codec=this.getTrackCodec(track,type),mimeType=`${track.container};codecs=${codec}`;track.codec=codec,this.log(`creating sourceBuffer(${mimeType})${this.currentOp(type)?" Queued":""} ${stringify(track)}`);try{const sb=mediaSource.addSourceBuffer(mimeType),sbIndex=sourceBufferNameToIndex(type),sbTuple=[type,sb];sourceBuffers[sbIndex]=sbTuple,track.buffer=sb}catch(error){var _this$operationQueue;return this.error(`error while trying to add sourceBuffer: ${error.message}`),this.shiftAndExecuteNext(type),null==(_this$operationQueue=this.operationQueue)||_this$operationQueue.removeBlockers(),delete this.tracks[type],void this.hls.trigger(Events.ERROR,{type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.BUFFER_ADD_CODEC_ERROR,fatal:!1,error,sourceBufferName:type,mimeType,parent:track.id})}this.trackSourceBuffer(type,track)}}this.bufferCreated()}getTrackCodec(track,trackName){const supplementalCodec=track.supplemental;let trackCodec=track.codec;supplementalCodec&&("video"===trackName||"audiovideo"===trackName)&&areCodecsMediaSourceSupported(supplementalCodec,"video")&&(trackCodec=function replaceVideoCodec(originalCodecs,newVideoCodec){const codecs=[];if(originalCodecs){const allCodecs=originalCodecs.split(",");for(let i=0;i<allCodecs.length;i++)isCodecType(allCodecs[i],"video")||codecs.push(allCodecs[i])}return newVideoCodec&&codecs.push(newVideoCodec),codecs.join(",")}(trackCodec,supplementalCodec));const codec=pickMostCompleteCodecName(trackCodec,track.levelCodec);return codec?"audio"===trackName.slice(0,5)?getCodecCompatibleName(codec,this.appendSource):codec:""}trackSourceBuffer(type,track){const buffer=track.buffer;if(!buffer)return;const codec=this.getTrackCodec(track,type);this.tracks[type]={buffer,codec,container:track.container,levelCodec:track.levelCodec,supplemental:track.supplemental,metadata:track.metadata,id:track.id,listeners:[]},this.removeBufferListeners(type),this.addBufferListener(type,"updatestart",this.onSBUpdateStart),this.addBufferListener(type,"updateend",this.onSBUpdateEnd),this.addBufferListener(type,"error",this.onSBUpdateError),this.appendSource&&this.addBufferListener(type,"bufferedchange",((type,event)=>{const removedRanges=event.removedRanges;null!=removedRanges&&removedRanges.length&&this.hls.trigger(Events.BUFFER_FLUSHED,{type})}))}get mediaSrc(){var _this$media2,_this$media2$querySel;const media=(null==(_this$media2=this.media)||null==(_this$media2$querySel=_this$media2.querySelector)?void 0:_this$media2$querySel.call(_this$media2,"source"))||this.media;return null==media?void 0:media.src}onSBUpdateStart(type){const operation=this.currentOp(type);operation&&operation.onStart()}onSBUpdateEnd(type){var _this$mediaSource4;if("closed"===(null==(_this$mediaSource4=this.mediaSource)?void 0:_this$mediaSource4.readyState))return void this.resetBuffer(type);const operation=this.currentOp(type);operation&&(operation.onComplete(),this.shiftAndExecuteNext(type))}onSBUpdateError(type,event){var _this$mediaSource5;const error=new Error(`${type} SourceBuffer error. MediaSource readyState: ${null==(_this$mediaSource5=this.mediaSource)?void 0:_this$mediaSource5.readyState}`);this.error(`${error}`,event),this.hls.trigger(Events.ERROR,{type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.BUFFER_APPENDING_ERROR,sourceBufferName:type,error,fatal:!1});const operation=this.currentOp(type);operation&&operation.onError(error)}updateTimestampOffset(sb,timestampOffset,tolerance,type,sn,cc){const delta=timestampOffset-sb.timestampOffset;Math.abs(delta)>=tolerance&&(this.log(`Updating ${type} SourceBuffer timestampOffset to ${timestampOffset} (sn: ${sn} cc: ${cc})`),sb.timestampOffset=timestampOffset)}removeExecutor(type,startOffset,endOffset){const{media,mediaSource}=this,track=this.tracks[type],sb=null==track?void 0:track.buffer;if(!media||!mediaSource||!sb)return this.warn(`Attempting to remove from the ${type} SourceBuffer, but it does not exist`),void this.shiftAndExecuteNext(type);const mediaDuration=isFiniteNumber(media.duration)?media.duration:1/0,msDuration=isFiniteNumber(mediaSource.duration)?mediaSource.duration:1/0,removeStart=Math.max(0,startOffset),removeEnd=Math.min(endOffset,mediaDuration,msDuration);removeEnd>removeStart&&(!track.ending||track.ended)?(track.ended=!1,this.log(`Removing [${removeStart},${removeEnd}] from the ${type} SourceBuffer`),sb.remove(removeStart,removeEnd)):this.shiftAndExecuteNext(type)}appendExecutor(data,type){const track=this.tracks[type],sb=null==track?void 0:track.buffer;if(!sb)throw new HlsJsTrackRemovedError(`Attempting to append to the ${type} SourceBuffer, but it does not exist`);track.ending=!1,track.ended=!1,sb.appendBuffer(data)}blockUntilOpen(callback){if(this.isUpdating()||this.isQueued())this.blockBuffers(callback).catch((error=>{this.warn(`SourceBuffer blocked callback ${error}`),this.stepOperationQueue(this.sourceBufferTypes)}));else try{callback()}catch(error){this.warn(`Callback run without blocking ${this.operationQueue} ${error}`)}}isUpdating(){return this.sourceBuffers.some((([type,sb])=>type&&sb.updating))}isQueued(){return this.sourceBuffers.some((([type])=>type&&!!this.currentOp(type)))}isPending(track){return!!track&&!track.buffer}blockBuffers(onUnblocked,bufferNames=this.sourceBufferTypes){if(!bufferNames.length)return this.log("Blocking operation requested, but no SourceBuffers exist"),Promise.resolve().then(onUnblocked);const{operationQueue}=this,blockingOperations=bufferNames.map((type=>this.appendBlocker(type)));return bufferNames.length>1&&!!this.blockedAudioAppend&&this.unblockAudio(),Promise.all(blockingOperations).then((result=>{operationQueue===this.operationQueue&&(onUnblocked(),this.stepOperationQueue(this.sourceBufferTypes))}))}stepOperationQueue(bufferNames){bufferNames.forEach((type=>{var _this$tracks$type4;const sb=null==(_this$tracks$type4=this.tracks[type])?void 0:_this$tracks$type4.buffer;sb&&!sb.updating&&this.shiftAndExecuteNext(type)}))}append(operation,type,pending){this.operationQueue&&this.operationQueue.append(operation,type,pending)}appendBlocker(type){if(this.operationQueue)return this.operationQueue.appendBlocker(type)}currentOp(type){return this.operationQueue?this.operationQueue.current(type):null}executeNext(type){type&&this.operationQueue&&this.operationQueue.executeNext(type)}shiftAndExecuteNext(type){this.operationQueue&&this.operationQueue.shiftAndExecuteNext(type)}get pendingTrackCount(){return Object.keys(this.tracks).reduce(((acc,type)=>acc+(this.isPending(this.tracks[type])?1:0)),0)}get sourceBufferCount(){return this.sourceBuffers.reduce(((acc,[type])=>acc+(type?1:0)),0)}get sourceBufferTypes(){return this.sourceBuffers.map((([type])=>type)).filter((type=>!!type))}addBufferListener(type,event,fn){const track=this.tracks[type];if(!track)return;const buffer=track.buffer;if(!buffer)return;const listener=fn.bind(this,type);track.listeners.push({event,listener}),buffer.addEventListener(event,listener)}removeBufferListeners(type){const track=this.tracks[type];if(!track)return;const buffer=track.buffer;buffer&&(track.listeners.forEach((l=>{buffer.removeEventListener(l.event,l.listener)})),track.listeners.length=0)}}function removeSourceChildren(node){const sourceChildren=node.querySelectorAll("source");[].slice.call(sourceChildren).forEach((source=>{node.removeChild(source)}))}function sourceBufferNameToIndex(type){return"audio"===type?1:0}class CapLevelController{constructor(hls){this.hls=void 0,this.autoLevelCapping=void 0,this.firstLevel=void 0,this.media=void 0,this.restrictedLevels=void 0,this.timer=void 0,this.clientRect=void 0,this.streamController=void 0,this.hls=hls,this.autoLevelCapping=Number.POSITIVE_INFINITY,this.firstLevel=-1,this.media=null,this.restrictedLevels=[],this.timer=void 0,this.clientRect=null,this.registerListeners()}setStreamController(streamController){this.streamController=streamController}destroy(){this.hls&&this.unregisterListener(),this.timer&&this.stopCapping(),this.media=null,this.clientRect=null,this.hls=this.streamController=null}registerListeners(){const{hls}=this;hls.on(Events.FPS_DROP_LEVEL_CAPPING,this.onFpsDropLevelCapping,this),hls.on(Events.MEDIA_ATTACHING,this.onMediaAttaching,this),hls.on(Events.MANIFEST_PARSED,this.onManifestParsed,this),hls.on(Events.LEVELS_UPDATED,this.onLevelsUpdated,this),hls.on(Events.BUFFER_CODECS,this.onBufferCodecs,this),hls.on(Events.MEDIA_DETACHING,this.onMediaDetaching,this)}unregisterListener(){const{hls}=this;hls.off(Events.FPS_DROP_LEVEL_CAPPING,this.onFpsDropLevelCapping,this),hls.off(Events.MEDIA_ATTACHING,this.onMediaAttaching,this),hls.off(Events.MANIFEST_PARSED,this.onManifestParsed,this),hls.off(Events.LEVELS_UPDATED,this.onLevelsUpdated,this),hls.off(Events.BUFFER_CODECS,this.onBufferCodecs,this),hls.off(Events.MEDIA_DETACHING,this.onMediaDetaching,this)}onFpsDropLevelCapping(event,data){const level=this.hls.levels[data.droppedLevel];this.isLevelAllowed(level)&&this.restrictedLevels.push({bitrate:level.bitrate,height:level.height,width:level.width})}onMediaAttaching(event,data){this.media=data.media instanceof HTMLVideoElement?data.media:null,this.clientRect=null,this.timer&&this.hls.levels.length&&this.detectPlayerSize()}onManifestParsed(event,data){const hls=this.hls;this.restrictedLevels=[],this.firstLevel=data.firstLevel,hls.config.capLevelToPlayerSize&&data.video&&this.startCapping()}onLevelsUpdated(event,data){this.timer&&isFiniteNumber(this.autoLevelCapping)&&this.detectPlayerSize()}onBufferCodecs(event,data){this.hls.config.capLevelToPlayerSize&&data.video&&this.startCapping()}onMediaDetaching(){this.stopCapping(),this.media=null}detectPlayerSize(){if(this.media){if(this.mediaHeight<=0||this.mediaWidth<=0)return void(this.clientRect=null);const levels=this.hls.levels;if(levels.length){const hls=this.hls,maxLevel=this.getMaxLevel(levels.length-1);maxLevel!==this.autoLevelCapping&&hls.logger.log(`Setting autoLevelCapping to ${maxLevel}: ${levels[maxLevel].height}p@${levels[maxLevel].bitrate} for media ${this.mediaWidth}x${this.mediaHeight}`),hls.autoLevelCapping=maxLevel,hls.autoLevelEnabled&&hls.autoLevelCapping>this.autoLevelCapping&&this.streamController&&this.streamController.nextLevelSwitch(),this.autoLevelCapping=hls.autoLevelCapping}}}getMaxLevel(capLevelIndex){const levels=this.hls.levels;if(!levels.length)return-1;const validLevels=levels.filter(((level,index)=>this.isLevelAllowed(level)&&index<=capLevelIndex));return this.clientRect=null,CapLevelController.getMaxLevelByMediaSize(validLevels,this.mediaWidth,this.mediaHeight)}startCapping(){this.timer||(this.autoLevelCapping=Number.POSITIVE_INFINITY,self.clearInterval(this.timer),this.timer=self.setInterval(this.detectPlayerSize.bind(this),1e3),this.detectPlayerSize())}stopCapping(){this.restrictedLevels=[],this.firstLevel=-1,this.autoLevelCapping=Number.POSITIVE_INFINITY,this.timer&&(self.clearInterval(this.timer),this.timer=void 0)}getDimensions(){if(this.clientRect)return this.clientRect;const media=this.media,boundsRect={width:0,height:0};if(media){const clientRect=media.getBoundingClientRect();boundsRect.width=clientRect.width,boundsRect.height=clientRect.height,boundsRect.width||boundsRect.height||(boundsRect.width=clientRect.right-clientRect.left||media.width||0,boundsRect.height=clientRect.bottom-clientRect.top||media.height||0)}return this.clientRect=boundsRect,boundsRect}get mediaWidth(){return this.getDimensions().width*this.contentScaleFactor}get mediaHeight(){return this.getDimensions().height*this.contentScaleFactor}get contentScaleFactor(){let pixelRatio=1;if(!this.hls.config.ignoreDevicePixelRatio)try{pixelRatio=self.devicePixelRatio}catch(e){}return Math.min(pixelRatio,this.hls.config.maxDevicePixelRatio)}isLevelAllowed(level){return!this.restrictedLevels.some((restrictedLevel=>level.bitrate===restrictedLevel.bitrate&&level.width===restrictedLevel.width&&level.height===restrictedLevel.height))}static getMaxLevelByMediaSize(levels,width,height){if(null==levels||!levels.length)return-1;let maxLevelIndex=levels.length-1;const squareSize=Math.max(width,height);for(let i=0;i<levels.length;i+=1){const level=levels[i];if((level.width>=squareSize||level.height>=squareSize)&&(curLevel=level,!(nextLevel=levels[i+1])||curLevel.width!==nextLevel.width||curLevel.height!==nextLevel.height)){maxLevelIndex=i;break}}var curLevel,nextLevel;return maxLevelIndex}}const CmcdObjectType={MANIFEST:"m",AUDIO:"a",VIDEO:"v",MUXED:"av",INIT:"i",CAPTION:"c",TIMED_TEXT:"tt",KEY:"k",OTHER:"o"},CmcdStreamingFormat={HLS:"h"};class SfItem{constructor(value,params){Array.isArray(value)&&(value=value.map((v=>v instanceof SfItem?v:new SfItem(v)))),this.value=value,this.params=params}}const DICT="Dict";function throwError(action,src,type,cause){return new Error(`failed to ${action} "${function format(value){return Array.isArray(value)?JSON.stringify(value):value instanceof Map?"Map{}":value instanceof Set?"Set{}":"object"==typeof value?JSON.stringify(value):String(value)}(src)}" as ${type}`,{cause})}function serializeError(src,type,cause){return throwError("serialize",src,type,cause)}class SfToken{constructor(description){this.description=description}}const BARE_ITEM="Bare Item",BOOLEAN="Boolean";const BYTES="Byte Sequence";function serializeByteSequence(value){if(!1===ArrayBuffer.isView(value))throw serializeError(value,BYTES);return`:${function encodeBase64(binary){return btoa(String.fromCharCode(...binary))}(value)}:`}const INTEGER="Integer";function serializeInteger(value){if(function isInvalidInt(value){return value<-999999999999999||999999999999999<value}(value))throw serializeError(value,INTEGER);return value.toString()}function roundToEven(value,precision){if(value<0)return-roundToEven(-value,precision);const decimalShift=Math.pow(10,precision);if(Math.abs(value*decimalShift%1-.5)<Number.EPSILON){const flooredValue=Math.floor(value*decimalShift);return(flooredValue%2==0?flooredValue:flooredValue+1)/decimalShift}return Math.round(value*decimalShift)/decimalShift}const DECIMAL="Decimal";function serializeDecimal(value){const roundedValue=roundToEven(value,3);if(Math.floor(Math.abs(roundedValue)).toString().length>12)throw serializeError(value,DECIMAL);const stringValue=roundedValue.toString();return stringValue.includes(".")?stringValue:`${stringValue}.0`}const STRING="String",STRING_REGEX=/[\x00-\x1f\x7f]+/;const TOKEN="Token";function serializeToken(token){const value=function symbolToStr(symbol){return symbol.description||symbol.toString().slice(7,-1)}(token);if(!1===/^([a-zA-Z*])([!#$%&'*+\-.^_`|~\w:/]*)$/.test(value))throw serializeError(value,TOKEN);return value}function serializeBareItem(value){switch(typeof value){case"number":if(!isFiniteNumber(value))throw serializeError(value,BARE_ITEM);return Number.isInteger(value)?serializeInteger(value):serializeDecimal(value);case"string":return function serializeString(value){if(STRING_REGEX.test(value))throw serializeError(value,STRING);return`"${value.replace(/\\/g,"\\\\").replace(/"/g,'\\"')}"`}(value);case"symbol":return serializeToken(value);case"boolean":return function serializeBoolean(value){if("boolean"!=typeof value)throw serializeError(value,BOOLEAN);return value?"?1":"?0"}(value);case"object":if(value instanceof Date)return function serializeDate(value){return`@${serializeInteger(value.getTime()/1e3)}`}(value);if(value instanceof Uint8Array)return serializeByteSequence(value);if(value instanceof SfToken)return serializeToken(value);default:throw serializeError(value,BARE_ITEM)}}const KEY="Key";function serializeKey(value){if(!1===/^[a-z*][a-z0-9\-_.*]*$/.test(value))throw serializeError(value,KEY);return value}function serializeParams(params){return null==params?"":Object.entries(params).map((([key,value])=>!0===value?`;${serializeKey(key)}`:`;${serializeKey(key)}=${serializeBareItem(value)}`)).join("")}function serializeItem(value){return value instanceof SfItem?`${serializeBareItem(value.value)}${serializeParams(value.params)}`:serializeBareItem(value)}function serializeDict(dict,options={whitespace:!0}){if("object"!=typeof dict||null==dict)throw serializeError(dict,DICT);const entries=dict instanceof Map?dict.entries():Object.entries(dict),optionalWhiteSpace=(null==options?void 0:options.whitespace)?" ":"";return Array.from(entries).map((([key,item])=>{item instanceof SfItem==!1&&(item=new SfItem(item));let output=serializeKey(key);return!0===item.value?output+=serializeParams(item.params):(output+="=",Array.isArray(item.value)?output+=function serializeInnerList(value){return`(${value.value.map(serializeItem).join(" ")})${serializeParams(value.params)}`}(item):output+=serializeItem(item)),output})).join(`,${optionalWhiteSpace}`)}function encodeSfDict(value,options){return serializeDict(value,options)}const CMCD_REQUEST="CMCD-Request",CMCD_HEADER_MAP={br:"CMCD-Object",ab:"CMCD-Object",d:"CMCD-Object",ot:"CMCD-Object",tb:"CMCD-Object",tpb:"CMCD-Object",lb:"CMCD-Object",tab:"CMCD-Object",lab:"CMCD-Object",url:"CMCD-Object",pb:CMCD_REQUEST,bl:CMCD_REQUEST,tbl:CMCD_REQUEST,dl:CMCD_REQUEST,ltc:CMCD_REQUEST,mtp:CMCD_REQUEST,nor:CMCD_REQUEST,nrr:CMCD_REQUEST,rc:CMCD_REQUEST,sn:CMCD_REQUEST,sta:CMCD_REQUEST,su:CMCD_REQUEST,ttfb:CMCD_REQUEST,ttfbb:CMCD_REQUEST,ttlb:CMCD_REQUEST,cmsdd:CMCD_REQUEST,cmsds:CMCD_REQUEST,smrt:CMCD_REQUEST,df:CMCD_REQUEST,cs:CMCD_REQUEST,ts:CMCD_REQUEST,cid:"CMCD-Session",pr:"CMCD-Session",sf:"CMCD-Session",sid:"CMCD-Session",st:"CMCD-Session",v:"CMCD-Session",msd:"CMCD-Session",bs:"CMCD-Status",bsd:"CMCD-Status",cdn:"CMCD-Status",rtp:"CMCD-Status",bg:"CMCD-Status",pt:"CMCD-Status",ec:"CMCD-Status",e:"CMCD-Status"},CmcdHeaderField={REQUEST:CMCD_REQUEST};function groupCmcdHeaders(cmcd,customHeaderMap){const result={};if(!cmcd)return result;const keys=Object.keys(cmcd),custom=customHeaderMap?function createHeaderMap(headerMap){return Object.keys(headerMap).reduce(((acc,field)=>{var _a;return null===(_a=headerMap[field])||void 0===_a||_a.forEach((key=>acc[key]=field)),acc}),{})}(customHeaderMap):{};return keys.reduce(((acc,key)=>{var _a;const field=CMCD_HEADER_MAP[key]||custom[key]||CmcdHeaderField.REQUEST;return(null!==(_a=acc[field])&&void 0!==_a?_a:acc[field]={})[key]=cmcd[key],acc}),result)}const CMCD_EVENT_MODE="event";const toRounded=value=>Math.round(value),toUrlSafe=(value,options)=>Array.isArray(value)?value.map((item=>toUrlSafe(item,options))):value instanceof SfItem&&"string"==typeof value.value?new SfItem(toUrlSafe(value.value,options),value.params):(options.baseUrl&&(value=function urlToRelativePath(url,base){const to=new URL(url),from=new URL(base);if(to.origin!==from.origin)return url;const toPath=to.pathname.split("/").slice(1),fromPath=from.pathname.split("/").slice(1,-1);for(;toPath[0]===fromPath[0];)toPath.shift(),fromPath.shift();for(;fromPath.length;)fromPath.shift(),toPath.unshift("..");return toPath.join("/")+to.search+to.hash}(value,options.baseUrl)),1===options.version?encodeURIComponent(value):value),toHundred=value=>100*toRounded(value/100),CMCD_FORMATTER_MAP={br:toRounded,d:toRounded,bl:toHundred,dl:toHundred,mtp:toHundred,nor:(value,options)=>{let norValue=value;return options.version>=2&&(value instanceof SfItem&&"string"==typeof value.value?norValue=new SfItem([value]):"string"==typeof value&&(norValue=[value])),toUrlSafe(norValue,options)},rtp:toHundred,tb:toRounded},CMCD_REQUEST_MODE="request",CMCD_RESPONSE_MODE="response",CMCD_COMMON_KEYS=["ab","bg","bl","br","bs","bsd","cdn","cid","cs","df","ec","lab","lb","ltc","msd","mtp","pb","pr","pt","sf","sid","sn","st","sta","tab","tb","tbl","tpb","ts","v"],CMCD_EVENT_KEYS=["e"],CUSTOM_KEY_REGEX=/^[a-zA-Z0-9-.]+-[a-zA-Z0-9-.]+$/;function isCmcdCustomKey(key){return CUSTOM_KEY_REGEX.test(key)}const CMCD_REQUEST_KEYS=["d","dl","nor","ot","rtp","su"];const CMCD_RESPONSE_KEYS=["cmsdd","cmsds","rc","smrt","ttfb","ttfbb","ttlb","url"];const CMCD_V1_KEYS=["bl","br","bs","cid","d","dl","mtp","nor","nrr","ot","pr","rtp","sf","sid","st","su","tb","v"];function isCmcdV1Key(key){return CMCD_V1_KEYS.includes(key)||isCmcdCustomKey(key)}const filterMap={[CMCD_RESPONSE_MODE]:function isCmcdResponseKey(key){return CMCD_COMMON_KEYS.includes(key)||CMCD_REQUEST_KEYS.includes(key)||CMCD_RESPONSE_KEYS.includes(key)||isCmcdCustomKey(key)},[CMCD_EVENT_MODE]:function isCmcdEventKey(key){return CMCD_COMMON_KEYS.includes(key)||CMCD_EVENT_KEYS.includes(key)||isCmcdCustomKey(key)},[CMCD_REQUEST_MODE]:function isCmcdRequestKey(key){return CMCD_COMMON_KEYS.includes(key)||CMCD_REQUEST_KEYS.includes(key)||isCmcdCustomKey(key)}};function prepareCmcdData(obj,options={}){const results={};if(null==obj||"object"!=typeof obj)return results;const version=options.version||obj.v||1,reportingMode=options.reportingMode||CMCD_REQUEST_MODE,keyFilter=1===version?isCmcdV1Key:filterMap[reportingMode];let keys=Object.keys(obj).filter(keyFilter);const filter=options.filter;"function"==typeof filter&&(keys=keys.filter(filter));const needsTimestamp=reportingMode===CMCD_RESPONSE_MODE||reportingMode===CMCD_EVENT_MODE;needsTimestamp&&!keys.includes("ts")&&keys.push("ts"),version>1&&!keys.includes("v")&&keys.push("v");const formatters=_extends({},CMCD_FORMATTER_MAP,options.formatters),formatterOptions={version,reportingMode,baseUrl:options.baseUrl};return keys.sort().forEach((key=>{let value=obj[key];const formatter=formatters[key];if("function"==typeof formatter&&(value=formatter(value,formatterOptions)),"v"===key){if(1===version)return;value=version}"pr"==key&&1===value||(needsTimestamp&&"ts"===key&&!isFiniteNumber(value)&&(value=Date.now()),function isValid(value){return"number"==typeof value?isFiniteNumber(value):null!=value&&""!==value&&!1!==value}(value)&&(function isTokenField(key){return["ot","sf","st","e","sta"].includes(key)}(key)&&"string"==typeof value&&(value=new SfToken(value)),results[key]=value))})),results}function appendCmcdHeaders(headers,cmcd,options){return _extends(headers,function toCmcdHeaders(cmcd,options={}){const result={};if(!cmcd)return result;const shards=groupCmcdHeaders(prepareCmcdData(cmcd,options),null==options?void 0:options.customHeaderMap);return Object.entries(shards).reduce(((acc,[field,value])=>{const shard=encodeSfDict(value,{whitespace:!1});return shard&&(acc[field]=shard),acc}),result)}(cmcd,options))}const CMCD_PARAM="CMCD";function toCmcdUrl(cmcd,options={}){if(!cmcd)return"";const params=function encodeCmcd(cmcd,options={}){return cmcd?encodeSfDict(prepareCmcdData(cmcd,options),{whitespace:!1}):""}(cmcd,options);return encodeURIComponent(params)}const REGEX=/CMCD=[^&#]+/;function appendCmcdQuery(url,cmcd,options){const query=function toCmcdQuery(cmcd,options={}){if(!cmcd)return"";const value=toCmcdUrl(cmcd,options);return`${CMCD_PARAM}=${value}`}(cmcd,options);if(!query)return url;if(REGEX.test(url))return url.replace(REGEX,query);const separator=url.includes("?")?"&":"?";return`${url}${separator}${query}`}class CMCDController{constructor(hls){this.hls=void 0,this.config=void 0,this.media=void 0,this.sid=void 0,this.cid=void 0,this.useHeaders=!1,this.includeKeys=void 0,this.initialized=!1,this.starved=!1,this.buffering=!0,this.audioBuffer=void 0,this.videoBuffer=void 0,this.onWaiting=()=>{this.initialized&&(this.starved=!0),this.buffering=!0},this.onPlaying=()=>{this.initialized||(this.initialized=!0),this.buffering=!1},this.applyPlaylistData=context=>{try{this.apply(context,{ot:CmcdObjectType.MANIFEST,su:!this.initialized})}catch(error){this.hls.logger.warn("Could not generate manifest CMCD data.",error)}},this.applyFragmentData=context=>{try{const{frag,part}=context,level=this.hls.levels[frag.level],ot=this.getObjectType(frag),data={d:1e3*(part||frag).duration,ot};ot!==CmcdObjectType.VIDEO&&ot!==CmcdObjectType.AUDIO&&ot!=CmcdObjectType.MUXED||(data.br=level.bitrate/1e3,data.tb=this.getTopBandwidth(ot)/1e3,data.bl=this.getBufferLength(ot));const next=part?this.getNextPart(part):this.getNextFrag(frag);null!=next&&next.url&&next.url!==frag.url&&(data.nor=next.url),this.apply(context,data)}catch(error){this.hls.logger.warn("Could not generate segment CMCD data.",error)}},this.hls=hls;const config=this.config=hls.config,{cmcd}=config;null!=cmcd&&(config.pLoader=this.createPlaylistLoader(),config.fLoader=this.createFragmentLoader(),this.sid=cmcd.sessionId||hls.sessionId,this.cid=cmcd.contentId,this.useHeaders=!0===cmcd.useHeaders,this.includeKeys=cmcd.includeKeys,this.registerListeners())}registerListeners(){const hls=this.hls;hls.on(Events.MEDIA_ATTACHED,this.onMediaAttached,this),hls.on(Events.MEDIA_DETACHED,this.onMediaDetached,this),hls.on(Events.BUFFER_CREATED,this.onBufferCreated,this)}unregisterListeners(){const hls=this.hls;hls.off(Events.MEDIA_ATTACHED,this.onMediaAttached,this),hls.off(Events.MEDIA_DETACHED,this.onMediaDetached,this),hls.off(Events.BUFFER_CREATED,this.onBufferCreated,this)}destroy(){this.unregisterListeners(),this.onMediaDetached(),this.hls=this.config=this.audioBuffer=this.videoBuffer=null,this.onWaiting=this.onPlaying=this.media=null}onMediaAttached(event,data){this.media=data.media,this.media.addEventListener("waiting",this.onWaiting),this.media.addEventListener("playing",this.onPlaying)}onMediaDetached(){this.media&&(this.media.removeEventListener("waiting",this.onWaiting),this.media.removeEventListener("playing",this.onPlaying),this.media=null)}onBufferCreated(event,data){var _data$tracks$audio,_data$tracks$video;this.audioBuffer=null==(_data$tracks$audio=data.tracks.audio)?void 0:_data$tracks$audio.buffer,this.videoBuffer=null==(_data$tracks$video=data.tracks.video)?void 0:_data$tracks$video.buffer}createData(){var _this$media;return{v:1,sf:CmcdStreamingFormat.HLS,sid:this.sid,cid:this.cid,pr:null==(_this$media=this.media)?void 0:_this$media.playbackRate,mtp:this.hls.bandwidthEstimate/1e3}}apply(context,data={}){_extends(data,this.createData());const isVideo=data.ot===CmcdObjectType.INIT||data.ot===CmcdObjectType.VIDEO||data.ot===CmcdObjectType.MUXED;this.starved&&isVideo&&(data.bs=!0,data.su=!0,this.starved=!1),null==data.su&&(data.su=this.buffering);const{includeKeys}=this;includeKeys&&(data=Object.keys(data).reduce(((acc,key)=>(includeKeys.includes(key)&&(acc[key]=data[key]),acc)),{}));const options={baseUrl:context.url};this.useHeaders?(context.headers||(context.headers={}),appendCmcdHeaders(context.headers,data,options)):context.url=appendCmcdQuery(context.url,data,options)}getNextFrag(fragment){var _this$hls$levels$frag;const levelDetails=null==(_this$hls$levels$frag=this.hls.levels[fragment.level])?void 0:_this$hls$levels$frag.details;if(levelDetails){const index=fragment.sn-levelDetails.startSN;return levelDetails.fragments[index+1]}}getNextPart(part){var _this$hls$levels$frag2;const{index,fragment}=part,partList=null==(_this$hls$levels$frag2=this.hls.levels[fragment.level])||null==(_this$hls$levels$frag2=_this$hls$levels$frag2.details)?void 0:_this$hls$levels$frag2.partList;if(partList){const{sn}=fragment;for(let i=partList.length-1;i>=0;i--){const p=partList[i];if(p.index===index&&p.fragment.sn===sn)return partList[i+1]}}}getObjectType(fragment){const{type}=fragment;return"subtitle"===type?CmcdObjectType.TIMED_TEXT:"initSegment"===fragment.sn?CmcdObjectType.INIT:"audio"===type?CmcdObjectType.AUDIO:"main"===type?this.hls.audioTracks.length?CmcdObjectType.VIDEO:CmcdObjectType.MUXED:void 0}getTopBandwidth(type){let levels,bitrate=0;const hls=this.hls;if(type===CmcdObjectType.AUDIO)levels=hls.audioTracks;else{const max=hls.maxAutoLevel,len=max>-1?max+1:hls.levels.length;levels=hls.levels.slice(0,len)}return levels.forEach((level=>{level.bitrate>bitrate&&(bitrate=level.bitrate)})),bitrate>0?bitrate:NaN}getBufferLength(type){const media=this.media,buffer=type===CmcdObjectType.AUDIO?this.audioBuffer:this.videoBuffer;if(!buffer||!media)return NaN;return 1e3*BufferHelper.bufferInfo(buffer,media.currentTime,this.config.maxBufferHole).len}createPlaylistLoader(){const{pLoader}=this.config,apply=this.applyPlaylistData,Ctor=pLoader||this.config.loader;return class CmcdPlaylistLoader{constructor(config){this.loader=void 0,this.loader=new Ctor(config)}get stats(){return this.loader.stats}get context(){return this.loader.context}destroy(){this.loader.destroy()}abort(){this.loader.abort()}load(context,config,callbacks){apply(context),this.loader.load(context,config,callbacks)}}}createFragmentLoader(){const{fLoader}=this.config,apply=this.applyFragmentData,Ctor=fLoader||this.config.loader;return class CmcdFragmentLoader{constructor(config){this.loader=void 0,this.loader=new Ctor(config)}get stats(){return this.loader.stats}get context(){return this.loader.context}destroy(){this.loader.destroy()}abort(){this.loader.abort()}load(context,config,callbacks){apply(context),this.loader.load(context,config,callbacks)}}}}class ContentSteeringController extends Logger{constructor(hls){super("content-steering",hls.logger),this.hls=void 0,this.loader=null,this.uri=null,this.pathwayId=".",this._pathwayPriority=null,this.timeToLoad=300,this.reloadTimer=-1,this.updated=0,this.started=!1,this.enabled=!0,this.levels=null,this.audioTracks=null,this.subtitleTracks=null,this.penalizedPathways={},this.hls=hls,this.registerListeners()}registerListeners(){const hls=this.hls;hls.on(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.on(Events.MANIFEST_LOADED,this.onManifestLoaded,this),hls.on(Events.MANIFEST_PARSED,this.onManifestParsed,this),hls.on(Events.ERROR,this.onError,this)}unregisterListeners(){const hls=this.hls;hls&&(hls.off(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.off(Events.MANIFEST_LOADED,this.onManifestLoaded,this),hls.off(Events.MANIFEST_PARSED,this.onManifestParsed,this),hls.off(Events.ERROR,this.onError,this))}pathways(){return(this.levels||[]).reduce(((pathways,level)=>(-1===pathways.indexOf(level.pathwayId)&&pathways.push(level.pathwayId),pathways)),[])}get pathwayPriority(){return this._pathwayPriority}set pathwayPriority(pathwayPriority){this.updatePathwayPriority(pathwayPriority)}startLoad(){if(this.started=!0,this.clearTimeout(),this.enabled&&this.uri){if(this.updated){const ttl=1e3*this.timeToLoad-(performance.now()-this.updated);if(ttl>0)return void this.scheduleRefresh(this.uri,ttl)}this.loadSteeringManifest(this.uri)}}stopLoad(){this.started=!1,this.loader&&(this.loader.destroy(),this.loader=null),this.clearTimeout()}clearTimeout(){-1!==this.reloadTimer&&(self.clearTimeout(this.reloadTimer),this.reloadTimer=-1)}destroy(){this.unregisterListeners(),this.stopLoad(),this.hls=null,this.levels=this.audioTracks=this.subtitleTracks=null}removeLevel(levelToRemove){const levels=this.levels;levels&&(this.levels=levels.filter((level=>level!==levelToRemove)))}onManifestLoading(){this.stopLoad(),this.enabled=!0,this.timeToLoad=300,this.updated=0,this.uri=null,this.pathwayId=".",this.levels=this.audioTracks=this.subtitleTracks=null}onManifestLoaded(event,data){const{contentSteering}=data;null!==contentSteering&&(this.pathwayId=contentSteering.pathwayId,this.uri=contentSteering.uri,this.started&&this.startLoad())}onManifestParsed(event,data){this.audioTracks=data.audioTracks,this.subtitleTracks=data.subtitleTracks}onError(event,data){const{errorAction}=data;if((null==errorAction?void 0:errorAction.action)===NetworkErrorAction.SendAlternateToPenaltyBox&&errorAction.flags===ErrorActionFlags.MoveAllAlternatesMatchingHost){const levels=this.levels;let pathwayPriority=this._pathwayPriority,errorPathway=this.pathwayId;if(data.context){const{groupId,pathwayId,type}=data.context;groupId&&levels?errorPathway=this.getPathwayForGroupId(groupId,type,errorPathway):pathwayId&&(errorPathway=pathwayId)}errorPathway in this.penalizedPathways||(this.penalizedPathways[errorPathway]=performance.now()),!pathwayPriority&&levels&&(pathwayPriority=this.pathways()),pathwayPriority&&pathwayPriority.length>1&&(this.updatePathwayPriority(pathwayPriority),errorAction.resolved=this.pathwayId!==errorPathway),data.details!==ErrorDetails.BUFFER_APPEND_ERROR||data.fatal?errorAction.resolved||this.warn(`Could not resolve ${data.details} ("${data.error.message}") with content-steering for Pathway: ${errorPathway} levels: ${levels?levels.length:levels} priorities: ${stringify(pathwayPriority)} penalized: ${stringify(this.penalizedPathways)}`):errorAction.resolved=!0}}filterParsedLevels(levels){this.levels=levels;let pathwayLevels=this.getLevelsForPathway(this.pathwayId);if(0===pathwayLevels.length){const pathwayId=levels[0].pathwayId;this.log(`No levels found in Pathway ${this.pathwayId}. Setting initial Pathway to "${pathwayId}"`),pathwayLevels=this.getLevelsForPathway(pathwayId),this.pathwayId=pathwayId}return pathwayLevels.length!==levels.length&&this.log(`Found ${pathwayLevels.length}/${levels.length} levels in Pathway "${this.pathwayId}"`),pathwayLevels}getLevelsForPathway(pathwayId){return null===this.levels?[]:this.levels.filter((level=>pathwayId===level.pathwayId))}updatePathwayPriority(pathwayPriority){let levels;this._pathwayPriority=pathwayPriority;const penalizedPathways=this.penalizedPathways,now=performance.now();Object.keys(penalizedPathways).forEach((pathwayId=>{now-penalizedPathways[pathwayId]>3e5&&delete penalizedPathways[pathwayId]}));for(let i=0;i<pathwayPriority.length;i++){const pathwayId=pathwayPriority[i];if(pathwayId in penalizedPathways)continue;if(pathwayId===this.pathwayId)return;const selectedIndex=this.hls.nextLoadLevel,selectedLevel=this.hls.levels[selectedIndex];if(levels=this.getLevelsForPathway(pathwayId),levels.length>0){this.log(`Setting Pathway to "${pathwayId}"`),this.pathwayId=pathwayId,reassignFragmentLevelIndexes(levels),this.hls.trigger(Events.LEVELS_UPDATED,{levels});const levelAfterChange=this.hls.levels[selectedIndex];selectedLevel&&levelAfterChange&&this.levels&&(levelAfterChange.attrs["STABLE-VARIANT-ID"]!==selectedLevel.attrs["STABLE-VARIANT-ID"]&&levelAfterChange.bitrate!==selectedLevel.bitrate&&this.log(`Unstable Pathways change from bitrate ${selectedLevel.bitrate} to ${levelAfterChange.bitrate}`),this.hls.nextLoadLevel=selectedIndex);break}}}getPathwayForGroupId(groupId,type,defaultPathway){const levels=this.getLevelsForPathway(defaultPathway).concat(this.levels||[]);for(let i=0;i<levels.length;i++)if(type===PlaylistContextType_AUDIO_TRACK&&levels[i].hasAudioGroup(groupId)||type===PlaylistContextType_SUBTITLE_TRACK&&levels[i].hasSubtitleGroup(groupId))return levels[i].pathwayId;return defaultPathway}clonePathways(pathwayClones){const levels=this.levels;if(!levels)return;const audioGroupCloneMap={},subtitleGroupCloneMap={};pathwayClones.forEach((pathwayClone=>{const{ID:cloneId,"BASE-ID":baseId,"URI-REPLACEMENT":uriReplacement}=pathwayClone;if(levels.some((level=>level.pathwayId===cloneId)))return;const clonedVariants=this.getLevelsForPathway(baseId).map((baseLevel=>{const attributes=new AttrList(baseLevel.attrs);attributes["PATHWAY-ID"]=cloneId;const clonedAudioGroupId=attributes.AUDIO&&`${attributes.AUDIO}_clone_${cloneId}`,clonedSubtitleGroupId=attributes.SUBTITLES&&`${attributes.SUBTITLES}_clone_${cloneId}`;clonedAudioGroupId&&(audioGroupCloneMap[attributes.AUDIO]=clonedAudioGroupId,attributes.AUDIO=clonedAudioGroupId),clonedSubtitleGroupId&&(subtitleGroupCloneMap[attributes.SUBTITLES]=clonedSubtitleGroupId,attributes.SUBTITLES=clonedSubtitleGroupId);const url=performUriReplacement(baseLevel.uri,attributes["STABLE-VARIANT-ID"],"PER-VARIANT-URIS",uriReplacement),clonedLevel=new Level({attrs:attributes,audioCodec:baseLevel.audioCodec,bitrate:baseLevel.bitrate,height:baseLevel.height,name:baseLevel.name,url,videoCodec:baseLevel.videoCodec,width:baseLevel.width});if(baseLevel.audioGroups)for(let i=1;i<baseLevel.audioGroups.length;i++)clonedLevel.addGroupId("audio",`${baseLevel.audioGroups[i]}_clone_${cloneId}`);if(baseLevel.subtitleGroups)for(let i=1;i<baseLevel.subtitleGroups.length;i++)clonedLevel.addGroupId("text",`${baseLevel.subtitleGroups[i]}_clone_${cloneId}`);return clonedLevel}));levels.push(...clonedVariants),cloneRenditionGroups(this.audioTracks,audioGroupCloneMap,uriReplacement,cloneId),cloneRenditionGroups(this.subtitleTracks,subtitleGroupCloneMap,uriReplacement,cloneId)}))}loadSteeringManifest(uri){const config=this.hls.config,Loader=config.loader;let url;this.loader&&this.loader.destroy(),this.loader=new Loader(config);try{url=new self.URL(uri)}catch(error){return this.enabled=!1,void this.log(`Failed to parse Steering Manifest URI: ${uri}`)}if("data:"!==url.protocol){const throughput=0|(this.hls.bandwidthEstimate||config.abrEwmaDefaultEstimate);url.searchParams.set("_HLS_pathway",this.pathwayId),url.searchParams.set("_HLS_throughput",""+throughput)}const context={responseType:"json",url:url.href},loadPolicy=config.steeringManifestLoadPolicy.default,legacyRetryCompatibility=loadPolicy.errorRetry||loadPolicy.timeoutRetry||{},loaderConfig={loadPolicy,timeout:loadPolicy.maxLoadTimeMs,maxRetry:legacyRetryCompatibility.maxNumRetry||0,retryDelay:legacyRetryCompatibility.retryDelayMs||0,maxRetryDelay:legacyRetryCompatibility.maxRetryDelayMs||0},callbacks={onSuccess:(response,stats,context,networkDetails)=>{this.log(`Loaded steering manifest: "${url}"`);const steeringData=response.data;if(1!==(null==steeringData?void 0:steeringData.VERSION))return void this.log(`Steering VERSION ${steeringData.VERSION} not supported!`);this.updated=performance.now(),this.timeToLoad=steeringData.TTL;const{"RELOAD-URI":reloadUri,"PATHWAY-CLONES":pathwayClones,"PATHWAY-PRIORITY":pathwayPriority}=steeringData;if(reloadUri)try{this.uri=new self.URL(reloadUri,url).href}catch(error){return this.enabled=!1,void this.log(`Failed to parse Steering Manifest RELOAD-URI: ${reloadUri}`)}this.scheduleRefresh(this.uri||context.url),pathwayClones&&this.clonePathways(pathwayClones);const loadedSteeringData={steeringManifest:steeringData,url:url.toString()};this.hls.trigger(Events.STEERING_MANIFEST_LOADED,loadedSteeringData),pathwayPriority&&this.updatePathwayPriority(pathwayPriority)},onError:(error,context,networkDetails,stats)=>{if(this.log(`Error loading steering manifest: ${error.code} ${error.text} (${context.url})`),this.stopLoad(),410===error.code)return this.enabled=!1,void this.log(`Steering manifest ${context.url} no longer available`);let ttl=1e3*this.timeToLoad;if(429!==error.code)this.scheduleRefresh(this.uri||context.url,ttl);else{const loader=this.loader;if("function"==typeof(null==loader?void 0:loader.getResponseHeader)){const retryAfter=loader.getResponseHeader("Retry-After");retryAfter&&(ttl=1e3*parseFloat(retryAfter))}this.log(`Steering manifest ${context.url} rate limited`)}},onTimeout:(stats,context,networkDetails)=>{this.log(`Timeout loading steering manifest (${context.url})`),this.scheduleRefresh(this.uri||context.url)}};this.log(`Requesting steering manifest: ${url}`),this.loader.load(context,loaderConfig,callbacks)}scheduleRefresh(uri,ttlMs=1e3*this.timeToLoad){this.clearTimeout(),this.reloadTimer=self.setTimeout((()=>{var _this$hls;const media=null==(_this$hls=this.hls)?void 0:_this$hls.media;!media||media.ended?this.scheduleRefresh(uri,1e3*this.timeToLoad):this.loadSteeringManifest(uri)}),ttlMs)}}function cloneRenditionGroups(tracks,groupCloneMap,uriReplacement,cloneId){tracks&&Object.keys(groupCloneMap).forEach((audioGroupId=>{const clonedTracks=tracks.filter((track=>track.groupId===audioGroupId)).map((track=>{const clonedTrack=_extends({},track);return clonedTrack.details=void 0,clonedTrack.attrs=new AttrList(clonedTrack.attrs),clonedTrack.url=clonedTrack.attrs.URI=performUriReplacement(track.url,track.attrs["STABLE-RENDITION-ID"],"PER-RENDITION-URIS",uriReplacement),clonedTrack.groupId=clonedTrack.attrs["GROUP-ID"]=groupCloneMap[audioGroupId],clonedTrack.attrs["PATHWAY-ID"]=cloneId,clonedTrack}));tracks.push(...clonedTracks)}))}function performUriReplacement(uri,stableId,perOptionKey,uriReplacement){const{HOST:host,PARAMS:params,[perOptionKey]:perOptionUris}=uriReplacement;let perVariantUri;stableId&&(perVariantUri=null==perOptionUris?void 0:perOptionUris[stableId],perVariantUri&&(uri=perVariantUri));const url=new self.URL(uri);return host&&!perVariantUri&&(url.host=host),params&&Object.keys(params).sort().forEach((key=>{key&&url.searchParams.set(key,params[key])})),url.href}function addEventListener(el,type,listener){removeEventListener(el,type,listener),el.addEventListener(type,listener)}function removeEventListener(el,type,listener){el.removeEventListener(type,listener)}class EMEController extends Logger{constructor(hls){super("eme",hls.logger),this.hls=void 0,this.config=void 0,this.media=null,this.keyFormatPromise=null,this.keySystemAccessPromises={},this._requestLicenseFailureCount=0,this.mediaKeySessions=[],this.keyIdToKeySessionPromise={},this.mediaKeys=null,this.setMediaKeysQueue=EMEController.CDMCleanupPromise?[EMEController.CDMCleanupPromise]:[],this.onMediaEncrypted=event=>{const{initDataType,initData}=event,logMessage=`"${event.type}" event: init data type: "${initDataType}"`;if(this.debug(logMessage),null!==initData){if(!this.keyFormatPromise){let keySystems=Object.keys(this.keySystemAccessPromises);keySystems.length||(keySystems=getKeySystemsForConfig(this.config));const keyFormats=keySystems.map(keySystemDomainToKeySystemFormat).filter((k=>!!k));this.keyFormatPromise=this.getKeyFormatPromise(keyFormats)}this.keyFormatPromise.then((keySystemFormat=>{const keySystem=keySystemFormatToKeySystemDomain(keySystemFormat);if("sinf"!==initDataType||keySystem!==KeySystems.FAIRPLAY)return void this.log(`Ignoring "${event.type}" event with init data type: "${initDataType}" for selected key-system ${keySystem}`);let keyId;try{const json=bin2str(new Uint8Array(initData)),tenc=parseSinf(base64Decode(JSON.parse(json).sinf));if(!tenc)throw new Error("'schm' box missing or not cbcs/cenc with schi > tenc");keyId=new Uint8Array(tenc.subarray(8,24))}catch(error){return void this.warn(`${logMessage} Failed to parse sinf: ${error}`)}const keyIdHex=Hex_hexDump(keyId),{keyIdToKeySessionPromise,mediaKeySessions}=this;let keySessionContextPromise=keyIdToKeySessionPromise[keyIdHex];for(let i=0;i<mediaKeySessions.length;i++){const keyContext=mediaKeySessions[i],decryptdata=keyContext.decryptdata;if(!decryptdata.keyId)continue;const oldKeyIdHex=Hex_hexDump(decryptdata.keyId);if(keyIdHex===oldKeyIdHex||-1!==decryptdata.uri.replace(/-/g,"").indexOf(keyIdHex)){if(keySessionContextPromise=keyIdToKeySessionPromise[oldKeyIdHex],!keySessionContextPromise)continue;if(decryptdata.pssh)break;delete keyIdToKeySessionPromise[oldKeyIdHex],decryptdata.pssh=new Uint8Array(initData),decryptdata.keyId=keyId,keySessionContextPromise=keyIdToKeySessionPromise[keyIdHex]=keySessionContextPromise.then((()=>this.generateRequestWithPreferredKeySession(keyContext,initDataType,initData,"encrypted-event-key-match"))),keySessionContextPromise.catch((error=>this.handleError(error)));break}}keySessionContextPromise||this.handleError(new Error(`Key ID ${keyIdHex} not encountered in playlist. Key-system sessions ${mediaKeySessions.length}.`))})).catch((error=>this.handleError(error)))}},this.onWaitingForKey=event=>{this.log(`"${event.type}" event`)},this.hls=hls,this.config=hls.config,this.registerListeners()}destroy(){this.onDestroying(),this.onMediaDetached();const config=this.config;config.requestMediaKeySystemAccessFunc=null,config.licenseXhrSetup=config.licenseResponseCallback=void 0,config.drmSystems=config.drmSystemOptions={},this.hls=this.config=this.keyIdToKeySessionPromise=null,this.onWaitingForKey=null}registerListeners(){this.hls.on(Events.MEDIA_ATTACHED,this.onMediaAttached,this),this.hls.on(Events.MEDIA_DETACHED,this.onMediaDetached,this),this.hls.on(Events.MANIFEST_LOADING,this.onManifestLoading,this),this.hls.on(Events.MANIFEST_LOADED,this.onManifestLoaded,this),this.hls.on(Events.DESTROYING,this.onDestroying,this)}unregisterListeners(){this.hls.off(Events.MEDIA_ATTACHED,this.onMediaAttached,this),this.hls.off(Events.MEDIA_DETACHED,this.onMediaDetached,this),this.hls.off(Events.MANIFEST_LOADING,this.onManifestLoading,this),this.hls.off(Events.MANIFEST_LOADED,this.onManifestLoaded,this),this.hls.off(Events.DESTROYING,this.onDestroying,this)}getLicenseServerUrl(keySystem){const{drmSystems,widevineLicenseUrl}=this.config,keySystemConfiguration=drmSystems[keySystem];return keySystemConfiguration?keySystemConfiguration.licenseUrl:keySystem===KeySystems.WIDEVINE&&widevineLicenseUrl?widevineLicenseUrl:void 0}getLicenseServerUrlOrThrow(keySystem){const url=this.getLicenseServerUrl(keySystem);if(void 0===url)throw new Error(`no license server URL configured for key-system "${keySystem}"`);return url}getServerCertificateUrl(keySystem){const{drmSystems}=this.config,keySystemConfiguration=drmSystems[keySystem];if(keySystemConfiguration)return keySystemConfiguration.serverCertificateUrl;this.log(`No Server Certificate in config.drmSystems["${keySystem}"]`)}attemptKeySystemAccess(keySystemsToAttempt){const levels=this.hls.levels,uniqueCodec=(value,i,a)=>!!value&&a.indexOf(value)===i,audioCodecs=levels.map((level=>level.audioCodec)).filter(uniqueCodec),videoCodecs=levels.map((level=>level.videoCodec)).filter(uniqueCodec);return audioCodecs.length+videoCodecs.length===0&&videoCodecs.push("avc1.42e01e"),new Promise(((resolve,reject)=>{const attempt=keySystems=>{const keySystem=keySystems.shift();this.getMediaKeysPromise(keySystem,audioCodecs,videoCodecs).then((mediaKeys=>resolve({keySystem,mediaKeys}))).catch((error=>{keySystems.length?attempt(keySystems):reject(error instanceof EMEKeyError?error:new EMEKeyError({type:ErrorTypes.KEY_SYSTEM_ERROR,details:ErrorDetails.KEY_SYSTEM_NO_ACCESS,error,fatal:!0},error.message))}))};attempt(keySystemsToAttempt)}))}requestMediaKeySystemAccess(keySystem,supportedConfigurations){const{requestMediaKeySystemAccessFunc}=this.config;if("function"!=typeof requestMediaKeySystemAccessFunc){let errMessage=`Configured requestMediaKeySystemAccess is not a function ${requestMediaKeySystemAccessFunc}`;return null===requestMediaKeySystemAccess&&"http:"===self.location.protocol&&(errMessage=`navigator.requestMediaKeySystemAccess is not available over insecure protocol ${location.protocol}`),Promise.reject(new Error(errMessage))}return requestMediaKeySystemAccessFunc(keySystem,supportedConfigurations)}getMediaKeysPromise(keySystem,audioCodecs,videoCodecs){const mediaKeySystemConfigs=function getSupportedMediaKeySystemConfigurations(keySystem,audioCodecs,videoCodecs,drmSystemOptions){let initDataTypes;switch(keySystem){case KeySystems.FAIRPLAY:initDataTypes=["cenc","sinf"];break;case KeySystems.WIDEVINE:case KeySystems.PLAYREADY:initDataTypes=["cenc"];break;case KeySystems.CLEARKEY:initDataTypes=["cenc","keyids"];break;default:throw new Error(`Unknown key-system: ${keySystem}`)}return function createMediaKeySystemConfigurations(initDataTypes,audioCodecs,videoCodecs,drmSystemOptions){return[{initDataTypes,persistentState:drmSystemOptions.persistentState||"optional",distinctiveIdentifier:drmSystemOptions.distinctiveIdentifier||"optional",sessionTypes:drmSystemOptions.sessionTypes||[drmSystemOptions.sessionType||"temporary"],audioCapabilities:audioCodecs.map((codec=>({contentType:`audio/mp4; codecs=${codec}`,robustness:drmSystemOptions.audioRobustness||"",encryptionScheme:drmSystemOptions.audioEncryptionScheme||null}))),videoCapabilities:videoCodecs.map((codec=>({contentType:`video/mp4; codecs=${codec}`,robustness:drmSystemOptions.videoRobustness||"",encryptionScheme:drmSystemOptions.videoEncryptionScheme||null})))}]}(initDataTypes,audioCodecs,videoCodecs,drmSystemOptions)}(keySystem,audioCodecs,videoCodecs,this.config.drmSystemOptions),keySystemAccessPromises=this.keySystemAccessPromises[keySystem];let keySystemAccess=null==keySystemAccessPromises?void 0:keySystemAccessPromises.keySystemAccess;if(!keySystemAccess){this.log(`Requesting encrypted media "${keySystem}" key-system access with config: ${stringify(mediaKeySystemConfigs)}`),keySystemAccess=this.requestMediaKeySystemAccess(keySystem,mediaKeySystemConfigs);const _keySystemAccessPromises=this.keySystemAccessPromises[keySystem]={keySystemAccess};return keySystemAccess.catch((error=>{this.log(`Failed to obtain access to key-system "${keySystem}": ${error}`)})),keySystemAccess.then((mediaKeySystemAccess=>{this.log(`Access for key-system "${mediaKeySystemAccess.keySystem}" obtained`);const certificateRequest=this.fetchServerCertificate(keySystem);return this.log(`Create media-keys for "${keySystem}"`),_keySystemAccessPromises.mediaKeys=mediaKeySystemAccess.createMediaKeys().then((mediaKeys=>(this.log(`Media-keys created for "${keySystem}"`),_keySystemAccessPromises.hasMediaKeys=!0,certificateRequest.then((certificate=>certificate?this.setMediaKeysServerCertificate(mediaKeys,keySystem,certificate):mediaKeys))))),_keySystemAccessPromises.mediaKeys.catch((error=>{this.error(`Failed to create media-keys for "${keySystem}"}: ${error}`)})),_keySystemAccessPromises.mediaKeys}))}return keySystemAccess.then((()=>keySystemAccessPromises.mediaKeys))}createMediaKeySessionContext({decryptdata,keySystem,mediaKeys}){this.log(`Creating key-system session "${keySystem}" keyId: ${Hex_hexDump(decryptdata.keyId||[])}`);const mediaKeysSession=mediaKeys.createSession(),mediaKeySessionContext={decryptdata,keySystem,mediaKeys,mediaKeysSession,keyStatus:"status-pending"};return this.mediaKeySessions.push(mediaKeySessionContext),mediaKeySessionContext}renewKeySession(mediaKeySessionContext){const decryptdata=mediaKeySessionContext.decryptdata;if(decryptdata.pssh){const keySessionContext=this.createMediaKeySessionContext(mediaKeySessionContext),keyId=this.getKeyIdString(decryptdata),scheme="cenc";this.keyIdToKeySessionPromise[keyId]=this.generateRequestWithPreferredKeySession(keySessionContext,scheme,decryptdata.pssh.buffer,"expired")}else this.warn("Could not renew expired session. Missing pssh initData.");this.removeSession(mediaKeySessionContext)}getKeyIdString(decryptdata){if(!decryptdata)throw new Error("Could not read keyId of undefined decryptdata");if(null===decryptdata.keyId)throw new Error("keyId is null");return Hex_hexDump(decryptdata.keyId)}updateKeySession(mediaKeySessionContext,data){var _mediaKeySessionConte;const keySession=mediaKeySessionContext.mediaKeysSession;return this.log(`Updating key-session "${keySession.sessionId}" for keyID ${Hex_hexDump((null==(_mediaKeySessionConte=mediaKeySessionContext.decryptdata)?void 0:_mediaKeySessionConte.keyId)||[])}\n      } (data length: ${data?data.byteLength:data})`),keySession.update(data)}getSelectedKeySystemFormats(){return Object.keys(this.keySystemAccessPromises).map((keySystem=>({keySystem,hasMediaKeys:this.keySystemAccessPromises[keySystem].hasMediaKeys}))).filter((({hasMediaKeys})=>!!hasMediaKeys)).map((({keySystem})=>keySystemDomainToKeySystemFormat(keySystem))).filter((keySystem=>!!keySystem))}getKeySystemAccess(keySystemsToAttempt){return this.getKeySystemSelectionPromise(keySystemsToAttempt).then((({keySystem,mediaKeys})=>this.attemptSetMediaKeys(keySystem,mediaKeys)))}selectKeySystem(keySystemsToAttempt){return new Promise(((resolve,reject)=>this.getKeySystemSelectionPromise(keySystemsToAttempt).then((({keySystem})=>{const keySystemFormat=keySystemDomainToKeySystemFormat(keySystem);keySystemFormat?resolve(keySystemFormat):reject(new Error(`Unable to find format for key-system "${keySystem}"`))})).catch(reject)))}selectKeySystemFormat(frag){const keyFormats=Object.keys(frag.levelkeys||{});return this.keyFormatPromise||(this.log(`Selecting key-system from fragment (sn: ${frag.sn} ${frag.type}: ${frag.level}) key formats ${keyFormats.join(", ")}`),this.keyFormatPromise=this.getKeyFormatPromise(keyFormats)),this.keyFormatPromise}getKeyFormatPromise(keyFormats){const keySystemsInConfig=getKeySystemsForConfig(this.config),keySystemsToAttempt=keyFormats.map(keySystemFormatToKeySystemDomain).filter((value=>!!value&&-1!==keySystemsInConfig.indexOf(value)));return this.selectKeySystem(keySystemsToAttempt)}loadKey(data){const decryptdata=data.keyInfo.decryptdata,keyId=this.getKeyIdString(decryptdata),keyDetails=`(keyId: ${keyId} format: "${decryptdata.keyFormat}" method: ${decryptdata.method} uri: ${decryptdata.uri})`;this.log(`Starting session for key ${keyDetails}`);let keyContextPromise=this.keyIdToKeySessionPromise[keyId];if(!keyContextPromise){keyContextPromise=this.getKeySystemForKeyPromise(decryptdata).then((({keySystem,mediaKeys})=>(this.throwIfDestroyed(),this.log(`Handle encrypted media sn: ${data.frag.sn} ${data.frag.type}: ${data.frag.level} using key ${keyDetails}`),this.attemptSetMediaKeys(keySystem,mediaKeys).then((()=>(this.throwIfDestroyed(),this.createMediaKeySessionContext({keySystem,mediaKeys,decryptdata})))))));(this.keyIdToKeySessionPromise[keyId]=keyContextPromise.then((keySessionContext=>{const initData=decryptdata.pssh?decryptdata.pssh.buffer:null;return this.generateRequestWithPreferredKeySession(keySessionContext,"cenc",initData,"playlist-key")}))).catch((error=>this.handleError(error)))}return keyContextPromise}throwIfDestroyed(message="Invalid state"){if(!this.hls)throw new Error("invalid state")}handleError(error){this.hls&&(this.error(error.message),error instanceof EMEKeyError?this.hls.trigger(Events.ERROR,error.data):this.hls.trigger(Events.ERROR,{type:ErrorTypes.KEY_SYSTEM_ERROR,details:ErrorDetails.KEY_SYSTEM_NO_KEYS,error,fatal:!0}))}getKeySystemForKeyPromise(decryptdata){const keyId=this.getKeyIdString(decryptdata),mediaKeySessionContext=this.keyIdToKeySessionPromise[keyId];if(!mediaKeySessionContext){const keySystem=keySystemFormatToKeySystemDomain(decryptdata.keyFormat),keySystemsToAttempt=keySystem?[keySystem]:getKeySystemsForConfig(this.config);return this.attemptKeySystemAccess(keySystemsToAttempt)}return mediaKeySessionContext}getKeySystemSelectionPromise(keySystemsToAttempt){if(keySystemsToAttempt.length||(keySystemsToAttempt=getKeySystemsForConfig(this.config)),0===keySystemsToAttempt.length)throw new EMEKeyError({type:ErrorTypes.KEY_SYSTEM_ERROR,details:ErrorDetails.KEY_SYSTEM_NO_CONFIGURED_LICENSE,fatal:!0},`Missing key-system license configuration options ${stringify({drmSystems:this.config.drmSystems})}`);return this.attemptKeySystemAccess(keySystemsToAttempt)}attemptSetMediaKeys(keySystem,mediaKeys){if(this.mediaKeys===mediaKeys)return Promise.resolve();const queue=this.setMediaKeysQueue.slice();this.log(`Setting media-keys for "${keySystem}"`);const setMediaKeysPromise=Promise.all(queue).then((()=>{if(!this.media)throw this.mediaKeys=null,new Error("Attempted to set mediaKeys without media element attached");return this.media.setMediaKeys(mediaKeys)}));return this.mediaKeys=mediaKeys,this.setMediaKeysQueue.push(setMediaKeysPromise),setMediaKeysPromise.then((()=>{this.log(`Media-keys set for "${keySystem}"`),queue.push(setMediaKeysPromise),this.setMediaKeysQueue=this.setMediaKeysQueue.filter((p=>-1===queue.indexOf(p)))}))}generateRequestWithPreferredKeySession(context,initDataType,initData,reason){var _this$config$drmSyste;const generateRequestFilter=null==(_this$config$drmSyste=this.config.drmSystems)||null==(_this$config$drmSyste=_this$config$drmSyste[context.keySystem])?void 0:_this$config$drmSyste.generateRequest;if(generateRequestFilter)try{const mappedInitData=generateRequestFilter.call(this.hls,initDataType,initData,context);if(!mappedInitData)throw new Error("Invalid response from configured generateRequest filter");initDataType=mappedInitData.initDataType,initData=mappedInitData.initData?mappedInitData.initData:null,context.decryptdata.pssh=initData?new Uint8Array(initData):null}catch(error){var _this$hls;if(this.warn(error.message),null!=(_this$hls=this.hls)&&_this$hls.config.debug)throw error}if(null===initData)return this.log(`Skipping key-session request for "${reason}" (no initData)`),Promise.resolve(context);const keyId=this.getKeyIdString(context.decryptdata);this.log(`Generating key-session request for "${reason}": ${keyId} (init data type: ${initDataType} length: ${initData?initData.byteLength:null})`);const licenseStatus=new EventEmitter,onmessage=context._onmessage=event=>{const keySession=context.mediaKeysSession;if(!keySession)return void licenseStatus.emit("error",new Error("invalid state"));const{messageType,message}=event;this.log(`"${messageType}" message event for session "${keySession.sessionId}" message size: ${message.byteLength}`),"license-request"===messageType||"license-renewal"===messageType?this.renewLicense(context,message).catch((error=>{licenseStatus.eventNames().length?licenseStatus.emit("error",error):this.handleError(error)})):"license-release"===messageType?context.keySystem===KeySystems.FAIRPLAY&&(this.updateKeySession(context,strToUtf8array("acknowledged")),this.removeSession(context)):this.warn(`unhandled media key message type "${messageType}"`)},onkeystatuseschange=context._onkeystatuseschange=event=>{if(!context.mediaKeysSession)return void licenseStatus.emit("error",new Error("invalid state"));this.onKeyStatusChange(context);const keyStatus=context.keyStatus;licenseStatus.emit("keyStatus",keyStatus),"expired"===keyStatus&&(this.warn(`${context.keySystem} expired for key ${keyId}`),this.renewKeySession(context))};addEventListener(context.mediaKeysSession,"message",onmessage),addEventListener(context.mediaKeysSession,"keystatuseschange",onkeystatuseschange);const keyUsablePromise=new Promise(((resolve,reject)=>{licenseStatus.on("error",reject),licenseStatus.on("keyStatus",(keyStatus=>{keyStatus.startsWith("usable")?resolve():"output-restricted"===keyStatus?reject(new EMEKeyError({type:ErrorTypes.KEY_SYSTEM_ERROR,details:ErrorDetails.KEY_SYSTEM_STATUS_OUTPUT_RESTRICTED,fatal:!1},"HDCP level output restricted")):"internal-error"===keyStatus?reject(new EMEKeyError({type:ErrorTypes.KEY_SYSTEM_ERROR,details:ErrorDetails.KEY_SYSTEM_STATUS_INTERNAL_ERROR,fatal:!0},`key status changed to "${keyStatus}"`)):"expired"===keyStatus?reject(new Error("key expired while generating request")):this.warn(`unhandled key status change "${keyStatus}"`)}))}));return context.mediaKeysSession.generateRequest(initDataType,initData).then((()=>{var _context$mediaKeysSes;this.log(`Request generated for key-session "${null==(_context$mediaKeysSes=context.mediaKeysSession)?void 0:_context$mediaKeysSes.sessionId}" keyId: ${keyId}`)})).catch((error=>{throw new EMEKeyError({type:ErrorTypes.KEY_SYSTEM_ERROR,details:ErrorDetails.KEY_SYSTEM_NO_SESSION,error,fatal:!1},`Error generating key-session request: ${error}`)})).then((()=>keyUsablePromise)).catch((error=>{throw licenseStatus.removeAllListeners(),this.removeSession(context),error})).then((()=>(licenseStatus.removeAllListeners(),context)))}onKeyStatusChange(mediaKeySessionContext){mediaKeySessionContext.mediaKeysSession.keyStatuses.forEach(((status,keyId)=>{if("string"==typeof keyId&&"object"==typeof status){const temp=keyId;keyId=status,status=temp}this.log(`key status change "${status}" for keyStatuses keyId: ${Hex_hexDump("buffer"in keyId?new Uint8Array(keyId.buffer,keyId.byteOffset,keyId.byteLength):new Uint8Array(keyId))} session keyId: ${Hex_hexDump(new Uint8Array(mediaKeySessionContext.decryptdata.keyId||[]))} uri: ${mediaKeySessionContext.decryptdata.uri}`),mediaKeySessionContext.keyStatus=status}))}fetchServerCertificate(keySystem){const config=this.config,certLoader=new(0,config.loader)(config),url=this.getServerCertificateUrl(keySystem);return url?(this.log(`Fetching server certificate for "${keySystem}"`),new Promise(((resolve,reject)=>{const loaderContext={responseType:"arraybuffer",url},loadPolicy=config.certLoadPolicy.default,loaderConfig={loadPolicy,timeout:loadPolicy.maxLoadTimeMs,maxRetry:0,retryDelay:0,maxRetryDelay:0},loaderCallbacks={onSuccess:(response,stats,context,networkDetails)=>{resolve(response.data)},onError:(response,contex,networkDetails,stats)=>{reject(new EMEKeyError({type:ErrorTypes.KEY_SYSTEM_ERROR,details:ErrorDetails.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED,fatal:!0,networkDetails,response:_objectSpread2({url:loaderContext.url,data:void 0},response)},`"${keySystem}" certificate request failed (${url}). Status: ${response.code} (${response.text})`))},onTimeout:(stats,context,networkDetails)=>{reject(new EMEKeyError({type:ErrorTypes.KEY_SYSTEM_ERROR,details:ErrorDetails.KEY_SYSTEM_SERVER_CERTIFICATE_REQUEST_FAILED,fatal:!0,networkDetails,response:{url:loaderContext.url,data:void 0}},`"${keySystem}" certificate request timed out (${url})`))},onAbort:(stats,context,networkDetails)=>{reject(new Error("aborted"))}};certLoader.load(loaderContext,loaderConfig,loaderCallbacks)}))):Promise.resolve()}setMediaKeysServerCertificate(mediaKeys,keySystem,cert){return new Promise(((resolve,reject)=>{mediaKeys.setServerCertificate(cert).then((success=>{this.log(`setServerCertificate ${success?"success":"not supported by CDM"} (${null==cert?void 0:cert.byteLength}) on "${keySystem}"`),resolve(mediaKeys)})).catch((error=>{reject(new EMEKeyError({type:ErrorTypes.KEY_SYSTEM_ERROR,details:ErrorDetails.KEY_SYSTEM_SERVER_CERTIFICATE_UPDATE_FAILED,error,fatal:!0},error.message))}))}))}renewLicense(context,keyMessage){return this.requestLicense(context,new Uint8Array(keyMessage)).then((data=>this.updateKeySession(context,new Uint8Array(data)).catch((error=>{throw new EMEKeyError({type:ErrorTypes.KEY_SYSTEM_ERROR,details:ErrorDetails.KEY_SYSTEM_SESSION_UPDATE_FAILED,error,fatal:!0},error.message)}))))}unpackPlayReadyKeyMessage(xhr,licenseChallenge){const xmlString=String.fromCharCode.apply(null,new Uint16Array(licenseChallenge.buffer));if(!xmlString.includes("PlayReadyKeyMessage"))return xhr.setRequestHeader("Content-Type","text/xml; charset=utf-8"),licenseChallenge;const keyMessageXml=(new DOMParser).parseFromString(xmlString,"application/xml"),headers=keyMessageXml.querySelectorAll("HttpHeader");if(headers.length>0){let header;for(let i=0,len=headers.length;i<len;i++){var _header$querySelector,_header$querySelector2;header=headers[i];const name=null==(_header$querySelector=header.querySelector("name"))?void 0:_header$querySelector.textContent,value=null==(_header$querySelector2=header.querySelector("value"))?void 0:_header$querySelector2.textContent;name&&value&&xhr.setRequestHeader(name,value)}}const challengeElement=keyMessageXml.querySelector("Challenge"),challengeText=null==challengeElement?void 0:challengeElement.textContent;if(!challengeText)throw new Error("Cannot find <Challenge> in key message");return strToUtf8array(atob(challengeText))}setupLicenseXHR(xhr,url,keysListItem,licenseChallenge){const licenseXhrSetup=this.config.licenseXhrSetup;return licenseXhrSetup?Promise.resolve().then((()=>{if(!keysListItem.decryptdata)throw new Error("Key removed");return licenseXhrSetup.call(this.hls,xhr,url,keysListItem,licenseChallenge)})).catch((error=>{if(!keysListItem.decryptdata)throw error;return xhr.open("POST",url,!0),licenseXhrSetup.call(this.hls,xhr,url,keysListItem,licenseChallenge)})).then((licenseXhrSetupResult=>{xhr.readyState||xhr.open("POST",url,!0);return{xhr,licenseChallenge:licenseXhrSetupResult||licenseChallenge}})):(xhr.open("POST",url,!0),Promise.resolve({xhr,licenseChallenge}))}requestLicense(keySessionContext,licenseChallenge){const keyLoadPolicy=this.config.keyLoadPolicy.default;return new Promise(((resolve,reject)=>{const url=this.getLicenseServerUrlOrThrow(keySessionContext.keySystem);this.log(`Sending license request to URL: ${url}`);const xhr=new XMLHttpRequest;xhr.responseType="arraybuffer",xhr.onreadystatechange=()=>{if(!this.hls||!keySessionContext.mediaKeysSession)return reject(new Error("invalid state"));if(4===xhr.readyState)if(200===xhr.status){this._requestLicenseFailureCount=0;let data=xhr.response;this.log(`License received ${data instanceof ArrayBuffer?data.byteLength:data}`);const licenseResponseCallback=this.config.licenseResponseCallback;if(licenseResponseCallback)try{data=licenseResponseCallback.call(this.hls,xhr,url,keySessionContext)}catch(error){this.error(error)}resolve(data)}else{const retryConfig=keyLoadPolicy.errorRetry,maxNumRetry=retryConfig?retryConfig.maxNumRetry:0;if(this._requestLicenseFailureCount++,this._requestLicenseFailureCount>maxNumRetry||xhr.status>=400&&xhr.status<500)reject(new EMEKeyError({type:ErrorTypes.KEY_SYSTEM_ERROR,details:ErrorDetails.KEY_SYSTEM_LICENSE_REQUEST_FAILED,fatal:!0,networkDetails:xhr,response:{url,data:void 0,code:xhr.status,text:xhr.statusText}},`License Request XHR failed (${url}). Status: ${xhr.status} (${xhr.statusText})`));else{const attemptsLeft=maxNumRetry-this._requestLicenseFailureCount+1;this.warn(`Retrying license request, ${attemptsLeft} attempts left`),this.requestLicense(keySessionContext,licenseChallenge).then(resolve,reject)}}},keySessionContext.licenseXhr&&keySessionContext.licenseXhr.readyState!==XMLHttpRequest.DONE&&keySessionContext.licenseXhr.abort(),keySessionContext.licenseXhr=xhr,this.setupLicenseXHR(xhr,url,keySessionContext,licenseChallenge).then((({xhr,licenseChallenge})=>{keySessionContext.keySystem==KeySystems.PLAYREADY&&(licenseChallenge=this.unpackPlayReadyKeyMessage(xhr,licenseChallenge)),xhr.send(licenseChallenge)}))}))}onDestroying(){this.unregisterListeners(),this._clear()}onMediaAttached(event,data){if(!this.config.emeEnabled)return;const media=data.media;this.media=media,addEventListener(media,"encrypted",this.onMediaEncrypted),addEventListener(media,"waitingforkey",this.onWaitingForKey)}onMediaDetached(){const media=this.media;media&&(removeEventListener(media,"encrypted",this.onMediaEncrypted),removeEventListener(media,"waitingforkey",this.onWaitingForKey),this.media=null,this.mediaKeys=null)}_clear(){var _media$setMediaKeys;if(this._requestLicenseFailureCount=0,this.keyIdToKeySessionPromise={},!this.mediaKeys&&!this.mediaKeySessions.length)return;const media=this.media,mediaKeysList=this.mediaKeySessions.slice();this.mediaKeySessions=[],this.mediaKeys=null,LevelKey.clearKeyUriToKeyIdMap();const keySessionCount=mediaKeysList.length;EMEController.CDMCleanupPromise=Promise.all(mediaKeysList.map((mediaKeySessionContext=>this.removeSession(mediaKeySessionContext))).concat(null==media||null==(_media$setMediaKeys=media.setMediaKeys(null))?void 0:_media$setMediaKeys.catch((error=>{var _this$hls2;this.log(`Could not clear media keys: ${error}`),null==(_this$hls2=this.hls)||_this$hls2.trigger(Events.ERROR,{type:ErrorTypes.OTHER_ERROR,details:ErrorDetails.KEY_SYSTEM_DESTROY_MEDIA_KEYS_ERROR,fatal:!1,error:new Error(`Could not clear media keys: ${error}`)})})))).catch((error=>{var _this$hls3;this.log(`Could not close sessions and clear media keys: ${error}`),null==(_this$hls3=this.hls)||_this$hls3.trigger(Events.ERROR,{type:ErrorTypes.OTHER_ERROR,details:ErrorDetails.KEY_SYSTEM_DESTROY_CLOSE_SESSION_ERROR,fatal:!1,error:new Error(`Could not close sessions and clear media keys: ${error}`)})})).then((()=>{keySessionCount&&this.log("finished closing key sessions and clearing media keys")}))}onManifestLoading(){this.keyFormatPromise=null}onManifestLoaded(event,{sessionKeys}){if(sessionKeys&&this.config.emeEnabled&&!this.keyFormatPromise){const keyFormats=sessionKeys.reduce(((formats,sessionKey)=>(-1===formats.indexOf(sessionKey.keyFormat)&&formats.push(sessionKey.keyFormat),formats)),[]);this.log(`Selecting key-system from session-keys ${keyFormats.join(", ")}`),this.keyFormatPromise=this.getKeyFormatPromise(keyFormats)}}removeSession(mediaKeySessionContext){const{mediaKeysSession,licenseXhr}=mediaKeySessionContext;if(mediaKeysSession){this.log(`Remove licenses and keys and close session ${mediaKeysSession.sessionId}`),mediaKeySessionContext._onmessage&&(mediaKeysSession.removeEventListener("message",mediaKeySessionContext._onmessage),mediaKeySessionContext._onmessage=void 0),mediaKeySessionContext._onkeystatuseschange&&(mediaKeysSession.removeEventListener("keystatuseschange",mediaKeySessionContext._onkeystatuseschange),mediaKeySessionContext._onkeystatuseschange=void 0),licenseXhr&&licenseXhr.readyState!==XMLHttpRequest.DONE&&licenseXhr.abort(),mediaKeySessionContext.mediaKeysSession=mediaKeySessionContext.decryptdata=mediaKeySessionContext.licenseXhr=void 0;const index=this.mediaKeySessions.indexOf(mediaKeySessionContext);index>-1&&this.mediaKeySessions.splice(index,1);const{drmSystemOptions}=this.config,removePromise=function isPersistentSessionType(drmSystemOptions){var _drmSystemOptions$ses;return"persistent-license"===drmSystemOptions.sessionType||!(null==(_drmSystemOptions$ses=drmSystemOptions.sessionTypes)||!_drmSystemOptions$ses.some((type=>"persistent-license"===type)))}(drmSystemOptions)?new Promise(((resolve,reject)=>{self.setTimeout((()=>reject(new Error("MediaKeySession.remove() timeout"))),8e3),mediaKeysSession.remove().then(resolve)})):Promise.resolve();return removePromise.catch((error=>{var _this$hls4;this.log(`Could not remove session: ${error}`),null==(_this$hls4=this.hls)||_this$hls4.trigger(Events.ERROR,{type:ErrorTypes.OTHER_ERROR,details:ErrorDetails.KEY_SYSTEM_DESTROY_REMOVE_SESSION_ERROR,fatal:!1,error:new Error(`Could not remove session: ${error}`)})})).then((()=>mediaKeysSession.close())).catch((error=>{var _this$hls5;this.log(`Could not close session: ${error}`),null==(_this$hls5=this.hls)||_this$hls5.trigger(Events.ERROR,{type:ErrorTypes.OTHER_ERROR,details:ErrorDetails.KEY_SYSTEM_DESTROY_CLOSE_SESSION_ERROR,fatal:!1,error:new Error(`Could not close session: ${error}`)})}))}}}EMEController.CDMCleanupPromise=void 0;class EMEKeyError extends Error{constructor(data,message){super(message),this.data=void 0,data.error||(data.error=new Error(message)),this.data=data,data.err=data.error}}class FPSController{constructor(hls){this.hls=void 0,this.isVideoPlaybackQualityAvailable=!1,this.timer=void 0,this.media=null,this.lastTime=void 0,this.lastDroppedFrames=0,this.lastDecodedFrames=0,this.streamController=void 0,this.hls=hls,this.registerListeners()}setStreamController(streamController){this.streamController=streamController}registerListeners(){this.hls.on(Events.MEDIA_ATTACHING,this.onMediaAttaching,this),this.hls.on(Events.MEDIA_DETACHING,this.onMediaDetaching,this)}unregisterListeners(){this.hls.off(Events.MEDIA_ATTACHING,this.onMediaAttaching,this),this.hls.off(Events.MEDIA_DETACHING,this.onMediaDetaching,this)}destroy(){this.timer&&clearInterval(this.timer),this.unregisterListeners(),this.isVideoPlaybackQualityAvailable=!1,this.media=null}onMediaAttaching(event,data){const config=this.hls.config;if(config.capLevelOnFPSDrop){const media=data.media instanceof self.HTMLVideoElement?data.media:null;this.media=media,media&&"function"==typeof media.getVideoPlaybackQuality&&(this.isVideoPlaybackQualityAvailable=!0),self.clearInterval(this.timer),this.timer=self.setInterval(this.checkFPSInterval.bind(this),config.fpsDroppedMonitoringPeriod)}}onMediaDetaching(){this.media=null}checkFPS(video,decodedFrames,droppedFrames){const currentTime=performance.now();if(decodedFrames){if(this.lastTime){const currentPeriod=currentTime-this.lastTime,currentDropped=droppedFrames-this.lastDroppedFrames,currentDecoded=decodedFrames-this.lastDecodedFrames,droppedFPS=1e3*currentDropped/currentPeriod,hls=this.hls;if(hls.trigger(Events.FPS_DROP,{currentDropped,currentDecoded,totalDroppedFrames:droppedFrames}),droppedFPS>0&&currentDropped>hls.config.fpsDroppedMonitoringThreshold*currentDecoded){let currentLevel=hls.currentLevel;hls.logger.warn("drop FPS ratio greater than max allowed value for currentLevel: "+currentLevel),currentLevel>0&&(-1===hls.autoLevelCapping||hls.autoLevelCapping>=currentLevel)&&(currentLevel-=1,hls.trigger(Events.FPS_DROP_LEVEL_CAPPING,{level:currentLevel,droppedLevel:hls.currentLevel}),hls.autoLevelCapping=currentLevel,this.streamController.nextLevelSwitch())}}this.lastTime=currentTime,this.lastDroppedFrames=droppedFrames,this.lastDecodedFrames=decodedFrames}}checkFPSInterval(){const video=this.media;if(video)if(this.isVideoPlaybackQualityAvailable){const videoPlaybackQuality=video.getVideoPlaybackQuality();this.checkFPS(video,videoPlaybackQuality.totalVideoFrames,videoPlaybackQuality.droppedVideoFrames)}else this.checkFPS(video,video.webkitDecodedFrameCount,video.webkitDroppedFrameCount)}}function sendAddTrackEvent(track,videoEl){let event;try{event=new Event("addtrack")}catch(err){event=document.createEvent("Event"),event.initEvent("addtrack",!1,!1)}event.track=track,videoEl.dispatchEvent(event)}function addCueToTrack(track,cue){const mode=track.mode;if("disabled"===mode&&(track.mode="hidden"),track.cues&&!track.cues.getCueById(cue.id))try{if(track.addCue(cue),!track.cues.getCueById(cue.id))throw new Error(`addCue is failed for: ${cue}`)}catch(err){logger.debug(`[texttrack-utils]: ${err}`);try{const textTrackCue=new self.TextTrackCue(cue.startTime,cue.endTime,cue.text);textTrackCue.id=cue.id,track.addCue(textTrackCue)}catch(err2){logger.debug(`[texttrack-utils]: Legacy TextTrackCue fallback failed: ${err2}`)}}"disabled"===mode&&(track.mode=mode)}function clearCurrentCues(track,enterHandler){const mode=track.mode;if("disabled"===mode&&(track.mode="hidden"),track.cues)for(let i=track.cues.length;i--;)enterHandler&&track.cues[i].removeEventListener("enter",enterHandler),track.removeCue(track.cues[i]);"disabled"===mode&&(track.mode=mode)}function removeCuesInRange(track,start,end,predicate){const mode=track.mode;if("disabled"===mode&&(track.mode="hidden"),track.cues&&track.cues.length>0){const cues=function getCuesInRange(cues,start,end){const cuesFound=[],firstCueInRange=function getFirstCueIndexFromTime(cues,time){if(time<=cues[0].startTime)return 0;const len=cues.length-1;if(time>cues[len].endTime)return-1;let mid,left=0,right=len;for(;left<=right;)if(mid=Math.floor((right+left)/2),time<cues[mid].startTime)right=mid-1;else{if(!(time>cues[mid].startTime&&left<len))return mid;left=mid+1}return cues[left].startTime-time<time-cues[right].startTime?left:right}(cues,start);if(firstCueInRange>-1)for(let i=firstCueInRange,len=cues.length;i<len;i++){const cue=cues[i];if(cue.startTime>=start&&cue.endTime<=end)cuesFound.push(cue);else if(cue.startTime>end)return cuesFound}return cuesFound}(track.cues,start,end);for(let i=0;i<cues.length;i++)predicate&&!predicate(cues[i])||track.removeCue(cues[i])}"disabled"===mode&&(track.mode=mode)}function filterSubtitleTracks(textTrackList){const tracks=[];for(let i=0;i<textTrackList.length;i++){const track=textTrackList[i];"subtitles"!==track.kind&&"captions"!==track.kind||!track.label||tracks.push(textTrackList[i])}return tracks}class SubtitleTrackController extends BasePlaylistController{constructor(hls){super(hls,"subtitle-track-controller"),this.media=null,this.tracks=[],this.groupIds=null,this.tracksInGroup=[],this.trackId=-1,this.currentTrack=null,this.selectDefaultTrack=!0,this.queuedDefaultTrack=-1,this.useTextTrackPolling=!1,this.subtitlePollingInterval=-1,this._subtitleDisplay=!0,this.asyncPollTrackChange=()=>this.pollTrackChange(0),this.onTextTracksChanged=()=>{if(this.useTextTrackPolling||self.clearInterval(this.subtitlePollingInterval),!this.media||!this.hls.config.renderTextTracksNatively)return;let textTrack=null;const tracks=filterSubtitleTracks(this.media.textTracks);for(let i=0;i<tracks.length;i++)if("hidden"===tracks[i].mode)textTrack=tracks[i];else if("showing"===tracks[i].mode){textTrack=tracks[i];break}const trackId=this.findTrackForTextTrack(textTrack);this.subtitleTrack!==trackId&&this.setSubtitleTrack(trackId)},this.registerListeners()}destroy(){this.unregisterListeners(),this.tracks.length=0,this.tracksInGroup.length=0,this.currentTrack=null,this.onTextTracksChanged=this.asyncPollTrackChange=null,super.destroy()}get subtitleDisplay(){return this._subtitleDisplay}set subtitleDisplay(value){this._subtitleDisplay=value,this.trackId>-1&&this.toggleTrackModes()}registerListeners(){const{hls}=this;hls.on(Events.MEDIA_ATTACHED,this.onMediaAttached,this),hls.on(Events.MEDIA_DETACHING,this.onMediaDetaching,this),hls.on(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.on(Events.MANIFEST_PARSED,this.onManifestParsed,this),hls.on(Events.LEVEL_LOADING,this.onLevelLoading,this),hls.on(Events.LEVEL_SWITCHING,this.onLevelSwitching,this),hls.on(Events.SUBTITLE_TRACK_LOADED,this.onSubtitleTrackLoaded,this),hls.on(Events.ERROR,this.onError,this)}unregisterListeners(){const{hls}=this;hls.off(Events.MEDIA_ATTACHED,this.onMediaAttached,this),hls.off(Events.MEDIA_DETACHING,this.onMediaDetaching,this),hls.off(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.off(Events.MANIFEST_PARSED,this.onManifestParsed,this),hls.off(Events.LEVEL_LOADING,this.onLevelLoading,this),hls.off(Events.LEVEL_SWITCHING,this.onLevelSwitching,this),hls.off(Events.SUBTITLE_TRACK_LOADED,this.onSubtitleTrackLoaded,this),hls.off(Events.ERROR,this.onError,this)}onMediaAttached(event,data){this.media=data.media,this.media&&(this.queuedDefaultTrack>-1&&(this.subtitleTrack=this.queuedDefaultTrack,this.queuedDefaultTrack=-1),this.useTextTrackPolling=!(this.media.textTracks&&"onchange"in this.media.textTracks),this.useTextTrackPolling?this.pollTrackChange(500):this.media.textTracks.addEventListener("change",this.asyncPollTrackChange))}pollTrackChange(timeout){self.clearInterval(this.subtitlePollingInterval),this.subtitlePollingInterval=self.setInterval(this.onTextTracksChanged,timeout)}onMediaDetaching(event,data){const media=this.media;if(!media)return;const transferringMedia=!!data.transferMedia;if(self.clearInterval(this.subtitlePollingInterval),this.useTextTrackPolling||media.textTracks.removeEventListener("change",this.asyncPollTrackChange),this.trackId>-1&&(this.queuedDefaultTrack=this.trackId),this.subtitleTrack=-1,this.media=null,transferringMedia)return;filterSubtitleTracks(media.textTracks).forEach((track=>{clearCurrentCues(track)}))}onManifestLoading(){this.tracks=[],this.groupIds=null,this.tracksInGroup=[],this.trackId=-1,this.currentTrack=null,this.selectDefaultTrack=!0}onManifestParsed(event,data){this.tracks=data.subtitleTracks}onSubtitleTrackLoaded(event,data){const{id,groupId,details}=data,trackInActiveGroup=this.tracksInGroup[id];if(!trackInActiveGroup||trackInActiveGroup.groupId!==groupId)return void this.warn(`Subtitle track with id:${id} and group:${groupId} not found in active group ${null==trackInActiveGroup?void 0:trackInActiveGroup.groupId}`);const curDetails=trackInActiveGroup.details;trackInActiveGroup.details=data.details,this.log(`Subtitle track ${id} "${trackInActiveGroup.name}" lang:${trackInActiveGroup.lang} group:${groupId} loaded [${details.startSN}-${details.endSN}]`),id===this.trackId&&this.playlistLoaded(id,data,curDetails)}onLevelLoading(event,data){this.switchLevel(data.level)}onLevelSwitching(event,data){this.switchLevel(data.level)}switchLevel(levelIndex){const levelInfo=this.hls.levels[levelIndex];if(!levelInfo)return;const subtitleGroups=levelInfo.subtitleGroups||null,currentGroups=this.groupIds;let currentTrack=this.currentTrack;if(!subtitleGroups||(null==currentGroups?void 0:currentGroups.length)!==(null==subtitleGroups?void 0:subtitleGroups.length)||null!=subtitleGroups&&subtitleGroups.some((groupId=>-1===(null==currentGroups?void 0:currentGroups.indexOf(groupId))))){this.groupIds=subtitleGroups,this.trackId=-1,this.currentTrack=null;const subtitleTracks=this.tracks.filter((track=>!subtitleGroups||-1!==subtitleGroups.indexOf(track.groupId)));if(subtitleTracks.length)this.selectDefaultTrack&&!subtitleTracks.some((track=>track.default))&&(this.selectDefaultTrack=!1),subtitleTracks.forEach(((track,i)=>{track.id=i}));else if(!currentTrack&&!this.tracksInGroup.length)return;this.tracksInGroup=subtitleTracks;const subtitlePreference=this.hls.config.subtitlePreference;if(!currentTrack&&subtitlePreference){this.selectDefaultTrack=!1;const groupIndex=findMatchingOption(subtitlePreference,subtitleTracks);if(groupIndex>-1)currentTrack=subtitleTracks[groupIndex];else{const allIndex=findMatchingOption(subtitlePreference,this.tracks);currentTrack=this.tracks[allIndex]}}let trackId=this.findTrackId(currentTrack);-1===trackId&&currentTrack&&(trackId=this.findTrackId(null));const subtitleTracksUpdated={subtitleTracks};this.log(`Updating subtitle tracks, ${subtitleTracks.length} track(s) found in "${null==subtitleGroups?void 0:subtitleGroups.join(",")}" group-id`),this.hls.trigger(Events.SUBTITLE_TRACKS_UPDATED,subtitleTracksUpdated),-1!==trackId&&-1===this.trackId&&this.setSubtitleTrack(trackId)}}findTrackId(currentTrack){const tracks=this.tracksInGroup,selectDefault=this.selectDefaultTrack;for(let i=0;i<tracks.length;i++){const track=tracks[i];if((!selectDefault||track.default)&&(selectDefault||currentTrack)&&(!currentTrack||matchesOption(track,currentTrack)))return i}if(currentTrack){for(let i=0;i<tracks.length;i++){const track=tracks[i];if(mediaAttributesIdentical(currentTrack.attrs,track.attrs,["LANGUAGE","ASSOC-LANGUAGE","CHARACTERISTICS"]))return i}for(let i=0;i<tracks.length;i++){const track=tracks[i];if(mediaAttributesIdentical(currentTrack.attrs,track.attrs,["LANGUAGE"]))return i}}return-1}findTrackForTextTrack(textTrack){if(textTrack){const tracks=this.tracksInGroup;for(let i=0;i<tracks.length;i++){if(subtitleTrackMatchesTextTrack(tracks[i],textTrack))return i}}return-1}onError(event,data){!data.fatal&&data.context&&(data.context.type!==PlaylistContextType_SUBTITLE_TRACK||data.context.id!==this.trackId||this.groupIds&&-1===this.groupIds.indexOf(data.context.groupId)||this.checkRetry(data))}get allSubtitleTracks(){return this.tracks}get subtitleTracks(){return this.tracksInGroup}get subtitleTrack(){return this.trackId}set subtitleTrack(newId){this.selectDefaultTrack=!1,this.setSubtitleTrack(newId)}setSubtitleOption(subtitleOption){if(this.hls.config.subtitlePreference=subtitleOption,subtitleOption){if(-1===subtitleOption.id)return this.setSubtitleTrack(-1),null;const allSubtitleTracks=this.allSubtitleTracks;if(this.selectDefaultTrack=!1,allSubtitleTracks.length){const currentTrack=this.currentTrack;if(currentTrack&&matchesOption(subtitleOption,currentTrack))return currentTrack;const groupIndex=findMatchingOption(subtitleOption,this.tracksInGroup);if(groupIndex>-1){const track=this.tracksInGroup[groupIndex];return this.setSubtitleTrack(groupIndex),track}if(currentTrack)return null;{const allIndex=findMatchingOption(subtitleOption,allSubtitleTracks);if(allIndex>-1)return allSubtitleTracks[allIndex]}}}return null}loadPlaylist(hlsUrlParameters){super.loadPlaylist(),this.shouldLoadPlaylist(this.currentTrack)&&this.scheduleLoading(this.currentTrack,hlsUrlParameters)}loadingPlaylist(currentTrack,hlsUrlParameters){super.loadingPlaylist(currentTrack,hlsUrlParameters);const id=currentTrack.id,groupId=currentTrack.groupId,url=this.getUrlWithDirectives(currentTrack.url,hlsUrlParameters),details=currentTrack.details,age=null==details?void 0:details.age;this.log(`Loading subtitle ${id} "${currentTrack.name}" lang:${currentTrack.lang} group:${groupId}${void 0!==(null==hlsUrlParameters?void 0:hlsUrlParameters.msn)?" at sn "+hlsUrlParameters.msn+" part "+hlsUrlParameters.part:""}${age&&details.live?" age "+age.toFixed(1)+(details.type?" "+details.type||0:""):""} ${url}`),this.hls.trigger(Events.SUBTITLE_TRACK_LOADING,{url,id,groupId,deliveryDirectives:hlsUrlParameters||null,track:currentTrack})}toggleTrackModes(){const{media}=this;if(!media)return;const textTracks=filterSubtitleTracks(media.textTracks),currentTrack=this.currentTrack;let nextTrack;if(currentTrack&&(nextTrack=textTracks.filter((textTrack=>subtitleTrackMatchesTextTrack(currentTrack,textTrack)))[0],nextTrack||this.warn(`Unable to find subtitle TextTrack with name "${currentTrack.name}" and language "${currentTrack.lang}"`)),[].slice.call(textTracks).forEach((track=>{"disabled"!==track.mode&&track!==nextTrack&&(track.mode="disabled")})),nextTrack){const mode=this.subtitleDisplay?"showing":"hidden";nextTrack.mode!==mode&&(nextTrack.mode=mode)}}setSubtitleTrack(newId){const tracks=this.tracksInGroup;if(!this.media)return void(this.queuedDefaultTrack=newId);if(newId<-1||newId>=tracks.length||!isFiniteNumber(newId))return void this.warn(`Invalid subtitle track id: ${newId}`);this.selectDefaultTrack=!1;const lastTrack=this.currentTrack,track=tracks[newId]||null;if(this.trackId=newId,this.currentTrack=track,this.toggleTrackModes(),!track)return void this.hls.trigger(Events.SUBTITLE_TRACK_SWITCH,{id:newId});const trackLoaded=!!track.details&&!track.details.live;if(newId===this.trackId&&track===lastTrack&&trackLoaded)return;this.log(`Switching to subtitle-track ${newId}`+(track?` "${track.name}" lang:${track.lang} group:${track.groupId}`:""));const{id,groupId="",name,type,url}=track;this.hls.trigger(Events.SUBTITLE_TRACK_SWITCH,{id,groupId,name,type,url});const hlsUrlParameters=this.switchParams(track.url,null==lastTrack?void 0:lastTrack.details,track.details);this.loadPlaylist(hlsUrlParameters)}}function hash(text){let hash=5381,i=text.length;for(;i;)hash=33*hash^text.charCodeAt(--i);return(hash>>>0).toString()}let TimelineOccupancy=function(TimelineOccupancy){return TimelineOccupancy[TimelineOccupancy.Point=0]="Point",TimelineOccupancy[TimelineOccupancy.Range=1]="Range",TimelineOccupancy}({});function generateAssetIdentifier(interstitial,uri,assetListIndex){return`${interstitial.identifier}-${assetListIndex+1}-${hash(uri)}`}class InterstitialEvent{constructor(dateRange,base){this.base=void 0,this._duration=null,this._timelineStart=null,this.appendInPlaceDisabled=void 0,this.appendInPlaceStarted=void 0,this.dateRange=void 0,this.hasPlayed=!1,this.cumulativeDuration=0,this.resumeOffset=NaN,this.playoutLimit=NaN,this.restrictions={skip:!1,jump:!1},this.snapOptions={out:!1,in:!1},this.assetList=[],this.assetListLoader=void 0,this.assetListResponse=null,this.resumeAnchor=void 0,this.error=void 0,this.resetOnResume=void 0,this.base=base,this.dateRange=dateRange,this.setDateRange(dateRange)}setDateRange(dateRange){this.dateRange=dateRange,this.resumeOffset=dateRange.attr.optionalFloat("X-RESUME-OFFSET",this.resumeOffset),this.playoutLimit=dateRange.attr.optionalFloat("X-PLAYOUT-LIMIT",this.playoutLimit),this.restrictions=dateRange.attr.enumeratedStringList("X-RESTRICT",this.restrictions),this.snapOptions=dateRange.attr.enumeratedStringList("X-SNAP",this.snapOptions)}reset(){var _this$assetListLoader;this.appendInPlaceStarted=!1,null==(_this$assetListLoader=this.assetListLoader)||_this$assetListLoader.destroy(),this.assetListLoader=void 0,this.supplementsPrimary||(this.assetListResponse=null,this.assetList=[],this._duration=null)}isAssetPastPlayoutLimit(assetIndex){var _this$assetList$asset;if(assetIndex>0&&assetIndex>=this.assetList.length)return!0;const playoutLimit=this.playoutLimit;if(assetIndex<=0||isNaN(playoutLimit))return!1;if(0===playoutLimit)return!0;return((null==(_this$assetList$asset=this.assetList[assetIndex])?void 0:_this$assetList$asset.startOffset)||0)>playoutLimit}findAssetIndex(asset){return this.assetList.indexOf(asset)}get identifier(){return this.dateRange.id}get startDate(){return this.dateRange.startDate}get startTime(){const startTime=this.dateRange.startTime;if(this.snapOptions.out){const frag=this.dateRange.tagAnchor;if(frag)return getSnapToFragmentTime(startTime,frag)}return startTime}get startOffset(){return this.cue.pre?0:this.startTime}get startIsAligned(){if(0===this.startTime||this.snapOptions.out)return!0;const frag=this.dateRange.tagAnchor;if(frag){const startTime=this.dateRange.startTime;return startTime-getSnapToFragmentTime(startTime,frag)<.1}return!1}get resumptionOffset(){const resumeOffset=this.resumeOffset,offset=isFiniteNumber(resumeOffset)?resumeOffset:this.duration;return this.cumulativeDuration+offset}get resumeTime(){const resumeTime=this.startOffset+this.resumptionOffset;if(this.snapOptions.in){const frag=this.resumeAnchor;if(frag)return getSnapToFragmentTime(resumeTime,frag)}return resumeTime}get appendInPlace(){return!!this.appendInPlaceStarted||!this.appendInPlaceDisabled&&!(this.cue.once||this.cue.pre||!this.startIsAligned||!(isNaN(this.playoutLimit)&&isNaN(this.resumeOffset)||this.resumeOffset&&this.duration&&Math.abs(this.resumeOffset-this.duration)<.025))}set appendInPlace(value){this.appendInPlaceStarted?this.resetOnResume=!value:this.appendInPlaceDisabled=!value}get timelineStart(){return null!==this._timelineStart?this._timelineStart:this.startTime}set timelineStart(value){this._timelineStart=value}get duration(){const playoutLimit=this.playoutLimit;let duration;return duration=null!==this._duration?this._duration:this.dateRange.duration?this.dateRange.duration:this.dateRange.plannedDuration||0,!isNaN(playoutLimit)&&playoutLimit<duration&&(duration=playoutLimit),duration}set duration(value){this._duration=value}get cue(){return this.dateRange.cue}get timelineOccupancy(){return"RANGE"===this.dateRange.attr["X-TIMELINE-OCCUPIES"]?TimelineOccupancy.Range:TimelineOccupancy.Point}get supplementsPrimary(){return"PRIMARY"===this.dateRange.attr["X-TIMELINE-STYLE"]}get contentMayVary(){return"NO"!==this.dateRange.attr["X-CONTENT-MAY-VARY"]}get assetUrl(){return this.dateRange.attr["X-ASSET-URI"]}get assetListUrl(){return this.dateRange.attr["X-ASSET-LIST"]}get baseUrl(){return this.base.url}get assetListLoaded(){return this.assetList.length>0||null!==this.assetListResponse}toString(){return function eventToString(interstitial){return`["${interstitial.identifier}" ${interstitial.cue.pre?"<pre>":interstitial.cue.post?"<post>":""}${interstitial.timelineStart.toFixed(2)}-${interstitial.resumeTime.toFixed(2)}]`}(this)}}function getSnapToFragmentTime(time,frag){return time-frag.start<frag.duration/2&&!(Math.abs(time-(frag.start+frag.duration))<.025)?frag.start:frag.start+frag.duration}function getInterstitialUrl(uri,sessionId,baseUrl){const url=new self.URL(uri,baseUrl);return"data:"!==url.protocol&&url.searchParams.set("_HLS_primary_id",sessionId),url}function getNextAssetIndex(interstitial,assetListIndex){for(;null!=(_interstitial$assetLi=interstitial.assetList[++assetListIndex])&&_interstitial$assetLi.error;)var _interstitial$assetLi;return assetListIndex}function eventAssetToString(asset){const start=asset.timelineStart,duration=asset.duration||0;return`["${asset.identifier}" ${start.toFixed(2)}-${(start+duration).toFixed(2)}]`}class HlsAssetPlayer{constructor(HlsPlayerClass,userConfig,interstitial,assetItem){this.hls=void 0,this.interstitial=void 0,this.assetItem=void 0,this.tracks=null,this.hasDetails=!1,this.mediaAttached=null,this._currentTime=void 0,this._bufferedEosTime=void 0,this.checkPlayout=()=>{this.reachedPlayout(this.currentTime)&&this.hls&&this.hls.trigger(Events.PLAYOUT_LIMIT_REACHED,{})};const hls=this.hls=new HlsPlayerClass(userConfig);this.interstitial=interstitial,this.assetItem=assetItem;const detailsLoaded=()=>{this.hasDetails=!0};hls.once(Events.LEVEL_LOADED,detailsLoaded),hls.once(Events.AUDIO_TRACK_LOADED,detailsLoaded),hls.once(Events.SUBTITLE_TRACK_LOADED,detailsLoaded),hls.on(Events.MEDIA_ATTACHING,((name,{media})=>{this.removeMediaListeners(),this.mediaAttached=media;this.interstitial.playoutLimit&&(media.addEventListener("timeupdate",this.checkPlayout),this.appendInPlace&&hls.on(Events.BUFFER_APPENDED,(()=>{const bufferedEnd=this.bufferedEnd;this.reachedPlayout(bufferedEnd)&&(this._bufferedEosTime=bufferedEnd,hls.trigger(Events.BUFFERED_TO_END,void 0))})))}))}get appendInPlace(){return this.interstitial.appendInPlace}loadSource(){const hls=this.hls;if(hls)if(hls.url)hls.levels.length&&!hls.started&&hls.startLoad(-1,!0);else{let uri=this.assetItem.uri;try{uri=getInterstitialUrl(uri,hls.config.primarySessionId||"").href}catch(error){}hls.loadSource(uri)}}bufferedInPlaceToEnd(media){var _this$hls;if(!this.appendInPlace)return!1;if(null!=(_this$hls=this.hls)&&_this$hls.bufferedToEnd)return!0;if(!media)return!1;const duration=Math.min(this._bufferedEosTime||1/0,this.duration),start=this.timelineOffset,bufferInfo=BufferHelper.bufferInfo(media,start,0);return this.getAssetTime(bufferInfo.end)>=duration-.02}reachedPlayout(time){const playoutLimit=this.interstitial.playoutLimit;return this.startOffset+time>=playoutLimit}get destroyed(){var _this$hls2;return!(null!=(_this$hls2=this.hls)&&_this$hls2.userConfig)}get assetId(){return this.assetItem.identifier}get interstitialId(){return this.assetItem.parentIdentifier}get media(){var _this$hls3;return(null==(_this$hls3=this.hls)?void 0:_this$hls3.media)||null}get bufferedEnd(){const media=this.media||this.mediaAttached;if(!media)return this._bufferedEosTime?this._bufferedEosTime:this.currentTime;const bufferInfo=BufferHelper.bufferInfo(media,media.currentTime,.001);return this.getAssetTime(bufferInfo.end)}get currentTime(){const media=this.media||this.mediaAttached;return media?this.getAssetTime(media.currentTime):this._currentTime||0}get duration(){const duration=this.assetItem.duration;if(!duration)return 0;const playoutLimit=this.interstitial.playoutLimit;if(playoutLimit){const assetPlayout=playoutLimit-this.startOffset;if(assetPlayout>0&&assetPlayout<duration)return assetPlayout}return duration}get remaining(){const duration=this.duration;return duration?Math.max(0,duration-this.currentTime):0}get startOffset(){return this.assetItem.startOffset}get timelineOffset(){var _this$hls4;return(null==(_this$hls4=this.hls)?void 0:_this$hls4.config.timelineOffset)||0}set timelineOffset(value){const timelineOffset=this.timelineOffset;if(value!==timelineOffset){const diff=value-timelineOffset;if(Math.abs(diff)>1/9e4&&this.hls){if(this.hasDetails)throw new Error("Cannot set timelineOffset after playlists are loaded");this.hls.config.timelineOffset=value}}}getAssetTime(time){const timelineOffset=this.timelineOffset,duration=this.duration;return Math.min(Math.max(0,time-timelineOffset),duration)}removeMediaListeners(){const media=this.mediaAttached;media&&(this._currentTime=media.currentTime,this.bufferSnapShot(),media.removeEventListener("timeupdate",this.checkPlayout))}bufferSnapShot(){var _this$hls5;this.mediaAttached&&(null!=(_this$hls5=this.hls)&&_this$hls5.bufferedToEnd&&(this._bufferedEosTime=this.bufferedEnd))}destroy(){this.removeMediaListeners(),this.hls&&this.hls.destroy(),this.hls=null,this.tracks=this.mediaAttached=this.checkPlayout=null}attachMedia(data){var _this$hls6;this.loadSource(),null==(_this$hls6=this.hls)||_this$hls6.attachMedia(data)}detachMedia(){var _this$hls7;this.removeMediaListeners(),this.mediaAttached=null,null==(_this$hls7=this.hls)||_this$hls7.detachMedia()}resumeBuffering(){var _this$hls8;null==(_this$hls8=this.hls)||_this$hls8.resumeBuffering()}pauseBuffering(){var _this$hls9;null==(_this$hls9=this.hls)||_this$hls9.pauseBuffering()}transferMedia(){var _this$hls0;return this.bufferSnapShot(),(null==(_this$hls0=this.hls)?void 0:_this$hls0.transferMedia())||null}resetDetails(){const hls=this.hls;if(hls&&this.hasDetails){hls.stopLoad();const deleteDetails=obj=>delete obj.details;hls.levels.forEach(deleteDetails),hls.allAudioTracks.forEach(deleteDetails),hls.allSubtitleTracks.forEach(deleteDetails),this.hasDetails=!1}}on(event,listener,context){var _this$hls1;null==(_this$hls1=this.hls)||_this$hls1.on(event,listener)}once(event,listener,context){var _this$hls10;null==(_this$hls10=this.hls)||_this$hls10.once(event,listener)}off(event,listener,context){var _this$hls11;null==(_this$hls11=this.hls)||_this$hls11.off(event,listener)}toString(){var _this$hls12;return`HlsAssetPlayer: ${eventAssetToString(this.assetItem)} ${null==(_this$hls12=this.hls)?void 0:_this$hls12.sessionId} ${this.appendInPlace?"append-in-place":""}`}}class InterstitialsSchedule extends Logger{constructor(onScheduleUpdate,logger){super("interstitials-sched",logger),this.onScheduleUpdate=void 0,this.eventMap={},this.events=null,this.items=null,this.durations={primary:0,playout:0,integrated:0},this.onScheduleUpdate=onScheduleUpdate}destroy(){this.reset(),this.onScheduleUpdate=null}reset(){this.eventMap={},this.setDurations(0,0,0),this.events&&this.events.forEach((interstitial=>interstitial.reset())),this.events=this.items=null}resetErrorsInRange(start,end){return this.events?this.events.reduce(((count,interstitial)=>start<=interstitial.startOffset&&end>interstitial.startOffset?(delete interstitial.error,count+1):count),0):0}get duration(){const items=this.items;return items?items[items.length-1].end:0}get length(){return this.items?this.items.length:0}getEvent(identifier){return identifier&&this.eventMap[identifier]||null}hasEvent(identifier){return identifier in this.eventMap}findItemIndex(item,time){if(item.event)return this.findEventIndex(item.event.identifier);let index=-1;item.nextEvent?index=this.findEventIndex(item.nextEvent.identifier)-1:item.previousEvent&&(index=this.findEventIndex(item.previousEvent.identifier)+1);const items=this.items;if(items)for(items[index]||(void 0===time&&(time=item.start),index=this.findItemIndexAtTime(time));index>=0&&null!=(_items$index=items[index])&&_items$index.event;){var _items$index;index--}return index}findItemIndexAtTime(timelinePos,timelineType){const items=this.items;if(items)for(let i=0;i<items.length;i++){let timeRange=items[i];if(timelineType&&"primary"!==timelineType&&(timeRange=timeRange[timelineType]),timelinePos===timeRange.start||timelinePos>timeRange.start&&timelinePos<timeRange.end)return i}return-1}findJumpRestrictedIndex(startIndex,endIndex){const items=this.items;if(items)for(let i=startIndex;i<=endIndex&&items[i];i++){const event=items[i].event;if(null!=event&&event.restrictions.jump&&!event.appendInPlace)return i}return-1}findEventIndex(identifier){const items=this.items;if(items)for(let i=items.length;i--;){var _items$i$event;if((null==(_items$i$event=items[i].event)?void 0:_items$i$event.identifier)===identifier)return i}return-1}findAssetIndex(event,timelinePos){const assetList=event.assetList,length=assetList.length;if(length>1)for(let i=0;i<length;i++){const asset=assetList[i];if(!asset.error){const timelineStart=asset.timelineStart;if(timelinePos===timelineStart||timelinePos>timelineStart&&(timelinePos<timelineStart+(asset.duration||0)||i===length-1))return i}}return 0}get assetIdAtEnd(){var _this$items;const interstitialAtEnd=null==(_this$items=this.items)||null==(_this$items=_this$items[this.length-1])?void 0:_this$items.event;if(interstitialAtEnd){const assetList=interstitialAtEnd.assetList,assetAtEnd=assetList[assetList.length-1];if(assetAtEnd)return assetAtEnd.identifier}return null}parseInterstitialDateRanges(mediaSelection,enableAppendInPlace){const details=mediaSelection.main.details,{dateRanges}=details,previousInterstitialEvents=this.events,interstitialEvents=this.parseDateRanges(dateRanges,{url:details.url},enableAppendInPlace),ids=Object.keys(dateRanges),removedInterstitials=previousInterstitialEvents?previousInterstitialEvents.filter((event=>!ids.includes(event.identifier))):[];interstitialEvents.length&&interstitialEvents.sort(((a,b)=>{const aPre=a.cue.pre,aPost=a.cue.post,bPre=b.cue.pre,bPost=b.cue.post;if(aPre&&!bPre)return-1;if(bPre&&!aPre)return 1;if(aPost&&!bPost)return 1;if(bPost&&!aPost)return-1;if(!(aPre||bPre||aPost||bPost)){const startA=a.startTime,startB=b.startTime;if(startA!==startB)return startA-startB}return a.dateRange.tagOrder-b.dateRange.tagOrder})),this.events=interstitialEvents,removedInterstitials.forEach((interstitial=>{this.removeEvent(interstitial)})),this.updateSchedule(mediaSelection,removedInterstitials)}updateSchedule(mediaSelection,removedInterstitials=[],forceUpdate=!1){const events=this.events||[];if(events.length||removedInterstitials.length||this.length<2){const currentItems=this.items,updatedItems=this.parseSchedule(events,mediaSelection);(forceUpdate||removedInterstitials.length||(null==currentItems?void 0:currentItems.length)!==updatedItems.length||updatedItems.some(((item,i)=>Math.abs(item.playout.start-currentItems[i].playout.start)>.005||Math.abs(item.playout.end-currentItems[i].playout.end)>.005)))&&(this.items=updatedItems,this.onScheduleUpdate(removedInterstitials,currentItems))}}parseDateRanges(dateRanges,baseData,enableAppendInPlace){const interstitialEvents=[],ids=Object.keys(dateRanges);for(let i=0;i<ids.length;i++){const id=ids[i],dateRange=dateRanges[id];if(dateRange.isInterstitial){let interstitial=this.eventMap[id];interstitial?interstitial.setDateRange(dateRange):(interstitial=new InterstitialEvent(dateRange,baseData),this.eventMap[id]=interstitial,!1===enableAppendInPlace&&(interstitial.appendInPlace=enableAppendInPlace)),interstitialEvents.push(interstitial)}}return interstitialEvents}parseSchedule(interstitialEvents,mediaSelection){const schedule=[],details=mediaSelection.main.details,primaryDuration=details.live?1/0:details.edge;let playoutDuration=0;if((interstitialEvents=interstitialEvents.filter((event=>!(event.error||event.cue.once&&event.hasPlayed)))).length){this.resolveOffsets(interstitialEvents,mediaSelection);let primaryPosition=0,integratedTime=0;if(interstitialEvents.forEach(((interstitial,i)=>{const preroll=interstitial.cue.pre,postroll=interstitial.cue.post,previousEvent=interstitialEvents[i-1]||null,appendInPlace=interstitial.appendInPlace,eventStart=postroll?primaryDuration:interstitial.startOffset,interstitialDuration=interstitial.duration,timelineDuration=interstitial.timelineOccupancy===TimelineOccupancy.Range?interstitialDuration:0,resumptionOffset=interstitial.resumptionOffset,inSameStartTimeSequence=(null==previousEvent?void 0:previousEvent.startTime)===eventStart,start=eventStart+interstitial.cumulativeDuration;let end=appendInPlace?start+interstitialDuration:eventStart+resumptionOffset;if(preroll||!postroll&&eventStart<=0){const integratedStart=integratedTime;integratedTime+=timelineDuration,interstitial.timelineStart=start;const playoutStart=playoutDuration;playoutDuration+=interstitialDuration,schedule.push({event:interstitial,start,end,playout:{start:playoutStart,end:playoutDuration},integrated:{start:integratedStart,end:integratedTime}})}else{if(!(eventStart<=primaryDuration))return;{if(!inSameStartTimeSequence){const segmentDuration=eventStart-primaryPosition;if(segmentDuration>.033){const timelineStart=primaryPosition,_integratedStart=integratedTime;integratedTime+=segmentDuration;const _playoutStart=playoutDuration;playoutDuration+=segmentDuration;const primarySegment={previousEvent:interstitialEvents[i-1]||null,nextEvent:interstitial,start:timelineStart,end:timelineStart+segmentDuration,playout:{start:_playoutStart,end:playoutDuration},integrated:{start:_integratedStart,end:integratedTime}};schedule.push(primarySegment)}else segmentDuration>0&&previousEvent&&(previousEvent.cumulativeDuration+=segmentDuration,schedule[schedule.length-1].end=eventStart)}postroll&&(end=start),interstitial.timelineStart=start;const integratedStart=integratedTime;integratedTime+=timelineDuration;const playoutStart=playoutDuration;playoutDuration+=interstitialDuration,schedule.push({event:interstitial,start,end,playout:{start:playoutStart,end:playoutDuration},integrated:{start:integratedStart,end:integratedTime}})}}const resumeTime=interstitial.resumeTime;primaryPosition=postroll||resumeTime>primaryDuration?primaryDuration:resumeTime})),primaryPosition<primaryDuration){var _schedule;const timelineStart=primaryPosition,integratedStart=integratedTime,segmentDuration=primaryDuration-primaryPosition;integratedTime+=segmentDuration;const playoutStart=playoutDuration;playoutDuration+=segmentDuration,schedule.push({previousEvent:(null==(_schedule=schedule[schedule.length-1])?void 0:_schedule.event)||null,nextEvent:null,start:primaryPosition,end:timelineStart+segmentDuration,playout:{start:playoutStart,end:playoutDuration},integrated:{start:integratedStart,end:integratedTime}})}this.setDurations(primaryDuration,playoutDuration,integratedTime)}else{const start=0;schedule.push({previousEvent:null,nextEvent:null,start,end:primaryDuration,playout:{start,end:primaryDuration},integrated:{start,end:primaryDuration}}),this.setDurations(primaryDuration,primaryDuration,primaryDuration)}return schedule}setDurations(primary,playout,integrated){this.durations={primary,playout,integrated}}resolveOffsets(interstitialEvents,mediaSelection){const details=mediaSelection.main.details,primaryDuration=details.live?1/0:details.edge;let cumulativeDuration=0,lastScheduledStart=-1;interstitialEvents.forEach(((interstitial,i)=>{const preroll=interstitial.cue.pre,postroll=interstitial.cue.post,eventStart=preroll?0:postroll?primaryDuration:interstitial.startTime;this.updateAssetDurations(interstitial);if(lastScheduledStart===eventStart?interstitial.cumulativeDuration=cumulativeDuration:(cumulativeDuration=0,lastScheduledStart=eventStart),!postroll&&interstitial.snapOptions.in&&(interstitial.resumeAnchor=findFragmentByPTS(null,details.fragments,interstitial.startOffset+interstitial.resumptionOffset,0,0)||void 0),interstitial.appendInPlace&&!interstitial.appendInPlaceStarted){this.primaryCanResumeInPlaceAt(interstitial,mediaSelection)||(interstitial.appendInPlace=!1)}if(!interstitial.appendInPlace&&i+1<interstitialEvents.length){interstitialEvents[i+1].startTime-interstitialEvents[i].resumeTime<.033&&(interstitialEvents[i+1].appendInPlace=!1,interstitialEvents[i+1].appendInPlace&&this.warn(`Could not change append strategy for abutting event ${interstitial}`))}const resumeOffset=isFiniteNumber(interstitial.resumeOffset)?interstitial.resumeOffset:interstitial.duration;cumulativeDuration+=resumeOffset}))}primaryCanResumeInPlaceAt(interstitial,mediaSelection){const resumeTime=interstitial.resumeTime,resumesInPlaceAt=interstitial.startTime+interstitial.resumptionOffset;if(Math.abs(resumeTime-resumesInPlaceAt)>.025)return this.log(`"${interstitial.identifier}" resumption ${resumeTime} not aligned with estimated timeline end ${resumesInPlaceAt}`),!1;return!Object.keys(mediaSelection).some((playlistType=>{const details=mediaSelection[playlistType].details,playlistEnd=details.edge;if(resumeTime>=playlistEnd)return this.log(`"${interstitial.identifier}" resumption ${resumeTime} past ${playlistType} playlist end ${playlistEnd}`),!1;const startFragment=findFragmentByPTS(null,details.fragments,resumeTime);if(!startFragment)return this.log(`"${interstitial.identifier}" resumption ${resumeTime} does not align with any fragments in ${playlistType} playlist (${details.fragStart}-${details.fragmentEnd})`),!0;const allowance="audio"===playlistType?.175:0;return!(Math.abs(startFragment.start-resumeTime)<.025+allowance||Math.abs(startFragment.end-resumeTime)<.025+allowance)&&(this.log(`"${interstitial.identifier}" resumption ${resumeTime} not aligned with ${playlistType} fragment bounds (${startFragment.start}-${startFragment.end} sn: ${startFragment.sn} cc: ${startFragment.cc})`),!0)}))}updateAssetDurations(interstitial){if(!interstitial.assetListLoaded)return;const eventStart=interstitial.timelineStart;let sumDuration=0,hasUnknownDuration=!1,hasErrors=!1;for(let i=0;i<interstitial.assetList.length;i++){const asset=interstitial.assetList[i],timelineStart=eventStart+sumDuration;asset.startOffset=sumDuration,asset.timelineStart=timelineStart,hasUnknownDuration||(hasUnknownDuration=null===asset.duration),hasErrors||(hasErrors=!!asset.error);sumDuration+=asset.error?0:asset.duration||0}interstitial.duration=hasUnknownDuration&&!hasErrors?Math.max(sumDuration,interstitial.duration):sumDuration}removeEvent(interstitial){interstitial.reset(),delete this.eventMap[interstitial.identifier]}}function segmentToString(segment){return`[${segment.event?'"'+segment.event.identifier+'"':"primary"}: ${segment.start.toFixed(2)}-${segment.end.toFixed(2)}]`}class AssetListLoader{constructor(hls){this.hls=void 0,this.hls=hls}destroy(){this.hls=null}loadAssetList(interstitial,hlsStartOffset){const assetListUrl=interstitial.assetListUrl;let url;try{url=getInterstitialUrl(assetListUrl,this.hls.sessionId,interstitial.baseUrl)}catch(error){const errorData=this.assignAssetListError(interstitial,ErrorDetails.ASSET_LIST_LOAD_ERROR,error,assetListUrl);return void this.hls.trigger(Events.ERROR,errorData)}hlsStartOffset&&"data:"!==url.protocol&&url.searchParams.set("_HLS_start_offset",""+hlsStartOffset);const config=this.hls.config,loader=new(0,config.loader)(config),context={responseType:"json",url:url.href},loadPolicy=config.interstitialAssetListLoadPolicy.default,loaderConfig={loadPolicy,timeout:loadPolicy.maxLoadTimeMs,maxRetry:0,retryDelay:0,maxRetryDelay:0},callbacks={onSuccess:(response,stats,context,networkDetails)=>{const assetListResponse=response.data,assets=null==assetListResponse?void 0:assetListResponse.ASSETS;if(Array.isArray(assets))interstitial.assetListResponse=assetListResponse,this.hls.trigger(Events.ASSET_LIST_LOADED,{event:interstitial,assetListResponse,networkDetails});else{const errorData=this.assignAssetListError(interstitial,ErrorDetails.ASSET_LIST_PARSING_ERROR,new Error("Invalid interstitial asset list"),context.url,stats,networkDetails);this.hls.trigger(Events.ERROR,errorData)}},onError:(error,context,networkDetails,stats)=>{const errorData=this.assignAssetListError(interstitial,ErrorDetails.ASSET_LIST_LOAD_ERROR,new Error(`Error loading X-ASSET-LIST: HTTP status ${error.code} ${error.text} (${context.url})`),context.url,stats,networkDetails);this.hls.trigger(Events.ERROR,errorData)},onTimeout:(stats,context,networkDetails)=>{const errorData=this.assignAssetListError(interstitial,ErrorDetails.ASSET_LIST_LOAD_TIMEOUT,new Error(`Timeout loading X-ASSET-LIST (${context.url})`),context.url,stats,networkDetails);this.hls.trigger(Events.ERROR,errorData)}};return loader.load(context,loaderConfig,callbacks),this.hls.trigger(Events.ASSET_LIST_LOADING,{event:interstitial}),loader}assignAssetListError(interstitial,details,error,url,stats,networkDetails){return interstitial.error=error,{type:ErrorTypes.NETWORK_ERROR,details,fatal:!1,interstitial,url,error,networkDetails,stats}}}function playWithCatch(media){null==media||media.play().catch((()=>{}))}class SubtitleStreamController extends BaseStreamController{constructor(hls,fragmentTracker,keyLoader){super(hls,fragmentTracker,keyLoader,"subtitle-stream-controller",PlaylistLevelType.SUBTITLE),this.currentTrackId=-1,this.tracksBuffered=[],this.mainDetails=null,this.registerListeners()}onHandlerDestroying(){this.unregisterListeners(),super.onHandlerDestroying(),this.mainDetails=null}registerListeners(){super.registerListeners();const{hls}=this;hls.on(Events.LEVEL_LOADED,this.onLevelLoaded,this),hls.on(Events.SUBTITLE_TRACKS_UPDATED,this.onSubtitleTracksUpdated,this),hls.on(Events.SUBTITLE_TRACK_SWITCH,this.onSubtitleTrackSwitch,this),hls.on(Events.SUBTITLE_TRACK_LOADED,this.onSubtitleTrackLoaded,this),hls.on(Events.SUBTITLE_FRAG_PROCESSED,this.onSubtitleFragProcessed,this),hls.on(Events.BUFFER_FLUSHING,this.onBufferFlushing,this)}unregisterListeners(){super.unregisterListeners();const{hls}=this;hls.off(Events.LEVEL_LOADED,this.onLevelLoaded,this),hls.off(Events.SUBTITLE_TRACKS_UPDATED,this.onSubtitleTracksUpdated,this),hls.off(Events.SUBTITLE_TRACK_SWITCH,this.onSubtitleTrackSwitch,this),hls.off(Events.SUBTITLE_TRACK_LOADED,this.onSubtitleTrackLoaded,this),hls.off(Events.SUBTITLE_FRAG_PROCESSED,this.onSubtitleFragProcessed,this),hls.off(Events.BUFFER_FLUSHING,this.onBufferFlushing,this)}startLoad(startPosition,skipSeekToStartPosition){this.stopLoad(),this.state=State.IDLE,this.setInterval(500),this.nextLoadPosition=this.lastCurrentTime=startPosition+this.timelineOffset,this.startPosition=skipSeekToStartPosition?-1:startPosition,this.tick()}onManifestLoading(){super.onManifestLoading(),this.mainDetails=null}onMediaDetaching(event,data){this.tracksBuffered=[],super.onMediaDetaching(event,data)}onLevelLoaded(event,data){this.mainDetails=data.details}onSubtitleFragProcessed(event,data){const{frag,success}=data;if(this.fragContextChanged(frag)||(isMediaFragment(frag)&&(this.fragPrevious=frag),this.state=State.IDLE),!success)return;const buffered=this.tracksBuffered[this.currentTrackId];if(!buffered)return;let timeRange;const fragStart=frag.start;for(let i=0;i<buffered.length;i++)if(fragStart>=buffered[i].start&&fragStart<=buffered[i].end){timeRange=buffered[i];break}const fragEnd=frag.start+frag.duration;timeRange?timeRange.end=fragEnd:(timeRange={start:fragStart,end:fragEnd},buffered.push(timeRange)),this.fragmentTracker.fragBuffered(frag),this.fragBufferedComplete(frag,null),this.media&&this.tick()}onBufferFlushing(event,data){const{startOffset,endOffset}=data;if(0===startOffset&&endOffset!==Number.POSITIVE_INFINITY){const endOffsetSubtitles=endOffset-1;if(endOffsetSubtitles<=0)return;data.endOffsetSubtitles=Math.max(0,endOffsetSubtitles),this.tracksBuffered.forEach((buffered=>{for(let i=0;i<buffered.length;)if(buffered[i].end<=endOffsetSubtitles)buffered.shift();else{if(!(buffered[i].start<endOffsetSubtitles))break;buffered[i].start=endOffsetSubtitles,i++}})),this.fragmentTracker.removeFragmentsInRange(startOffset,endOffsetSubtitles,PlaylistLevelType.SUBTITLE)}}onError(event,data){const frag=data.frag;(null==frag?void 0:frag.type)===PlaylistLevelType.SUBTITLE&&(data.details===ErrorDetails.FRAG_GAP&&this.fragmentTracker.fragBuffered(frag,!0),this.fragCurrent&&this.fragCurrent.abortRequests(),this.state!==State.STOPPED&&(this.state=State.IDLE))}onSubtitleTracksUpdated(event,{subtitleTracks}){this.levels&&subtitleOptionsIdentical(this.levels,subtitleTracks)?this.levels=subtitleTracks.map((mediaPlaylist=>new Level(mediaPlaylist))):(this.tracksBuffered=[],this.levels=subtitleTracks.map((mediaPlaylist=>{const level=new Level(mediaPlaylist);return this.tracksBuffered[level.id]=[],level})),this.fragmentTracker.removeFragmentsInRange(0,Number.POSITIVE_INFINITY,PlaylistLevelType.SUBTITLE),this.fragPrevious=null,this.mediaBuffer=null)}onSubtitleTrackSwitch(event,data){var _this$levels;if(this.currentTrackId=data.id,null==(_this$levels=this.levels)||!_this$levels.length||-1===this.currentTrackId)return void this.clearInterval();const currentTrack=this.levels[this.currentTrackId];null!=currentTrack&&currentTrack.details?this.mediaBuffer=this.mediaBufferTimeRanges:this.mediaBuffer=null,currentTrack&&this.state!==State.STOPPED&&this.setInterval(500)}onSubtitleTrackLoaded(event,data){var _track$details;const{currentTrackId,levels}=this,{details:newDetails,id:trackId}=data;if(!levels)return void this.warn(`Subtitle tracks were reset while loading level ${trackId}`);const track=levels[trackId];if(trackId>=levels.length||!track)return;this.log(`Subtitle track ${trackId} loaded [${newDetails.startSN},${newDetails.endSN}]${newDetails.lastPartSn?`[part-${newDetails.lastPartSn}-${newDetails.lastPartIndex}]`:""},duration:${newDetails.totalduration}`),this.mediaBuffer=this.mediaBufferTimeRanges;let sliding=0;if(newDetails.live||null!=(_track$details=track.details)&&_track$details.live){if(newDetails.deltaUpdateFailed)return;const mainDetails=this.mainDetails;if(!mainDetails)return void(this.startFragRequested=!1);const mainSlidingStartFragment=mainDetails.fragments[0];var _this$levelLastLoaded;if(track.details)sliding=this.alignPlaylists(newDetails,track.details,null==(_this$levelLastLoaded=this.levelLastLoaded)?void 0:_this$levelLastLoaded.details),0===sliding&&mainSlidingStartFragment&&(sliding=mainSlidingStartFragment.start,addSliding(newDetails,sliding));else newDetails.hasProgramDateTime&&mainDetails.hasProgramDateTime?(alignMediaPlaylistByPDT(newDetails,mainDetails),sliding=newDetails.fragmentStart):mainSlidingStartFragment&&(sliding=mainSlidingStartFragment.start,addSliding(newDetails,sliding));mainDetails&&!this.startFragRequested&&this.setStartPosition(mainDetails,sliding)}if(track.details=newDetails,this.levelLastLoaded=track,trackId===currentTrackId&&(this.hls.trigger(Events.SUBTITLE_TRACK_UPDATED,{details:newDetails,id:trackId,groupId:data.groupId}),this.tick(),newDetails.live&&!this.fragCurrent&&this.media&&this.state===State.IDLE)){findFragmentByPTS(null,newDetails.fragments,this.media.currentTime,0)||(this.warn("Subtitle playlist not aligned with playback"),track.details=void 0)}}_handleFragmentLoadComplete(fragLoadedData){const{frag,payload}=fragLoadedData,decryptData=frag.decryptdata,hls=this.hls;if(!this.fragContextChanged(frag)&&payload&&payload.byteLength>0&&null!=decryptData&&decryptData.key&&decryptData.iv&&isFullSegmentEncryption(decryptData.method)){const startTime=performance.now();this.decrypter.decrypt(new Uint8Array(payload),decryptData.key.buffer,decryptData.iv.buffer,getAesModeFromFullSegmentMethod(decryptData.method)).catch((err=>{throw hls.trigger(Events.ERROR,{type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.FRAG_DECRYPT_ERROR,fatal:!1,error:err,reason:err.message,frag}),err})).then((decryptedData=>{const endTime=performance.now();hls.trigger(Events.FRAG_DECRYPTED,{frag,payload:decryptedData,stats:{tstart:startTime,tdecrypt:endTime}})})).catch((err=>{this.warn(`${err.name}: ${err.message}`),this.state=State.IDLE}))}}doTick(){if(this.media){if(this.state===State.IDLE){const{currentTrackId,levels}=this,track=null==levels?void 0:levels[currentTrackId];if(!track||!levels.length||!track.details)return;if(this.waitForLive(track))return;const{config}=this,currentTime=this.getLoadPosition(),bufferedInfo=BufferHelper.bufferedInfo(this.tracksBuffered[this.currentTrackId]||[],currentTime,config.maxBufferHole),{end:targetBufferTime,len:bufferLen}=bufferedInfo,trackDetails=track.details;if(bufferLen>this.hls.maxBufferLength+trackDetails.levelTargetDuration)return;const fragments=trackDetails.fragments,fragLen=fragments.length,end=trackDetails.edge;let foundFrag=null;const fragPrevious=this.fragPrevious;if(targetBufferTime<end){const tolerance=config.maxFragLookUpTolerance,lookupTolerance=targetBufferTime>end-tolerance?0:tolerance;foundFrag=findFragmentByPTS(fragPrevious,fragments,Math.max(fragments[0].start,targetBufferTime),lookupTolerance),!foundFrag&&fragPrevious&&fragPrevious.start<fragments[0].start&&(foundFrag=fragments[0])}else foundFrag=fragments[fragLen-1];if(foundFrag=this.filterReplacedPrimary(foundFrag,track.details),!foundFrag)return;const prevFrag=fragments[foundFrag.sn-trackDetails.startSN-1];if(prevFrag&&prevFrag.cc===foundFrag.cc&&this.fragmentTracker.getState(prevFrag)===FragmentState_NOT_LOADED&&(foundFrag=prevFrag),this.fragmentTracker.getState(foundFrag)===FragmentState_NOT_LOADED){const fragToLoad=this.mapToInitFragWhenRequired(foundFrag);fragToLoad&&this.loadFragment(fragToLoad,track,targetBufferTime)}}}else this.state=State.IDLE}loadFragment(frag,level,targetBufferTime){isMediaFragment(frag)?super.loadFragment(frag,level,targetBufferTime):this._loadInitSegment(frag,level)}get mediaBufferTimeRanges(){return new BufferableInstance(this.tracksBuffered[this.currentTrackId]||[])}}class BufferableInstance{constructor(timeranges){this.buffered=void 0;const getRange=(name,index,length)=>{if((index>>>=0)>length-1)throw new DOMException(`Failed to execute '${name}' on 'TimeRanges': The index provided (${index}) is greater than the maximum bound (${length})`);return timeranges[index][name]};this.buffered={get length(){return timeranges.length},end:index=>getRange("end",index,timeranges.length),start:index=>getRange("start",index,timeranges.length)}}}const specialCea608CharsCodes={42:225,92:233,94:237,95:243,96:250,123:231,124:247,125:209,126:241,127:9608,128:174,129:176,130:189,131:191,132:8482,133:162,134:163,135:9834,136:224,137:32,138:232,139:226,140:234,141:238,142:244,143:251,144:193,145:201,146:211,147:218,148:220,149:252,150:8216,151:161,152:42,153:8217,154:9473,155:169,156:8480,157:8226,158:8220,159:8221,160:192,161:194,162:199,163:200,164:202,165:203,166:235,167:206,168:207,169:239,170:212,171:217,172:249,173:219,174:171,175:187,176:195,177:227,178:205,179:204,180:236,181:210,182:242,183:213,184:245,185:123,186:125,187:92,188:94,189:95,190:124,191:8764,192:196,193:228,194:214,195:246,196:223,197:165,198:164,199:9475,200:197,201:229,202:216,203:248,204:9487,205:9491,206:9495,207:9499},getCharForByte=byte=>String.fromCharCode(specialCea608CharsCodes[byte]||byte),rowsLowCh1={17:1,18:3,21:5,22:7,23:9,16:11,19:12,20:14},rowsHighCh1={17:2,18:4,21:6,22:8,23:10,19:13,20:15},rowsLowCh2={25:1,26:3,29:5,30:7,31:9,24:11,27:12,28:14},rowsHighCh2={25:2,26:4,29:6,30:8,31:10,27:13,28:15},backgroundColors=["white","green","blue","cyan","red","yellow","magenta","black","transparent"];class CaptionsLogger{constructor(){this.time=null,this.verboseLevel=0}log(severity,msg){if(this.verboseLevel>=severity){const m="function"==typeof msg?msg():msg;logger.log(`${this.time} [${severity}] ${m}`)}}}const numArrayToHexArray=function numArrayToHexArray(numArray){const hexArray=[];for(let j=0;j<numArray.length;j++)hexArray.push(numArray[j].toString(16));return hexArray};class PenState{constructor(){this.foreground="white",this.underline=!1,this.italics=!1,this.background="black",this.flash=!1}reset(){this.foreground="white",this.underline=!1,this.italics=!1,this.background="black",this.flash=!1}setStyles(styles){const attribs=["foreground","underline","italics","background","flash"];for(let i=0;i<attribs.length;i++){const style=attribs[i];styles.hasOwnProperty(style)&&(this[style]=styles[style])}}isDefault(){return"white"===this.foreground&&!this.underline&&!this.italics&&"black"===this.background&&!this.flash}equals(other){return this.foreground===other.foreground&&this.underline===other.underline&&this.italics===other.italics&&this.background===other.background&&this.flash===other.flash}copy(newPenState){this.foreground=newPenState.foreground,this.underline=newPenState.underline,this.italics=newPenState.italics,this.background=newPenState.background,this.flash=newPenState.flash}toString(){return"color="+this.foreground+", underline="+this.underline+", italics="+this.italics+", background="+this.background+", flash="+this.flash}}class StyledUnicodeChar{constructor(){this.uchar=" ",this.penState=new PenState}reset(){this.uchar=" ",this.penState.reset()}setChar(uchar,newPenState){this.uchar=uchar,this.penState.copy(newPenState)}setPenState(newPenState){this.penState.copy(newPenState)}equals(other){return this.uchar===other.uchar&&this.penState.equals(other.penState)}copy(newChar){this.uchar=newChar.uchar,this.penState.copy(newChar.penState)}isEmpty(){return" "===this.uchar&&this.penState.isDefault()}}class Row{constructor(logger){this.chars=[],this.pos=0,this.currPenState=new PenState,this.cueStartTime=null,this.logger=void 0;for(let i=0;i<100;i++)this.chars.push(new StyledUnicodeChar);this.logger=logger}equals(other){for(let i=0;i<100;i++)if(!this.chars[i].equals(other.chars[i]))return!1;return!0}copy(other){for(let i=0;i<100;i++)this.chars[i].copy(other.chars[i])}isEmpty(){let empty=!0;for(let i=0;i<100;i++)if(!this.chars[i].isEmpty()){empty=!1;break}return empty}setCursor(absPos){this.pos!==absPos&&(this.pos=absPos),this.pos<0?(this.logger.log(3,"Negative cursor position "+this.pos),this.pos=0):this.pos>100&&(this.logger.log(3,"Too large cursor position "+this.pos),this.pos=100)}moveCursor(relPos){const newPos=this.pos+relPos;if(relPos>1)for(let i=this.pos+1;i<newPos+1;i++)this.chars[i].setPenState(this.currPenState);this.setCursor(newPos)}backSpace(){this.moveCursor(-1),this.chars[this.pos].setChar(" ",this.currPenState)}insertChar(byte){byte>=144&&this.backSpace();const char=getCharForByte(byte);this.pos>=100?this.logger.log(0,(()=>"Cannot insert "+byte.toString(16)+" ("+char+") at position "+this.pos+". Skipping it!")):(this.chars[this.pos].setChar(char,this.currPenState),this.moveCursor(1))}clearFromPos(startPos){let i;for(i=startPos;i<100;i++)this.chars[i].reset()}clear(){this.clearFromPos(0),this.pos=0,this.currPenState.reset()}clearToEndOfRow(){this.clearFromPos(this.pos)}getTextString(){const chars=[];let empty=!0;for(let i=0;i<100;i++){const char=this.chars[i].uchar;" "!==char&&(empty=!1),chars.push(char)}return empty?"":chars.join("")}setPenStyles(styles){this.currPenState.setStyles(styles);this.chars[this.pos].setPenState(this.currPenState)}}class CaptionScreen{constructor(logger){this.rows=[],this.currRow=14,this.nrRollUpRows=null,this.lastOutputScreen=null,this.logger=void 0;for(let i=0;i<15;i++)this.rows.push(new Row(logger));this.logger=logger}reset(){for(let i=0;i<15;i++)this.rows[i].clear();this.currRow=14}equals(other){let equal=!0;for(let i=0;i<15;i++)if(!this.rows[i].equals(other.rows[i])){equal=!1;break}return equal}copy(other){for(let i=0;i<15;i++)this.rows[i].copy(other.rows[i])}isEmpty(){let empty=!0;for(let i=0;i<15;i++)if(!this.rows[i].isEmpty()){empty=!1;break}return empty}backSpace(){this.rows[this.currRow].backSpace()}clearToEndOfRow(){this.rows[this.currRow].clearToEndOfRow()}insertChar(char){this.rows[this.currRow].insertChar(char)}setPen(styles){this.rows[this.currRow].setPenStyles(styles)}moveCursor(relPos){this.rows[this.currRow].moveCursor(relPos)}setCursor(absPos){this.logger.log(2,"setCursor: "+absPos);this.rows[this.currRow].setCursor(absPos)}setPAC(pacData){this.logger.log(2,(()=>"pacData = "+stringify(pacData)));let newRow=pacData.row-1;if(this.nrRollUpRows&&newRow<this.nrRollUpRows-1&&(newRow=this.nrRollUpRows-1),this.nrRollUpRows&&this.currRow!==newRow){for(let i=0;i<15;i++)this.rows[i].clear();const topRowIndex=this.currRow+1-this.nrRollUpRows,lastOutputScreen=this.lastOutputScreen;if(lastOutputScreen){const prevLineTime=lastOutputScreen.rows[topRowIndex].cueStartTime,time=this.logger.time;if(null!==prevLineTime&&null!==time&&prevLineTime<time)for(let i=0;i<this.nrRollUpRows;i++)this.rows[newRow-this.nrRollUpRows+i+1].copy(lastOutputScreen.rows[topRowIndex+i])}}this.currRow=newRow;const row=this.rows[this.currRow];if(null!==pacData.indent){const indent=pacData.indent,prevPos=Math.max(indent-1,0);row.setCursor(pacData.indent),pacData.color=row.chars[prevPos].penState.foreground}const styles={foreground:pacData.color,underline:pacData.underline,italics:pacData.italics,background:"black",flash:!1};this.setPen(styles)}setBkgData(bkgData){this.logger.log(2,(()=>"bkgData = "+stringify(bkgData))),this.backSpace(),this.setPen(bkgData),this.insertChar(32)}setRollUpRows(nrRows){this.nrRollUpRows=nrRows}rollUp(){if(null===this.nrRollUpRows)return void this.logger.log(3,"roll_up but nrRollUpRows not set yet");this.logger.log(1,(()=>this.getDisplayText()));const topRowIndex=this.currRow+1-this.nrRollUpRows,topRow=this.rows.splice(topRowIndex,1)[0];topRow.clear(),this.rows.splice(this.currRow,0,topRow),this.logger.log(2,"Rolling up")}getDisplayText(asOneRow){asOneRow=asOneRow||!1;const displayText=[];let text="",rowNr=-1;for(let i=0;i<15;i++){const rowText=this.rows[i].getTextString();rowText&&(rowNr=i+1,asOneRow?displayText.push("Row "+rowNr+": '"+rowText+"'"):displayText.push(rowText.trim()))}return displayText.length>0&&(text=asOneRow?"["+displayText.join(" | ")+"]":displayText.join("\n")),text}getTextAndFormat(){return this.rows}}class Cea608Channel{constructor(channelNumber,outputFilter,logger){this.chNr=void 0,this.outputFilter=void 0,this.mode=void 0,this.verbose=void 0,this.displayedMemory=void 0,this.nonDisplayedMemory=void 0,this.lastOutputScreen=void 0,this.currRollUpRow=void 0,this.writeScreen=void 0,this.cueStartTime=void 0,this.logger=void 0,this.chNr=channelNumber,this.outputFilter=outputFilter,this.mode=null,this.verbose=0,this.displayedMemory=new CaptionScreen(logger),this.nonDisplayedMemory=new CaptionScreen(logger),this.lastOutputScreen=new CaptionScreen(logger),this.currRollUpRow=this.displayedMemory.rows[14],this.writeScreen=this.displayedMemory,this.mode=null,this.cueStartTime=null,this.logger=logger}reset(){this.mode=null,this.displayedMemory.reset(),this.nonDisplayedMemory.reset(),this.lastOutputScreen.reset(),this.outputFilter.reset(),this.currRollUpRow=this.displayedMemory.rows[14],this.writeScreen=this.displayedMemory,this.mode=null,this.cueStartTime=null}getHandler(){return this.outputFilter}setHandler(newHandler){this.outputFilter=newHandler}setPAC(pacData){this.writeScreen.setPAC(pacData)}setBkgData(bkgData){this.writeScreen.setBkgData(bkgData)}setMode(newMode){newMode!==this.mode&&(this.mode=newMode,this.logger.log(2,(()=>"MODE="+newMode)),"MODE_POP-ON"===this.mode?this.writeScreen=this.nonDisplayedMemory:(this.writeScreen=this.displayedMemory,this.writeScreen.reset()),"MODE_ROLL-UP"!==this.mode&&(this.displayedMemory.nrRollUpRows=null,this.nonDisplayedMemory.nrRollUpRows=null),this.mode=newMode)}insertChars(chars){for(let i=0;i<chars.length;i++)this.writeScreen.insertChar(chars[i]);const screen=this.writeScreen===this.displayedMemory?"DISP":"NON_DISP";this.logger.log(2,(()=>screen+": "+this.writeScreen.getDisplayText(!0))),"MODE_PAINT-ON"!==this.mode&&"MODE_ROLL-UP"!==this.mode||(this.logger.log(1,(()=>"DISPLAYED: "+this.displayedMemory.getDisplayText(!0))),this.outputDataUpdate())}ccRCL(){this.logger.log(2,"RCL - Resume Caption Loading"),this.setMode("MODE_POP-ON")}ccBS(){this.logger.log(2,"BS - BackSpace"),"MODE_TEXT"!==this.mode&&(this.writeScreen.backSpace(),this.writeScreen===this.displayedMemory&&this.outputDataUpdate())}ccAOF(){}ccAON(){}ccDER(){this.logger.log(2,"DER- Delete to End of Row"),this.writeScreen.clearToEndOfRow(),this.outputDataUpdate()}ccRU(nrRows){this.logger.log(2,"RU("+nrRows+") - Roll Up"),this.writeScreen=this.displayedMemory,this.setMode("MODE_ROLL-UP"),this.writeScreen.setRollUpRows(nrRows)}ccFON(){this.logger.log(2,"FON - Flash On"),this.writeScreen.setPen({flash:!0})}ccRDC(){this.logger.log(2,"RDC - Resume Direct Captioning"),this.setMode("MODE_PAINT-ON")}ccTR(){this.logger.log(2,"TR"),this.setMode("MODE_TEXT")}ccRTD(){this.logger.log(2,"RTD"),this.setMode("MODE_TEXT")}ccEDM(){this.logger.log(2,"EDM - Erase Displayed Memory"),this.displayedMemory.reset(),this.outputDataUpdate(!0)}ccCR(){this.logger.log(2,"CR - Carriage Return"),this.writeScreen.rollUp(),this.outputDataUpdate(!0)}ccENM(){this.logger.log(2,"ENM - Erase Non-displayed Memory"),this.nonDisplayedMemory.reset()}ccEOC(){if(this.logger.log(2,"EOC - End Of Caption"),"MODE_POP-ON"===this.mode){const tmp=this.displayedMemory;this.displayedMemory=this.nonDisplayedMemory,this.nonDisplayedMemory=tmp,this.writeScreen=this.nonDisplayedMemory,this.logger.log(1,(()=>"DISP: "+this.displayedMemory.getDisplayText()))}this.outputDataUpdate(!0)}ccTO(nrCols){this.logger.log(2,"TO("+nrCols+") - Tab Offset"),this.writeScreen.moveCursor(nrCols)}ccMIDROW(secondByte){const styles={flash:!1};if(styles.underline=secondByte%2==1,styles.italics=secondByte>=46,styles.italics)styles.foreground="white";else{const colorIndex=Math.floor(secondByte/2)-16,colors=["white","green","blue","cyan","red","yellow","magenta"];styles.foreground=colors[colorIndex]}this.logger.log(2,"MIDROW: "+stringify(styles)),this.writeScreen.setPen(styles)}outputDataUpdate(dispatch=!1){const time=this.logger.time;null!==time&&this.outputFilter&&(null!==this.cueStartTime||this.displayedMemory.isEmpty()?this.displayedMemory.equals(this.lastOutputScreen)||(this.outputFilter.newCue(this.cueStartTime,time,this.lastOutputScreen),dispatch&&this.outputFilter.dispatchCue&&this.outputFilter.dispatchCue(),this.cueStartTime=this.displayedMemory.isEmpty()?null:time):this.cueStartTime=time,this.lastOutputScreen.copy(this.displayedMemory))}cueSplitAtTime(t){this.outputFilter&&(this.displayedMemory.isEmpty()||(this.outputFilter.newCue&&this.outputFilter.newCue(this.cueStartTime,t,this.displayedMemory),this.cueStartTime=t))}}class Cea608Parser{constructor(field,out1,out2){this.channels=void 0,this.currentChannel=0,this.cmdHistory={a:null,b:null},this.logger=void 0;const logger=this.logger=new CaptionsLogger;this.channels=[null,new Cea608Channel(field,out1,logger),new Cea608Channel(field+1,out2,logger)]}getHandler(channel){return this.channels[channel].getHandler()}setHandler(channel,newHandler){this.channels[channel].setHandler(newHandler)}addData(time,byteList){this.logger.time=time;for(let i=0;i<byteList.length;i+=2){const a=127&byteList[i],b=127&byteList[i+1];let cmdFound=!1,charsFound=null;if(0===a&&0===b)continue;this.logger.log(3,(()=>"["+numArrayToHexArray([byteList[i],byteList[i+1]])+"] -> ("+numArrayToHexArray([a,b])+")"));const cmdHistory=this.cmdHistory;if(a>=16&&a<=31){if(hasCmdRepeated(a,b,cmdHistory)){setLastCmd(null,null,cmdHistory),this.logger.log(3,(()=>"Repeated command ("+numArrayToHexArray([a,b])+") is dropped"));continue}setLastCmd(a,b,this.cmdHistory),cmdFound=this.parseCmd(a,b),cmdFound||(cmdFound=this.parseMidrow(a,b)),cmdFound||(cmdFound=this.parsePAC(a,b)),cmdFound||(cmdFound=this.parseBackgroundAttributes(a,b))}else setLastCmd(null,null,cmdHistory);if(!cmdFound&&(charsFound=this.parseChars(a,b),charsFound)){const currChNr=this.currentChannel;if(currChNr&&currChNr>0){this.channels[currChNr].insertChars(charsFound)}else this.logger.log(2,"No channel found yet. TEXT-MODE?")}cmdFound||charsFound||this.logger.log(2,(()=>"Couldn't parse cleaned data "+numArrayToHexArray([a,b])+" orig: "+numArrayToHexArray([byteList[i],byteList[i+1]])))}}parseCmd(a,b){if(!((20===a||28===a||21===a||29===a)&&b>=32&&b<=47)&&!((23===a||31===a)&&b>=33&&b<=35))return!1;const chNr=20===a||21===a||23===a?1:2,channel=this.channels[chNr];return 20===a||21===a||28===a||29===a?32===b?channel.ccRCL():33===b?channel.ccBS():34===b?channel.ccAOF():35===b?channel.ccAON():36===b?channel.ccDER():37===b?channel.ccRU(2):38===b?channel.ccRU(3):39===b?channel.ccRU(4):40===b?channel.ccFON():41===b?channel.ccRDC():42===b?channel.ccTR():43===b?channel.ccRTD():44===b?channel.ccEDM():45===b?channel.ccCR():46===b?channel.ccENM():47===b&&channel.ccEOC():channel.ccTO(b-32),this.currentChannel=chNr,!0}parseMidrow(a,b){let chNr=0;if((17===a||25===a)&&b>=32&&b<=47){if(chNr=17===a?1:2,chNr!==this.currentChannel)return this.logger.log(0,"Mismatch channel in midrow parsing"),!1;const channel=this.channels[chNr];return!!channel&&(channel.ccMIDROW(b),this.logger.log(3,(()=>"MIDROW ("+numArrayToHexArray([a,b])+")")),!0)}return!1}parsePAC(a,b){let row;if(!((a>=17&&a<=23||a>=25&&a<=31)&&b>=64&&b<=127)&&!((16===a||24===a)&&b>=64&&b<=95))return!1;const chNr=a<=23?1:2;row=b>=64&&b<=95?1===chNr?rowsLowCh1[a]:rowsLowCh2[a]:1===chNr?rowsHighCh1[a]:rowsHighCh2[a];const channel=this.channels[chNr];return!!channel&&(channel.setPAC(this.interpretPAC(row,b)),this.currentChannel=chNr,!0)}interpretPAC(row,byte){let pacIndex;const pacData={color:null,italics:!1,indent:null,underline:!1,row};return pacIndex=byte>95?byte-96:byte-64,pacData.underline=!(1&~pacIndex),pacIndex<=13?pacData.color=["white","green","blue","cyan","red","yellow","magenta","white"][Math.floor(pacIndex/2)]:pacIndex<=15?(pacData.italics=!0,pacData.color="white"):pacData.indent=4*Math.floor((pacIndex-16)/2),pacData}parseChars(a,b){let channelNr,charCodes=null,charCode1=null;if(a>=25?(channelNr=2,charCode1=a-8):(channelNr=1,charCode1=a),charCode1>=17&&charCode1<=19){let oneCode;oneCode=17===charCode1?b+80:18===charCode1?b+112:b+144,this.logger.log(2,(()=>"Special char '"+getCharForByte(oneCode)+"' in channel "+channelNr)),charCodes=[oneCode]}else a>=32&&a<=127&&(charCodes=0===b?[a]:[a,b]);return charCodes&&this.logger.log(3,(()=>"Char codes =  "+numArrayToHexArray(charCodes).join(","))),charCodes}parseBackgroundAttributes(a,b){if(!((16===a||24===a)&&b>=32&&b<=47)&&!((23===a||31===a)&&b>=45&&b<=47))return!1;let index;const bkgData={};16===a||24===a?(index=Math.floor((b-32)/2),bkgData.background=backgroundColors[index],b%2==1&&(bkgData.background=bkgData.background+"_semi")):45===b?bkgData.background="transparent":(bkgData.foreground="black",47===b&&(bkgData.underline=!0));const chNr=a<=23?1:2;return this.channels[chNr].setBkgData(bkgData),!0}reset(){for(let i=0;i<Object.keys(this.channels).length;i++){const channel=this.channels[i];channel&&channel.reset()}setLastCmd(null,null,this.cmdHistory)}cueSplitAtTime(t){for(let i=0;i<this.channels.length;i++){const channel=this.channels[i];channel&&channel.cueSplitAtTime(t)}}}function setLastCmd(a,b,cmdHistory){cmdHistory.a=a,cmdHistory.b=b}function hasCmdRepeated(a,b,cmdHistory){return cmdHistory.a===a&&cmdHistory.b===b}var VTTCue=function(){if(null!=optionalSelf&&optionalSelf.VTTCue)return self.VTTCue;const AllowedDirections=["","lr","rl"],AllowedAlignments=["start","middle","end","left","right"];function isAllowedValue(allowed,value){if("string"!=typeof value)return!1;if(!Array.isArray(allowed))return!1;const lcValue=value.toLowerCase();return!!~allowed.indexOf(lcValue)&&lcValue}function findAlignSetting(value){return isAllowedValue(AllowedAlignments,value)}function extend(obj,...rest){let i=1;for(;i<arguments.length;i++){const cobj=arguments[i];for(const p in cobj)obj[p]=cobj[p]}return obj}function VTTCue(startTime,endTime,text){const cue=this,baseObj={enumerable:!0};cue.hasBeenReset=!1;let _id="",_pauseOnExit=!1,_startTime=startTime,_endTime=endTime,_text=text,_region=null,_vertical="",_snapToLines=!0,_line="auto",_lineAlign="start",_position=50,_positionAlign="middle",_size=50,_align="middle";Object.defineProperty(cue,"id",extend({},baseObj,{get:function(){return _id},set:function(value){_id=""+value}})),Object.defineProperty(cue,"pauseOnExit",extend({},baseObj,{get:function(){return _pauseOnExit},set:function(value){_pauseOnExit=!!value}})),Object.defineProperty(cue,"startTime",extend({},baseObj,{get:function(){return _startTime},set:function(value){if("number"!=typeof value)throw new TypeError("Start time must be set to a number.");_startTime=value,this.hasBeenReset=!0}})),Object.defineProperty(cue,"endTime",extend({},baseObj,{get:function(){return _endTime},set:function(value){if("number"!=typeof value)throw new TypeError("End time must be set to a number.");_endTime=value,this.hasBeenReset=!0}})),Object.defineProperty(cue,"text",extend({},baseObj,{get:function(){return _text},set:function(value){_text=""+value,this.hasBeenReset=!0}})),Object.defineProperty(cue,"region",extend({},baseObj,{get:function(){return _region},set:function(value){_region=value,this.hasBeenReset=!0}})),Object.defineProperty(cue,"vertical",extend({},baseObj,{get:function(){return _vertical},set:function(value){const setting=function findDirectionSetting(value){return isAllowedValue(AllowedDirections,value)}(value);if(!1===setting)throw new SyntaxError("An invalid or illegal string was specified.");_vertical=setting,this.hasBeenReset=!0}})),Object.defineProperty(cue,"snapToLines",extend({},baseObj,{get:function(){return _snapToLines},set:function(value){_snapToLines=!!value,this.hasBeenReset=!0}})),Object.defineProperty(cue,"line",extend({},baseObj,{get:function(){return _line},set:function(value){if("number"!=typeof value&&"auto"!==value)throw new SyntaxError("An invalid number or illegal string was specified.");_line=value,this.hasBeenReset=!0}})),Object.defineProperty(cue,"lineAlign",extend({},baseObj,{get:function(){return _lineAlign},set:function(value){const setting=findAlignSetting(value);if(!setting)throw new SyntaxError("An invalid or illegal string was specified.");_lineAlign=setting,this.hasBeenReset=!0}})),Object.defineProperty(cue,"position",extend({},baseObj,{get:function(){return _position},set:function(value){if(value<0||value>100)throw new Error("Position must be between 0 and 100.");_position=value,this.hasBeenReset=!0}})),Object.defineProperty(cue,"positionAlign",extend({},baseObj,{get:function(){return _positionAlign},set:function(value){const setting=findAlignSetting(value);if(!setting)throw new SyntaxError("An invalid or illegal string was specified.");_positionAlign=setting,this.hasBeenReset=!0}})),Object.defineProperty(cue,"size",extend({},baseObj,{get:function(){return _size},set:function(value){if(value<0||value>100)throw new Error("Size must be between 0 and 100.");_size=value,this.hasBeenReset=!0}})),Object.defineProperty(cue,"align",extend({},baseObj,{get:function(){return _align},set:function(value){const setting=findAlignSetting(value);if(!setting)throw new SyntaxError("An invalid or illegal string was specified.");_align=setting,this.hasBeenReset=!0}})),cue.displayState=void 0}return VTTCue.prototype.getCueAsHTML=function(){return self.WebVTT.convertCueToDOMTree(self,this.text)},VTTCue}();class StringDecoder{decode(data,options){if(!data)return"";if("string"!=typeof data)throw new Error("Error - expected string data.");return decodeURIComponent(encodeURIComponent(data))}}function parseTimeStamp(input){function computeSeconds(h,m,s,f){return 3600*(0|h)+60*(0|m)+(0|s)+parseFloat(f||0)}const m=input.match(/^(?:(\d+):)?(\d{2}):(\d{2})(\.\d+)?/);return m?parseFloat(m[2])>59?computeSeconds(m[2],m[3],0,m[4]):computeSeconds(m[1],m[2],m[3],m[4]):null}class Settings{constructor(){this.values=Object.create(null)}set(k,v){this.get(k)||""===v||(this.values[k]=v)}get(k,dflt,defaultKey){return defaultKey?this.has(k)?this.values[k]:dflt[defaultKey]:this.has(k)?this.values[k]:dflt}has(k){return k in this.values}alt(k,v,a){for(let n=0;n<a.length;++n)if(v===a[n]){this.set(k,v);break}}integer(k,v){/^-?\d+$/.test(v)&&this.set(k,parseInt(v,10))}percent(k,v){if(/^([\d]{1,3})(\.[\d]*)?%$/.test(v)){const percent=parseFloat(v);if(percent>=0&&percent<=100)return this.set(k,percent),!0}return!1}}function parseOptions(input,callback,keyValueDelim,groupDelim){const groups=groupDelim?input.split(groupDelim):[input];for(const i in groups){if("string"!=typeof groups[i])continue;const kv=groups[i].split(keyValueDelim);if(2!==kv.length)continue;callback(kv[0],kv[1])}}const defaults=new VTTCue(0,0,""),center="middle"===defaults.align?"middle":"center";function parseCue(input,cue,regionList){const oInput=input;function consumeTimeStamp(){const ts=parseTimeStamp(input);if(null===ts)throw new Error("Malformed timestamp: "+oInput);return input=input.replace(/^[^\sa-zA-Z-]+/,""),ts}function skipWhitespace(){input=input.replace(/^\s+/,"")}if(skipWhitespace(),cue.startTime=consumeTimeStamp(),skipWhitespace(),"--\x3e"!==input.slice(0,3))throw new Error("Malformed time stamp (time stamps must be separated by '--\x3e'): "+oInput);input=input.slice(3),skipWhitespace(),cue.endTime=consumeTimeStamp(),skipWhitespace(),function consumeCueSettings(input,cue){const settings=new Settings;parseOptions(input,(function(k,v){let vals;switch(k){case"region":for(let i=regionList.length-1;i>=0;i--)if(regionList[i].id===v){settings.set(k,regionList[i].region);break}break;case"vertical":settings.alt(k,v,["rl","lr"]);break;case"line":vals=v.split(","),settings.integer(k,vals[0]),settings.percent(k,vals[0])&&settings.set("snapToLines",!1),settings.alt(k,vals[0],["auto"]),2===vals.length&&settings.alt("lineAlign",vals[1],["start",center,"end"]);break;case"position":vals=v.split(","),settings.percent(k,vals[0]),2===vals.length&&settings.alt("positionAlign",vals[1],["start",center,"end","line-left","line-right","auto"]);break;case"size":settings.percent(k,v);break;case"align":settings.alt(k,v,["start",center,"end","left","right"])}}),/:/,/\s/),cue.region=settings.get("region",null),cue.vertical=settings.get("vertical","");let line=settings.get("line","auto");"auto"===line&&-1===defaults.line&&(line=-1),cue.line=line,cue.lineAlign=settings.get("lineAlign","start"),cue.snapToLines=settings.get("snapToLines",!0),cue.size=settings.get("size",100),cue.align=settings.get("align",center);let position=settings.get("position","auto");"auto"===position&&50===defaults.position&&(position="start"===cue.align||"left"===cue.align?0:"end"===cue.align||"right"===cue.align?100:50),cue.position=position}(input,cue)}function fixLineBreaks(input){return input.replace(/<br(?: \/)?>/gi,"\n")}class VTTParser{constructor(){this.state="INITIAL",this.buffer="",this.decoder=new StringDecoder,this.regionList=[],this.cue=null,this.oncue=void 0,this.onparsingerror=void 0,this.onflush=void 0}parse(data){const _this=this;function collectNextLine(){let buffer=_this.buffer,pos=0;for(buffer=fixLineBreaks(buffer);pos<buffer.length&&"\r"!==buffer[pos]&&"\n"!==buffer[pos];)++pos;const line=buffer.slice(0,pos);return"\r"===buffer[pos]&&++pos,"\n"===buffer[pos]&&++pos,_this.buffer=buffer.slice(pos),line}data&&(_this.buffer+=_this.decoder.decode(data,{stream:!0}));try{let line="";if("INITIAL"===_this.state){if(!/\r\n|\n/.test(_this.buffer))return this;line=collectNextLine();const m=line.match(/^(ï»¿)?WEBVTT([ \t].*)?$/);if(null==m||!m[0])throw new Error("Malformed WebVTT signature.");_this.state="HEADER"}let alreadyCollectedLine=!1;for(;_this.buffer;){if(!/\r\n|\n/.test(_this.buffer))return this;switch(alreadyCollectedLine?alreadyCollectedLine=!1:line=collectNextLine(),_this.state){case"HEADER":/:/.test(line)?parseOptions(line,(function(k,v){}),/:/):line||(_this.state="ID");continue;case"NOTE":line||(_this.state="ID");continue;case"ID":if(/^NOTE($|[ \t])/.test(line)){_this.state="NOTE";break}if(!line)continue;if(_this.cue=new VTTCue(0,0,""),_this.state="CUE",-1===line.indexOf("--\x3e")){_this.cue.id=line;continue}case"CUE":if(!_this.cue){_this.state="BADCUE";continue}try{parseCue(line,_this.cue,_this.regionList)}catch(e){_this.cue=null,_this.state="BADCUE";continue}_this.state="CUETEXT";continue;case"CUETEXT":{const hasSubstring=-1!==line.indexOf("--\x3e");if(!line||hasSubstring&&(alreadyCollectedLine=!0)){_this.oncue&&_this.cue&&_this.oncue(_this.cue),_this.cue=null,_this.state="ID";continue}if(null===_this.cue)continue;_this.cue.text&&(_this.cue.text+="\n"),_this.cue.text+=line}continue;case"BADCUE":line||(_this.state="ID")}}}catch(e){"CUETEXT"===_this.state&&_this.cue&&_this.oncue&&_this.oncue(_this.cue),_this.cue=null,_this.state="INITIAL"===_this.state?"BADWEBVTT":"BADCUE"}return this}flush(){const _this=this;try{if((_this.cue||"HEADER"===_this.state)&&(_this.buffer+="\n\n",_this.parse()),"INITIAL"===_this.state||"BADWEBVTT"===_this.state)throw new Error("Malformed WebVTT signature.")}catch(e){_this.onparsingerror&&_this.onparsingerror(e)}return _this.onflush&&_this.onflush(),this}}const LINEBREAKS=/\r\n|\n\r|\n|\r/g,startsWith=function startsWith(inputString,searchString,position=0){return inputString.slice(position,position+searchString.length)===searchString};function generateCueId(startTime,endTime,text){return hash(startTime.toString())+hash(endTime.toString())+hash(text)}function parseWebVTT(vttByteArray,initPTS,vttCCs,cc,timeOffset,callBack,errorCallBack){const parser=new VTTParser,vttLines=utf8ArrayToStr(new Uint8Array(vttByteArray)).trim().replace(LINEBREAKS,"\n").split("\n"),cues=[],init90kHz=initPTS?function toMpegTsClockFromTimescale(baseTime,srcScale=1){return toTimescaleFromBase(baseTime,MPEG_TS_CLOCK_FREQ_HZ,1/srcScale)}(initPTS.baseTime,initPTS.timescale):0;let parsingError,cueTime="00:00.000",timestampMapMPEGTS=0,timestampMapLOCAL=0,inHeader=!0;parser.oncue=function(cue){const currCC=vttCCs[cc];let cueOffset=vttCCs.ccOffset;const webVttMpegTsMapOffset=(timestampMapMPEGTS-init90kHz)/9e4;if(null!=currCC&&currCC.new&&(void 0!==timestampMapLOCAL?cueOffset=vttCCs.ccOffset=currCC.start:function calculateOffset(vttCCs,cc,presentationTime){let currCC=vttCCs[cc],prevCC=vttCCs[currCC.prevCC];if(!prevCC||!prevCC.new&&currCC.new)return vttCCs.ccOffset=vttCCs.presentationOffset=currCC.start,void(currCC.new=!1);for(;null!=(_prevCC=prevCC)&&_prevCC.new;){var _prevCC;vttCCs.ccOffset+=currCC.start-prevCC.start,currCC.new=!1,currCC=prevCC,prevCC=vttCCs[currCC.prevCC]}vttCCs.presentationOffset=presentationTime}(vttCCs,cc,webVttMpegTsMapOffset)),webVttMpegTsMapOffset){if(!initPTS)return void(parsingError=new Error("Missing initPTS for VTT MPEGTS"));cueOffset=webVttMpegTsMapOffset-vttCCs.presentationOffset}const duration=cue.endTime-cue.startTime,startTime=normalizePts(9e4*(cue.startTime+cueOffset-timestampMapLOCAL),9e4*timeOffset)/9e4;cue.startTime=Math.max(startTime,0),cue.endTime=Math.max(startTime+duration,0);const text=cue.text.trim();cue.text=decodeURIComponent(encodeURIComponent(text)),cue.id||(cue.id=generateCueId(cue.startTime,cue.endTime,text)),cue.endTime>0&&cues.push(cue)},parser.onparsingerror=function(error){parsingError=error},parser.onflush=function(){parsingError?errorCallBack(parsingError):callBack(cues)},vttLines.forEach((line=>{if(inHeader){if(startsWith(line,"X-TIMESTAMP-MAP=")){inHeader=!1,line.slice(16).split(",").forEach((timestamp=>{startsWith(timestamp,"LOCAL:")?cueTime=timestamp.slice(6):startsWith(timestamp,"MPEGTS:")&&(timestampMapMPEGTS=parseInt(timestamp.slice(7)))}));try{timestampMapLOCAL=function cueString2millis(timeString){let ts=parseInt(timeString.slice(-3));const secs=parseInt(timeString.slice(-6,-4)),mins=parseInt(timeString.slice(-9,-7)),hours=timeString.length>9?parseInt(timeString.substring(0,timeString.indexOf(":"))):0;if(!(isFiniteNumber(ts)&&isFiniteNumber(secs)&&isFiniteNumber(mins)&&isFiniteNumber(hours)))throw Error(`Malformed X-TIMESTAMP-MAP: Local:${timeString}`);return ts+=1e3*secs,ts+=6e4*mins,ts+=36e5*hours,ts}(cueTime)/1e3}catch(error){parsingError=error}return}""===line&&(inHeader=!1)}parser.parse(line+"\n")})),parser.flush()}const HMSF_REGEX=/^(\d{2,}):(\d{2}):(\d{2}):(\d{2})\.?(\d+)?$/,TIME_UNIT_REGEX=/^(\d*(?:\.\d*)?)(h|m|s|ms|f|t)$/,textAlignToLineAlign={left:"start",center:"center",right:"end",start:"start",end:"end"};function parseIMSC1(payload,initPTS,callBack,errorCallBack){const results=findBox(new Uint8Array(payload),["mdat"]);if(0===results.length)return void errorCallBack(new Error("Could not parse IMSC1 mdat"));const ttmlList=results.map((mdat=>utf8ArrayToStr(mdat))),syncTime=function toTimescaleFromScale(baseTime,destScale,srcScale=1,round=!1){return toTimescaleFromBase(baseTime,destScale,1/srcScale,round)}(initPTS.baseTime,1,initPTS.timescale);try{ttmlList.forEach((ttml=>callBack(function parseTTML(ttml,syncTime){const xmlDoc=(new DOMParser).parseFromString(ttml,"text/xml"),tt=xmlDoc.getElementsByTagName("tt")[0];if(!tt)throw new Error("Invalid ttml");const defaultRateInfo={frameRate:30,subFrameRate:1,frameRateMultiplier:0,tickRate:0},rateInfo=Object.keys(defaultRateInfo).reduce(((result,key)=>(result[key]=tt.getAttribute(`ttp:${key}`)||defaultRateInfo[key],result)),{}),trim="preserve"!==tt.getAttribute("xml:space"),styleElements=collectionToDictionary(getElementCollection(tt,"styling","style")),regionElements=collectionToDictionary(getElementCollection(tt,"layout","region")),cueElements=getElementCollection(tt,"body","[begin]");return[].map.call(cueElements,(cueElement=>{const cueText=getTextContent(cueElement,trim);if(!cueText||!cueElement.hasAttribute("begin"))return null;const startTime=parseTtmlTime(cueElement.getAttribute("begin"),rateInfo),duration=parseTtmlTime(cueElement.getAttribute("dur"),rateInfo);let endTime=parseTtmlTime(cueElement.getAttribute("end"),rateInfo);if(null===startTime)throw timestampParsingError(cueElement);if(null===endTime){if(null===duration)throw timestampParsingError(cueElement);endTime=startTime+duration}const cue=new VTTCue(startTime-syncTime,endTime-syncTime,cueText);cue.id=generateCueId(cue.startTime,cue.endTime,cue.text);const styles=function getTtmlStyles(region,style,styleElements){const ttsNs="http://www.w3.org/ns/ttml#styling";let regionStyle=null;const styleAttributes=["displayAlign","textAlign","color","backgroundColor","fontSize","fontFamily"],regionStyleName=null!=region&&region.hasAttribute("style")?region.getAttribute("style"):null;regionStyleName&&styleElements.hasOwnProperty(regionStyleName)&&(regionStyle=styleElements[regionStyleName]);return styleAttributes.reduce(((styles,name)=>{const value=getAttributeNS(style,ttsNs,name)||getAttributeNS(region,ttsNs,name)||getAttributeNS(regionStyle,ttsNs,name);return value&&(styles[name]=value),styles}),{})}(regionElements[cueElement.getAttribute("region")],styleElements[cueElement.getAttribute("style")],styleElements),{textAlign}=styles;if(textAlign){const lineAlign=textAlignToLineAlign[textAlign];lineAlign&&(cue.lineAlign=lineAlign),cue.align=textAlign}return _extends(cue,styles),cue})).filter((cue=>null!==cue))}(ttml,syncTime))))}catch(error){errorCallBack(error)}}function getElementCollection(fromElement,parentName,childName){const parent=fromElement.getElementsByTagName(parentName)[0];return parent?[].slice.call(parent.querySelectorAll(childName)):[]}function collectionToDictionary(elementsWithId){return elementsWithId.reduce(((dict,element)=>{const id=element.getAttribute("xml:id");return id&&(dict[id]=element),dict}),{})}function getTextContent(element,trim){return[].slice.call(element.childNodes).reduce(((str,node,i)=>{var _node$childNodes;return"br"===node.nodeName&&i?str+"\n":null!=(_node$childNodes=node.childNodes)&&_node$childNodes.length?getTextContent(node,trim):trim?str+node.textContent.trim().replace(/\s+/g," "):str+node.textContent}),"")}function getAttributeNS(element,ns,name){return element&&element.hasAttributeNS(ns,name)?element.getAttributeNS(ns,name):null}function timestampParsingError(node){return new Error(`Could not parse ttml timestamp ${node}`)}function parseTtmlTime(timeAttributeValue,rateInfo){if(!timeAttributeValue)return null;let seconds=parseTimeStamp(timeAttributeValue);return null===seconds&&(HMSF_REGEX.test(timeAttributeValue)?seconds=function parseHoursMinutesSecondsFrames(timeAttributeValue,rateInfo){const m=HMSF_REGEX.exec(timeAttributeValue),frames=(0|m[4])+(0|m[5])/rateInfo.subFrameRate;return 3600*(0|m[1])+60*(0|m[2])+(0|m[3])+frames/rateInfo.frameRate}(timeAttributeValue,rateInfo):TIME_UNIT_REGEX.test(timeAttributeValue)&&(seconds=function parseTimeUnits(timeAttributeValue,rateInfo){const m=TIME_UNIT_REGEX.exec(timeAttributeValue),value=Number(m[1]);switch(m[2]){case"h":return 3600*value;case"m":return 60*value;case"ms":return 1e3*value;case"f":return value/rateInfo.frameRate;case"t":return value/rateInfo.tickRate}return value}(timeAttributeValue,rateInfo))),seconds}class OutputFilter{constructor(timelineController,trackName){this.timelineController=void 0,this.cueRanges=[],this.trackName=void 0,this.startTime=null,this.endTime=null,this.screen=null,this.timelineController=timelineController,this.trackName=trackName}dispatchCue(){null!==this.startTime&&(this.timelineController.addCues(this.trackName,this.startTime,this.endTime,this.screen,this.cueRanges),this.startTime=null)}newCue(startTime,endTime,screen){(null===this.startTime||this.startTime>startTime)&&(this.startTime=startTime),this.endTime=endTime,this.screen=screen,this.timelineController.createCaptionsTrack(this.trackName)}reset(){this.cueRanges=[],this.startTime=null}}class TimelineController{constructor(hls){this.hls=void 0,this.media=null,this.config=void 0,this.enabled=!0,this.Cues=void 0,this.textTracks=[],this.tracks=[],this.initPTS=[],this.unparsedVttFrags=[],this.captionsTracks={},this.nonNativeCaptionsTracks={},this.cea608Parser1=void 0,this.cea608Parser2=void 0,this.lastCc=-1,this.lastSn=-1,this.lastPartIndex=-1,this.prevCC=-1,this.vttCCs={ccOffset:0,presentationOffset:0,0:{start:0,prevCC:-1,new:!0}},this.captionsProperties=void 0,this.hls=hls,this.config=hls.config,this.Cues=hls.config.cueHandler,this.captionsProperties={textTrack1:{label:this.config.captionsTextTrack1Label,languageCode:this.config.captionsTextTrack1LanguageCode},textTrack2:{label:this.config.captionsTextTrack2Label,languageCode:this.config.captionsTextTrack2LanguageCode},textTrack3:{label:this.config.captionsTextTrack3Label,languageCode:this.config.captionsTextTrack3LanguageCode},textTrack4:{label:this.config.captionsTextTrack4Label,languageCode:this.config.captionsTextTrack4LanguageCode}},hls.on(Events.MEDIA_ATTACHING,this.onMediaAttaching,this),hls.on(Events.MEDIA_DETACHING,this.onMediaDetaching,this),hls.on(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.on(Events.MANIFEST_LOADED,this.onManifestLoaded,this),hls.on(Events.SUBTITLE_TRACKS_UPDATED,this.onSubtitleTracksUpdated,this),hls.on(Events.FRAG_LOADING,this.onFragLoading,this),hls.on(Events.FRAG_LOADED,this.onFragLoaded,this),hls.on(Events.FRAG_PARSING_USERDATA,this.onFragParsingUserdata,this),hls.on(Events.FRAG_DECRYPTED,this.onFragDecrypted,this),hls.on(Events.INIT_PTS_FOUND,this.onInitPtsFound,this),hls.on(Events.SUBTITLE_TRACKS_CLEARED,this.onSubtitleTracksCleared,this),hls.on(Events.BUFFER_FLUSHING,this.onBufferFlushing,this)}destroy(){const{hls}=this;hls.off(Events.MEDIA_ATTACHING,this.onMediaAttaching,this),hls.off(Events.MEDIA_DETACHING,this.onMediaDetaching,this),hls.off(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.off(Events.MANIFEST_LOADED,this.onManifestLoaded,this),hls.off(Events.SUBTITLE_TRACKS_UPDATED,this.onSubtitleTracksUpdated,this),hls.off(Events.FRAG_LOADING,this.onFragLoading,this),hls.off(Events.FRAG_LOADED,this.onFragLoaded,this),hls.off(Events.FRAG_PARSING_USERDATA,this.onFragParsingUserdata,this),hls.off(Events.FRAG_DECRYPTED,this.onFragDecrypted,this),hls.off(Events.INIT_PTS_FOUND,this.onInitPtsFound,this),hls.off(Events.SUBTITLE_TRACKS_CLEARED,this.onSubtitleTracksCleared,this),hls.off(Events.BUFFER_FLUSHING,this.onBufferFlushing,this),this.hls=this.config=this.media=null,this.cea608Parser1=this.cea608Parser2=void 0}initCea608Parsers(){const channel1=new OutputFilter(this,"textTrack1"),channel2=new OutputFilter(this,"textTrack2"),channel3=new OutputFilter(this,"textTrack3"),channel4=new OutputFilter(this,"textTrack4");this.cea608Parser1=new Cea608Parser(1,channel1,channel2),this.cea608Parser2=new Cea608Parser(3,channel3,channel4)}addCues(trackName,startTime,endTime,screen,cueRanges){let merged=!1;for(let i=cueRanges.length;i--;){const cueRange=cueRanges[i],overlap=(x1=cueRange[0],x2=cueRange[1],y1=startTime,y2=endTime,Math.min(x2,y2)-Math.max(x1,y1));if(overlap>=0&&(cueRange[0]=Math.min(cueRange[0],startTime),cueRange[1]=Math.max(cueRange[1],endTime),merged=!0,overlap/(endTime-startTime)>.5))return}var x1,x2,y1,y2;if(merged||cueRanges.push([startTime,endTime]),this.config.renderTextTracksNatively){const track=this.captionsTracks[trackName];this.Cues.newCue(track,startTime,endTime,screen)}else{const cues=this.Cues.newCue(null,startTime,endTime,screen);this.hls.trigger(Events.CUES_PARSED,{type:"captions",cues,track:trackName})}}onInitPtsFound(event,{frag,id,initPTS,timescale,trackId}){const{unparsedVttFrags}=this;id===PlaylistLevelType.MAIN&&(this.initPTS[frag.cc]={baseTime:initPTS,timescale,trackId}),unparsedVttFrags.length&&(this.unparsedVttFrags=[],unparsedVttFrags.forEach((data=>{this.initPTS[data.frag.cc]?this.onFragLoaded(Events.FRAG_LOADED,data):this.hls.trigger(Events.SUBTITLE_FRAG_PROCESSED,{success:!1,frag:data.frag,error:new Error("Subtitle discontinuity domain does not match main")})})))}getExistingTrack(label,language){const{media}=this;if(media)for(let i=0;i<media.textTracks.length;i++){const textTrack=media.textTracks[i];if(canReuseVttTextTrack(textTrack,{name:label,lang:language,characteristics:"transcribes-spoken-dialog,describes-music-and-sound"}))return textTrack}return null}createCaptionsTrack(trackName){this.config.renderTextTracksNatively?this.createNativeTrack(trackName):this.createNonNativeTrack(trackName)}createNativeTrack(trackName){if(this.captionsTracks[trackName])return;const{captionsProperties,captionsTracks,media}=this,{label,languageCode}=captionsProperties[trackName],existingTrack=this.getExistingTrack(label,languageCode);if(existingTrack)captionsTracks[trackName]=existingTrack,clearCurrentCues(captionsTracks[trackName]),sendAddTrackEvent(captionsTracks[trackName],media);else{const textTrack=this.createTextTrack("captions",label,languageCode);textTrack&&(textTrack[trackName]=!0,captionsTracks[trackName]=textTrack)}}createNonNativeTrack(trackName){if(this.nonNativeCaptionsTracks[trackName])return;const trackProperties=this.captionsProperties[trackName];if(!trackProperties)return;const track={_id:trackName,label:trackProperties.label,kind:"captions",default:!!trackProperties.media&&!!trackProperties.media.default,closedCaptions:trackProperties.media};this.nonNativeCaptionsTracks[trackName]=track,this.hls.trigger(Events.NON_NATIVE_TEXT_TRACKS_FOUND,{tracks:[track]})}createTextTrack(kind,label,lang){const media=this.media;if(media)return media.addTextTrack(kind,label,lang)}onMediaAttaching(event,data){this.media=data.media,data.mediaSource||this._cleanTracks()}onMediaDetaching(event,data){const transferringMedia=!!data.transferMedia;if(this.media=null,transferringMedia)return;const{captionsTracks}=this;Object.keys(captionsTracks).forEach((trackName=>{clearCurrentCues(captionsTracks[trackName]),delete captionsTracks[trackName]})),this.nonNativeCaptionsTracks={}}onManifestLoading(){this.lastCc=-1,this.lastSn=-1,this.lastPartIndex=-1,this.prevCC=-1,this.vttCCs={ccOffset:0,presentationOffset:0,0:{start:0,prevCC:-1,new:!0}},this._cleanTracks(),this.tracks=[],this.captionsTracks={},this.nonNativeCaptionsTracks={},this.textTracks=[],this.unparsedVttFrags=[],this.initPTS=[],this.cea608Parser1&&this.cea608Parser2&&(this.cea608Parser1.reset(),this.cea608Parser2.reset())}_cleanTracks(){const{media}=this;if(!media)return;const textTracks=media.textTracks;if(textTracks)for(let i=0;i<textTracks.length;i++)clearCurrentCues(textTracks[i])}onSubtitleTracksUpdated(event,data){const tracks=data.subtitleTracks||[],hasIMSC1=tracks.some((track=>"stpp.ttml.im1t"===track.textCodec));if(this.config.enableWebVTT||hasIMSC1&&this.config.enableIMSC1){if(subtitleOptionsIdentical(this.tracks,tracks))return void(this.tracks=tracks);if(this.textTracks=[],this.tracks=tracks,this.config.renderTextTracksNatively){const media=this.media,inUseTracks=media?filterSubtitleTracks(media.textTracks):null;if(this.tracks.forEach(((track,index)=>{let textTrack;if(inUseTracks){let inUseTrack=null;for(let i=0;i<inUseTracks.length;i++)if(inUseTracks[i]&&canReuseVttTextTrack(inUseTracks[i],track)){inUseTrack=inUseTracks[i],inUseTracks[i]=null;break}inUseTrack&&(textTrack=inUseTrack)}if(textTrack)clearCurrentCues(textTrack);else{const textTrackKind=captionsOrSubtitlesFromCharacteristics(track);textTrack=this.createTextTrack(textTrackKind,track.name,track.lang),textTrack&&(textTrack.mode="disabled")}textTrack&&this.textTracks.push(textTrack)})),null!=inUseTracks&&inUseTracks.length){const unusedTextTracks=inUseTracks.filter((t=>null!==t)).map((t=>t.label));unusedTextTracks.length&&this.hls.logger.warn(`Media element contains unused subtitle tracks: ${unusedTextTracks.join(", ")}. Replace media element for each source to clear TextTracks and captions menu.`)}}else if(this.tracks.length){const tracksList=this.tracks.map((track=>({label:track.name,kind:track.type.toLowerCase(),default:track.default,subtitleTrack:track})));this.hls.trigger(Events.NON_NATIVE_TEXT_TRACKS_FOUND,{tracks:tracksList})}}}onManifestLoaded(event,data){this.config.enableCEA708Captions&&data.captions&&data.captions.forEach((captionsTrack=>{const instreamIdMatch=/(?:CC|SERVICE)([1-4])/.exec(captionsTrack.instreamId);if(!instreamIdMatch)return;const trackName=`textTrack${instreamIdMatch[1]}`,trackProperties=this.captionsProperties[trackName];trackProperties&&(trackProperties.label=captionsTrack.name,captionsTrack.lang&&(trackProperties.languageCode=captionsTrack.lang),trackProperties.media=captionsTrack)}))}closedCaptionsForLevel(frag){const level=this.hls.levels[frag.level];return null==level?void 0:level.attrs["CLOSED-CAPTIONS"]}onFragLoading(event,data){if(this.enabled&&data.frag.type===PlaylistLevelType.MAIN){var _data$part$index,_data$part;const{cea608Parser1,cea608Parser2,lastSn}=this,{cc,sn}=data.frag,partIndex=null!=(_data$part$index=null==(_data$part=data.part)?void 0:_data$part.index)?_data$part$index:-1;cea608Parser1&&cea608Parser2&&(sn!==lastSn+1||sn===lastSn&&partIndex!==this.lastPartIndex+1||cc!==this.lastCc)&&(cea608Parser1.reset(),cea608Parser2.reset()),this.lastCc=cc,this.lastSn=sn,this.lastPartIndex=partIndex}}onFragLoaded(event,data){const{frag,payload}=data;if(frag.type===PlaylistLevelType.SUBTITLE)if(payload.byteLength){const decryptData=frag.decryptdata,decrypted="stats"in data;if(null==decryptData||!decryptData.encrypted||decrypted){const trackPlaylistMedia=this.tracks[frag.level],vttCCs=this.vttCCs;vttCCs[frag.cc]||(vttCCs[frag.cc]={start:frag.start,prevCC:this.prevCC,new:!0},this.prevCC=frag.cc),trackPlaylistMedia&&"stpp.ttml.im1t"===trackPlaylistMedia.textCodec?this._parseIMSC1(frag,payload):this._parseVTTs(data)}}else this.hls.trigger(Events.SUBTITLE_FRAG_PROCESSED,{success:!1,frag,error:new Error("Empty subtitle payload")})}_parseIMSC1(frag,payload){const hls=this.hls;parseIMSC1(payload,this.initPTS[frag.cc],(cues=>{this._appendCues(cues,frag.level),hls.trigger(Events.SUBTITLE_FRAG_PROCESSED,{success:!0,frag})}),(error=>{hls.logger.log(`Failed to parse IMSC1: ${error}`),hls.trigger(Events.SUBTITLE_FRAG_PROCESSED,{success:!1,frag,error})}))}_parseVTTs(data){var _frag$initSegment;const{frag,payload}=data,{initPTS,unparsedVttFrags}=this,maxAvCC=initPTS.length-1;if(!initPTS[frag.cc]&&-1===maxAvCC)return void unparsedVttFrags.push(data);const hls=this.hls;parseWebVTT(null!=(_frag$initSegment=frag.initSegment)&&_frag$initSegment.data?appendUint8Array(frag.initSegment.data,new Uint8Array(payload)).buffer:payload,this.initPTS[frag.cc],this.vttCCs,frag.cc,frag.start,(cues=>{this._appendCues(cues,frag.level),hls.trigger(Events.SUBTITLE_FRAG_PROCESSED,{success:!0,frag})}),(error=>{const missingInitPTS="Missing initPTS for VTT MPEGTS"===error.message;missingInitPTS?unparsedVttFrags.push(data):this._fallbackToIMSC1(frag,payload),hls.logger.log(`Failed to parse VTT cue: ${error}`),missingInitPTS&&maxAvCC>frag.cc||hls.trigger(Events.SUBTITLE_FRAG_PROCESSED,{success:!1,frag,error})}))}_fallbackToIMSC1(frag,payload){const trackPlaylistMedia=this.tracks[frag.level];trackPlaylistMedia.textCodec||parseIMSC1(payload,this.initPTS[frag.cc],(()=>{trackPlaylistMedia.textCodec="stpp.ttml.im1t",this._parseIMSC1(frag,payload)}),(()=>{trackPlaylistMedia.textCodec="wvtt"}))}_appendCues(cues,fragLevel){const hls=this.hls;if(this.config.renderTextTracksNatively){const textTrack=this.textTracks[fragLevel];if(!textTrack||"disabled"===textTrack.mode)return;cues.forEach((cue=>addCueToTrack(textTrack,cue)))}else{const currentTrack=this.tracks[fragLevel];if(!currentTrack)return;const track=currentTrack.default?"default":"subtitles"+fragLevel;hls.trigger(Events.CUES_PARSED,{type:"subtitles",cues,track})}}onFragDecrypted(event,data){const{frag}=data;frag.type===PlaylistLevelType.SUBTITLE&&this.onFragLoaded(Events.FRAG_LOADED,data)}onSubtitleTracksCleared(){this.tracks=[],this.captionsTracks={}}onFragParsingUserdata(event,data){if(!this.enabled||!this.config.enableCEA708Captions)return;const{frag,samples}=data;if(frag.type!==PlaylistLevelType.MAIN||"NONE"!==this.closedCaptionsForLevel(frag))for(let i=0;i<samples.length;i++){const ccBytes=samples[i].bytes;if(ccBytes){this.cea608Parser1||this.initCea608Parsers();const ccdatas=this.extractCea608Data(ccBytes);this.cea608Parser1.addData(samples[i].pts,ccdatas[0]),this.cea608Parser2.addData(samples[i].pts,ccdatas[1])}}}onBufferFlushing(event,{startOffset,endOffset,endOffsetSubtitles,type}){const{media}=this;if(media&&!(media.currentTime<endOffset)){if(!type||"video"===type){const{captionsTracks}=this;Object.keys(captionsTracks).forEach((trackName=>removeCuesInRange(captionsTracks[trackName],startOffset,endOffset)))}if(this.config.renderTextTracksNatively&&0===startOffset&&void 0!==endOffsetSubtitles){const{textTracks}=this;Object.keys(textTracks).forEach((trackName=>removeCuesInRange(textTracks[trackName],startOffset,endOffsetSubtitles)))}}}extractCea608Data(byteArray){const actualCCBytes=[[],[]],count=31&byteArray[0];let position=2;for(let j=0;j<count;j++){const tmpByte=byteArray[position++],ccbyte1=127&byteArray[position++],ccbyte2=127&byteArray[position++];if(0===ccbyte1&&0===ccbyte2)continue;if(!!(4&tmpByte)){const ccType=3&tmpByte;0!==ccType&&1!==ccType||(actualCCBytes[ccType].push(ccbyte1),actualCCBytes[ccType].push(ccbyte2))}}return actualCCBytes}}function captionsOrSubtitlesFromCharacteristics(track){return track.characteristics&&/transcribes-spoken-dialog/gi.test(track.characteristics)&&/describes-music-and-sound/gi.test(track.characteristics)?"captions":"subtitles"}function canReuseVttTextTrack(inUseTrack,manifestTrack){return!!inUseTrack&&inUseTrack.kind===captionsOrSubtitlesFromCharacteristics(manifestTrack)&&subtitleTrackMatchesTextTrack(manifestTrack,inUseTrack)}const WHITESPACE_CHAR=/\s/,Cues={newCue(track,startTime,endTime,captionScreen){const result=[];let row,cue,indenting,indent,text;const Cue=self.VTTCue||self.TextTrackCue;for(let r=0;r<captionScreen.rows.length;r++)if(row=captionScreen.rows[r],indenting=!0,indent=0,text="",!row.isEmpty()){var _track$cues;for(let c=0;c<row.chars.length;c++)WHITESPACE_CHAR.test(row.chars[c].uchar)&&indenting?indent++:(text+=row.chars[c].uchar,indenting=!1);row.cueStartTime=startTime,startTime===endTime&&(endTime+=1e-4),indent>=16?indent--:indent++;const cueText=fixLineBreaks(text.trim()),id=generateCueId(startTime,endTime,cueText);null!=track&&null!=(_track$cues=track.cues)&&_track$cues.getCueById(id)||(cue=new Cue(startTime,endTime,cueText),cue.id=id,cue.line=r+1,cue.align="left",cue.position=10+Math.min(80,10*Math.floor(8*indent/32)),result.push(cue))}return track&&result.length&&(result.sort(((cueA,cueB)=>"auto"===cueA.line||"auto"===cueB.line?0:cueA.line>8&&cueB.line>8?cueB.line-cueA.line:cueA.line-cueB.line)),result.forEach((cue=>addCueToTrack(track,cue)))),result}};function fetchSupported(){if(self.fetch&&self.AbortController&&self.ReadableStream&&self.Request)try{return new self.ReadableStream({}),!0}catch(e){}return!1}const BYTERANGE=/(\d+)-(\d+)\/(\d+)/;class FetchLoader{constructor(config){this.fetchSetup=void 0,this.requestTimeout=void 0,this.request=null,this.response=null,this.controller=void 0,this.context=null,this.config=null,this.callbacks=null,this.stats=void 0,this.loader=null,this.fetchSetup=config.fetchSetup||getRequest,this.controller=new self.AbortController,this.stats=new LoadStats}destroy(){this.loader=this.callbacks=this.context=this.config=this.request=null,this.abortInternal(),this.response=null,this.fetchSetup=this.controller=this.stats=null}abortInternal(){this.controller&&!this.stats.loading.end&&(this.stats.aborted=!0,this.controller.abort())}abort(){var _this$callbacks;this.abortInternal(),null!=(_this$callbacks=this.callbacks)&&_this$callbacks.onAbort&&this.callbacks.onAbort(this.stats,this.context,this.response)}load(context,config,callbacks){const stats=this.stats;if(stats.loading.start)throw new Error("Loader can only be used once.");stats.loading.start=self.performance.now();const initParams=function getRequestParameters(context,signal){const initParams={method:"GET",mode:"cors",credentials:"same-origin",signal,headers:new self.Headers(_extends({},context.headers))};context.rangeEnd&&initParams.headers.set("Range","bytes="+context.rangeStart+"-"+String(context.rangeEnd-1));return initParams}(context,this.controller.signal),isArrayBuffer="arraybuffer"===context.responseType,LENGTH=isArrayBuffer?"byteLength":"length",{maxTimeToFirstByteMs,maxLoadTimeMs}=config.loadPolicy;this.context=context,this.config=config,this.callbacks=callbacks,this.request=this.fetchSetup(context,initParams),self.clearTimeout(this.requestTimeout),config.timeout=maxTimeToFirstByteMs&&isFiniteNumber(maxTimeToFirstByteMs)?maxTimeToFirstByteMs:maxLoadTimeMs,this.requestTimeout=self.setTimeout((()=>{this.callbacks&&(this.abortInternal(),this.callbacks.onTimeout(stats,context,this.response))}),config.timeout);(isPromise(this.request)?this.request.then(self.fetch):self.fetch(this.request)).then((response=>{var _this$callbacks2;this.response=this.loader=response;const first=Math.max(self.performance.now(),stats.loading.start);if(self.clearTimeout(this.requestTimeout),config.timeout=maxLoadTimeMs,this.requestTimeout=self.setTimeout((()=>{this.callbacks&&(this.abortInternal(),this.callbacks.onTimeout(stats,context,this.response))}),maxLoadTimeMs-(first-stats.loading.start)),!response.ok){const{status,statusText}=response;throw new FetchError(statusText||"fetch, bad network response",status,response)}stats.loading.first=first,stats.total=function getContentLength(headers){const contentRange=headers.get("Content-Range");if(contentRange){const byteRangeLength=function getByteRangeLength(byteRangeHeader){const result=BYTERANGE.exec(byteRangeHeader);if(result)return parseInt(result[2])-parseInt(result[1])+1}(contentRange);if(isFiniteNumber(byteRangeLength))return byteRangeLength}const contentLength=headers.get("Content-Length");if(contentLength)return parseInt(contentLength)}(response.headers)||stats.total;const onProgress=null==(_this$callbacks2=this.callbacks)?void 0:_this$callbacks2.onProgress;return onProgress&&isFiniteNumber(config.highWaterMark)?this.loadProgressively(response,stats,context,config.highWaterMark,onProgress):isArrayBuffer?response.arrayBuffer():"json"===context.responseType?response.json():response.text()})).then((responseData=>{var _this$callbacks3,_this$callbacks4;const response=this.response;if(!response)throw new Error("loader destroyed");self.clearTimeout(this.requestTimeout),stats.loading.end=Math.max(self.performance.now(),stats.loading.first);const total=responseData[LENGTH];total&&(stats.loaded=stats.total=total);const loaderResponse={url:response.url,data:responseData,code:response.status},onProgress=null==(_this$callbacks3=this.callbacks)?void 0:_this$callbacks3.onProgress;onProgress&&!isFiniteNumber(config.highWaterMark)&&onProgress(stats,context,responseData,response),null==(_this$callbacks4=this.callbacks)||_this$callbacks4.onSuccess(loaderResponse,stats,context,response)})).catch((error=>{var _this$callbacks5;if(self.clearTimeout(this.requestTimeout),stats.aborted)return;const code=error&&error.code||0,text=error?error.message:null;null==(_this$callbacks5=this.callbacks)||_this$callbacks5.onError({code,text},context,error?error.details:null,stats)}))}getCacheAge(){let result=null;if(this.response){const ageHeader=this.response.headers.get("age");result=ageHeader?parseFloat(ageHeader):null}return result}getResponseHeader(name){return this.response?this.response.headers.get(name):null}loadProgressively(response,stats,context,highWaterMark=0,onProgress){const chunkCache=new ChunkCache,reader=response.body.getReader(),pump=()=>reader.read().then((data=>{if(data.done)return chunkCache.dataLength&&onProgress(stats,context,chunkCache.flush().buffer,response),Promise.resolve(new ArrayBuffer(0));const chunk=data.value,len=chunk.length;return stats.loaded+=len,len<highWaterMark||chunkCache.dataLength?(chunkCache.push(chunk),chunkCache.dataLength>=highWaterMark&&onProgress(stats,context,chunkCache.flush().buffer,response)):onProgress(stats,context,chunk.buffer,response),pump()})).catch((()=>Promise.reject()));return pump()}}function getRequest(context,initParams){return new self.Request(context.url,initParams)}class FetchError extends Error{constructor(message,code,details){super(message),this.code=void 0,this.details=void 0,this.code=code,this.details=details}}const AGE_HEADER_LINE_REGEX=/^age:\s*[\d.]+\s*$/im;class XhrLoader{constructor(config){this.xhrSetup=void 0,this.requestTimeout=void 0,this.retryTimeout=void 0,this.retryDelay=void 0,this.config=null,this.callbacks=null,this.context=null,this.loader=null,this.stats=void 0,this.xhrSetup=config&&config.xhrSetup||null,this.stats=new LoadStats,this.retryDelay=0}destroy(){this.callbacks=null,this.abortInternal(),this.loader=null,this.config=null,this.context=null,this.xhrSetup=null}abortInternal(){const loader=this.loader;self.clearTimeout(this.requestTimeout),self.clearTimeout(this.retryTimeout),loader&&(loader.onreadystatechange=null,loader.onprogress=null,4!==loader.readyState&&(this.stats.aborted=!0,loader.abort()))}abort(){var _this$callbacks;this.abortInternal(),null!=(_this$callbacks=this.callbacks)&&_this$callbacks.onAbort&&this.callbacks.onAbort(this.stats,this.context,this.loader)}load(context,config,callbacks){if(this.stats.loading.start)throw new Error("Loader can only be used once.");this.stats.loading.start=self.performance.now(),this.context=context,this.config=config,this.callbacks=callbacks,this.loadInternal()}loadInternal(){const{config,context}=this;if(!config||!context)return;const xhr=this.loader=new self.XMLHttpRequest,stats=this.stats;stats.loading.first=0,stats.loaded=0,stats.aborted=!1;const xhrSetup=this.xhrSetup;xhrSetup?Promise.resolve().then((()=>{if(this.loader===xhr&&!this.stats.aborted)return xhrSetup(xhr,context.url)})).catch((error=>{if(this.loader===xhr&&!this.stats.aborted)return xhr.open("GET",context.url,!0),xhrSetup(xhr,context.url)})).then((()=>{this.loader!==xhr||this.stats.aborted||this.openAndSendXhr(xhr,context,config)})).catch((error=>{var _this$callbacks2;null==(_this$callbacks2=this.callbacks)||_this$callbacks2.onError({code:xhr.status,text:error.message},context,xhr,stats)})):this.openAndSendXhr(xhr,context,config)}openAndSendXhr(xhr,context,config){xhr.readyState||xhr.open("GET",context.url,!0);const headers=context.headers,{maxTimeToFirstByteMs,maxLoadTimeMs}=config.loadPolicy;if(headers)for(const header in headers)xhr.setRequestHeader(header,headers[header]);context.rangeEnd&&xhr.setRequestHeader("Range","bytes="+context.rangeStart+"-"+(context.rangeEnd-1)),xhr.onreadystatechange=this.readystatechange.bind(this),xhr.onprogress=this.loadprogress.bind(this),xhr.responseType=context.responseType,self.clearTimeout(this.requestTimeout),config.timeout=maxTimeToFirstByteMs&&isFiniteNumber(maxTimeToFirstByteMs)?maxTimeToFirstByteMs:maxLoadTimeMs,this.requestTimeout=self.setTimeout(this.loadtimeout.bind(this),config.timeout),xhr.send()}readystatechange(){const{context,loader:xhr,stats}=this;if(!context||!xhr)return;const readyState=xhr.readyState,config=this.config;if(!stats.aborted&&readyState>=2&&(0===stats.loading.first&&(stats.loading.first=Math.max(self.performance.now(),stats.loading.start),config.timeout!==config.loadPolicy.maxLoadTimeMs&&(self.clearTimeout(this.requestTimeout),config.timeout=config.loadPolicy.maxLoadTimeMs,this.requestTimeout=self.setTimeout(this.loadtimeout.bind(this),config.loadPolicy.maxLoadTimeMs-(stats.loading.first-stats.loading.start)))),4===readyState)){self.clearTimeout(this.requestTimeout),xhr.onreadystatechange=null,xhr.onprogress=null;const status=xhr.status,useResponseText="text"===xhr.responseType?xhr.responseText:null;if(status>=200&&status<300){const data=null!=useResponseText?useResponseText:xhr.response;if(null!=data){var _this$callbacks3,_this$callbacks4;stats.loading.end=Math.max(self.performance.now(),stats.loading.first);const len="arraybuffer"===xhr.responseType?data.byteLength:data.length;stats.loaded=stats.total=len,stats.bwEstimate=8e3*stats.total/(stats.loading.end-stats.loading.first);const onProgress=null==(_this$callbacks3=this.callbacks)?void 0:_this$callbacks3.onProgress;onProgress&&onProgress(stats,context,data,xhr);const _response={url:xhr.responseURL,data,code:status};return void(null==(_this$callbacks4=this.callbacks)||_this$callbacks4.onSuccess(_response,stats,context,xhr))}}const retryConfig=config.loadPolicy.errorRetry;var _this$callbacks5;if(shouldRetry(retryConfig,stats.retry,!1,{url:context.url,data:void 0,code:status}))this.retry(retryConfig);else logger.error(`${status} while loading ${context.url}`),null==(_this$callbacks5=this.callbacks)||_this$callbacks5.onError({code:status,text:xhr.statusText},context,xhr,stats)}}loadtimeout(){if(!this.config)return;const retryConfig=this.config.loadPolicy.timeoutRetry;if(shouldRetry(retryConfig,this.stats.retry,!0))this.retry(retryConfig);else{var _this$context;logger.warn(`timeout while loading ${null==(_this$context=this.context)?void 0:_this$context.url}`);const callbacks=this.callbacks;callbacks&&(this.abortInternal(),callbacks.onTimeout(this.stats,this.context,this.loader))}}retry(retryConfig){const{context,stats}=this;this.retryDelay=getRetryDelay(retryConfig,stats.retry),stats.retry++,logger.warn(`${status?"HTTP Status "+status:"Timeout"} while loading ${null==context?void 0:context.url}, retrying ${stats.retry}/${retryConfig.maxNumRetry} in ${this.retryDelay}ms`),this.abortInternal(),this.loader=null,self.clearTimeout(this.retryTimeout),this.retryTimeout=self.setTimeout(this.loadInternal.bind(this),this.retryDelay)}loadprogress(event){const stats=this.stats;stats.loaded=event.loaded,event.lengthComputable&&(stats.total=event.total)}getCacheAge(){let result=null;if(this.loader&&AGE_HEADER_LINE_REGEX.test(this.loader.getAllResponseHeaders())){const ageHeader=this.loader.getResponseHeader("age");result=ageHeader?parseFloat(ageHeader):null}return result}getResponseHeader(name){return this.loader&&new RegExp(`^${name}:\\s*[\\d.]+\\s*$`,"im").test(this.loader.getAllResponseHeaders())?this.loader.getResponseHeader(name):null}}const hlsDefaultConfig=_objectSpread2(_objectSpread2({autoStartLoad:!0,startPosition:-1,defaultAudioCodec:void 0,debug:!1,capLevelOnFPSDrop:!1,capLevelToPlayerSize:!1,ignoreDevicePixelRatio:!1,maxDevicePixelRatio:Number.POSITIVE_INFINITY,preferManagedMediaSource:!0,initialLiveManifestSize:1,maxBufferLength:30,backBufferLength:1/0,frontBufferFlushThreshold:1/0,startOnSegmentBoundary:!1,maxBufferSize:6e7,maxFragLookUpTolerance:.25,maxBufferHole:.1,detectStallWithCurrentTimeMs:1250,highBufferWatchdogPeriod:2,nudgeOffset:.1,nudgeMaxRetry:3,nudgeOnVideoHole:!0,liveSyncMode:"edge",liveSyncDurationCount:3,liveSyncOnStallIncrease:1,liveMaxLatencyDurationCount:1/0,liveSyncDuration:void 0,liveMaxLatencyDuration:void 0,maxLiveSyncPlaybackRate:1,liveDurationInfinity:!1,liveBackBufferLength:null,maxMaxBufferLength:600,enableWorker:!0,workerPath:null,enableSoftwareAES:!0,startLevel:void 0,startFragPrefetch:!1,fpsDroppedMonitoringPeriod:5e3,fpsDroppedMonitoringThreshold:.2,appendErrorMaxRetry:3,ignorePlaylistParsingErrors:!1,loader:XhrLoader,fLoader:void 0,pLoader:void 0,xhrSetup:void 0,licenseXhrSetup:void 0,licenseResponseCallback:void 0,abrController:AbrController,bufferController:BufferController,capLevelController:CapLevelController,errorController:ErrorController,fpsController:FPSController,stretchShortVideoTrack:!1,maxAudioFramesDrift:1,forceKeyFrameOnDiscontinuity:!0,abrEwmaFastLive:3,abrEwmaSlowLive:9,abrEwmaFastVoD:3,abrEwmaSlowVoD:9,abrEwmaDefaultEstimate:5e5,abrEwmaDefaultEstimateMax:5e6,abrBandWidthFactor:.95,abrBandWidthUpFactor:.7,abrMaxWithRealBitrate:!1,maxStarvationDelay:4,maxLoadingDelay:4,minAutoBitrate:0,emeEnabled:!1,widevineLicenseUrl:void 0,drmSystems:{},drmSystemOptions:{},requestMediaKeySystemAccessFunc:requestMediaKeySystemAccess,requireKeySystemAccessOnStart:!1,testBandwidth:!0,progressive:!1,lowLatencyMode:!0,cmcd:void 0,enableDateRangeMetadataCues:!0,enableEmsgMetadataCues:!0,enableEmsgKLVMetadata:!1,enableID3MetadataCues:!0,enableInterstitialPlayback:!0,interstitialAppendInPlace:!0,interstitialLiveLookAhead:10,useMediaCapabilities:!0,preserveManualLevelOnError:!1,certLoadPolicy:{default:{maxTimeToFirstByteMs:8e3,maxLoadTimeMs:2e4,timeoutRetry:null,errorRetry:null}},keyLoadPolicy:{default:{maxTimeToFirstByteMs:8e3,maxLoadTimeMs:2e4,timeoutRetry:{maxNumRetry:1,retryDelayMs:1e3,maxRetryDelayMs:2e4,backoff:"linear"},errorRetry:{maxNumRetry:8,retryDelayMs:1e3,maxRetryDelayMs:2e4,backoff:"linear"}}},manifestLoadPolicy:{default:{maxTimeToFirstByteMs:1/0,maxLoadTimeMs:2e4,timeoutRetry:{maxNumRetry:2,retryDelayMs:0,maxRetryDelayMs:0},errorRetry:{maxNumRetry:1,retryDelayMs:1e3,maxRetryDelayMs:8e3}}},playlistLoadPolicy:{default:{maxTimeToFirstByteMs:1e4,maxLoadTimeMs:2e4,timeoutRetry:{maxNumRetry:2,retryDelayMs:0,maxRetryDelayMs:0},errorRetry:{maxNumRetry:2,retryDelayMs:1e3,maxRetryDelayMs:8e3}}},fragLoadPolicy:{default:{maxTimeToFirstByteMs:1e4,maxLoadTimeMs:12e4,timeoutRetry:{maxNumRetry:4,retryDelayMs:0,maxRetryDelayMs:0},errorRetry:{maxNumRetry:6,retryDelayMs:1e3,maxRetryDelayMs:8e3}}},steeringManifestLoadPolicy:{default:{maxTimeToFirstByteMs:1e4,maxLoadTimeMs:2e4,timeoutRetry:{maxNumRetry:2,retryDelayMs:0,maxRetryDelayMs:0},errorRetry:{maxNumRetry:1,retryDelayMs:1e3,maxRetryDelayMs:8e3}}},interstitialAssetListLoadPolicy:{default:{maxTimeToFirstByteMs:1e4,maxLoadTimeMs:3e4,timeoutRetry:{maxNumRetry:0,retryDelayMs:0,maxRetryDelayMs:0},errorRetry:{maxNumRetry:0,retryDelayMs:1e3,maxRetryDelayMs:8e3}}},manifestLoadingTimeOut:1e4,manifestLoadingMaxRetry:1,manifestLoadingRetryDelay:1e3,manifestLoadingMaxRetryTimeout:64e3,levelLoadingTimeOut:1e4,levelLoadingMaxRetry:4,levelLoadingRetryDelay:1e3,levelLoadingMaxRetryTimeout:64e3,fragLoadingTimeOut:2e4,fragLoadingMaxRetry:6,fragLoadingRetryDelay:1e3,fragLoadingMaxRetryTimeout:64e3},function timelineConfig(){return{cueHandler:Cues,enableWebVTT:!0,enableIMSC1:!0,enableCEA708Captions:!0,captionsTextTrack1Label:"English",captionsTextTrack1LanguageCode:"en",captionsTextTrack2Label:"Spanish",captionsTextTrack2LanguageCode:"es",captionsTextTrack3Label:"Unknown CC",captionsTextTrack3LanguageCode:"",captionsTextTrack4Label:"Unknown CC",captionsTextTrack4LanguageCode:"",renderTextTracksNatively:!0}}()),{},{subtitleStreamController:SubtitleStreamController,subtitleTrackController:SubtitleTrackController,timelineController:TimelineController,audioStreamController:AudioStreamController,audioTrackController:AudioTrackController,emeController:EMEController,cmcdController:CMCDController,contentSteeringController:ContentSteeringController,interstitialsController:class InterstitialsController extends Logger{constructor(hls,HlsPlayerClass){super("interstitials",hls.logger),this.HlsPlayerClass=void 0,this.hls=void 0,this.assetListLoader=void 0,this.mediaSelection=null,this.altSelection=null,this.media=null,this.detachedData=null,this.requiredTracks=null,this.manager=null,this.playerQueue=[],this.bufferedPos=-1,this.timelinePos=-1,this.schedule=void 0,this.playingItem=null,this.bufferingItem=null,this.waitingItem=null,this.endedItem=null,this.playingAsset=null,this.endedAsset=null,this.bufferingAsset=null,this.shouldPlay=!1,this.onPlay=()=>{this.shouldPlay=!0},this.onPause=()=>{this.shouldPlay=!1},this.onSeeking=()=>{const currentTime=this.currentTime;if(void 0===currentTime||this.playbackDisabled||!this.schedule)return;const diff=currentTime-this.timelinePos;if(Math.abs(diff)<1/7056e5)return;const backwardSeek=diff<=-.01;this.timelinePos=currentTime,this.bufferedPos=currentTime;const playingItem=this.playingItem;if(!playingItem)return void this.checkBuffer();if(backwardSeek){this.schedule.resetErrorsInRange(currentTime,currentTime-diff)&&this.updateSchedule(!0)}if(this.checkBuffer(),backwardSeek&&currentTime<playingItem.start||currentTime>=playingItem.end){var _this$media;const playingIndex=this.findItemIndex(playingItem);let scheduleIndex=this.schedule.findItemIndexAtTime(currentTime);if(-1===scheduleIndex&&(scheduleIndex=playingIndex+(backwardSeek?-1:1),this.log(`seeked ${backwardSeek?"back ":""}to position not covered by schedule ${currentTime} (resolving from ${playingIndex} to ${scheduleIndex})`)),!this.isInterstitial(playingItem)&&null!=(_this$media=this.media)&&_this$media.paused&&(this.shouldPlay=!1),!backwardSeek&&scheduleIndex>playingIndex){const jumpIndex=this.schedule.findJumpRestrictedIndex(playingIndex+1,scheduleIndex);if(jumpIndex>playingIndex)return void this.setSchedulePosition(jumpIndex)}return void this.setSchedulePosition(scheduleIndex)}const playingAsset=this.playingAsset;if(!playingAsset){if(this.playingLastItem&&this.isInterstitial(playingItem)){const restartAsset=playingItem.event.assetList[0];restartAsset&&(this.endedItem=this.playingItem,this.playingItem=null,this.setScheduleToAssetAtTime(currentTime,restartAsset))}return}const start=playingAsset.timelineStart,duration=playingAsset.duration||0;var _playingItem$event;(backwardSeek&&currentTime<start||currentTime>=start+duration)&&(null!=(_playingItem$event=playingItem.event)&&_playingItem$event.appendInPlace&&(this.clearInterstitial(playingItem.event,playingItem),this.flushFrontBuffer(currentTime)),this.setScheduleToAssetAtTime(currentTime,playingAsset))},this.onTimeupdate=()=>{const currentTime=this.currentTime;if(void 0===currentTime||this.playbackDisabled)return;if(!(currentTime>this.timelinePos))return;this.timelinePos=currentTime,currentTime>this.bufferedPos&&this.checkBuffer();const playingItem=this.playingItem;if(!playingItem||this.playingLastItem)return;if(currentTime>=playingItem.end){this.timelinePos=playingItem.end;const playingIndex=this.findItemIndex(playingItem);this.setSchedulePosition(playingIndex+1)}const playingAsset=this.playingAsset;if(!playingAsset)return;currentTime>=playingAsset.timelineStart+(playingAsset.duration||0)&&this.setScheduleToAssetAtTime(currentTime,playingAsset)},this.onScheduleUpdate=(removedInterstitials,previousItems)=>{const schedule=this.schedule;if(!schedule)return;const playingItem=this.playingItem,interstitialEvents=schedule.events||[],scheduleItems=schedule.items||[],durations=schedule.durations,removedIds=removedInterstitials.map((interstitial=>interstitial.identifier)),interstitialsUpdated=!(!interstitialEvents.length&&!removedIds.length);(interstitialsUpdated||previousItems)&&this.log(`INTERSTITIALS_UPDATED (${interstitialEvents.length}): ${interstitialEvents}\nSchedule: ${scheduleItems.map((seg=>segmentToString(seg)))} pos: ${this.timelinePos}`),removedIds.length&&this.log(`Removed events ${removedIds}`);let updatedPlayingItem=null,updatedBufferingItem=null;playingItem&&(updatedPlayingItem=this.updateItem(playingItem,this.timelinePos),this.itemsMatch(playingItem,updatedPlayingItem)?this.playingItem=updatedPlayingItem:this.waitingItem=this.endedItem=null),this.waitingItem=this.updateItem(this.waitingItem),this.endedItem=this.updateItem(this.endedItem);const bufferingItem=this.bufferingItem;if(bufferingItem&&(updatedBufferingItem=this.updateItem(bufferingItem,this.bufferedPos),this.itemsMatch(bufferingItem,updatedBufferingItem)?this.bufferingItem=updatedBufferingItem:bufferingItem.event&&(this.bufferingItem=this.playingItem,this.clearInterstitial(bufferingItem.event,null))),removedInterstitials.forEach((interstitial=>{interstitial.assetList.forEach((asset=>{this.clearAssetPlayer(asset.identifier,null)}))})),this.playerQueue.forEach((player=>{if(player.interstitial.appendInPlace){const timelineStart=player.assetItem.timelineStart,diff=player.timelineOffset-timelineStart;if(diff)try{player.timelineOffset=timelineStart}catch(e){Math.abs(diff)>.025&&this.warn(`${e} ("${player.assetId}" ${player.timelineOffset}->${timelineStart})`)}}})),interstitialsUpdated||previousItems){if(this.hls.trigger(Events.INTERSTITIALS_UPDATED,{events:interstitialEvents.slice(0),schedule:scheduleItems.slice(0),durations,removedIds}),this.isInterstitial(playingItem)&&removedIds.includes(playingItem.event.identifier))return this.warn(`Interstitial "${playingItem.event.identifier}" removed while playing`),void this.primaryFallback(playingItem.event);playingItem&&this.trimInPlace(updatedPlayingItem,playingItem),bufferingItem&&this.trimInPlace(updatedBufferingItem,bufferingItem),this.checkBuffer()}},this.hls=hls,this.HlsPlayerClass=HlsPlayerClass,this.assetListLoader=new AssetListLoader(hls),this.schedule=new InterstitialsSchedule(this.onScheduleUpdate,hls.logger),this.registerListeners()}registerListeners(){const hls=this.hls;hls&&(hls.on(Events.MEDIA_ATTACHING,this.onMediaAttaching,this),hls.on(Events.MEDIA_ATTACHED,this.onMediaAttached,this),hls.on(Events.MEDIA_DETACHING,this.onMediaDetaching,this),hls.on(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.on(Events.LEVEL_UPDATED,this.onLevelUpdated,this),hls.on(Events.AUDIO_TRACK_SWITCHING,this.onAudioTrackSwitching,this),hls.on(Events.AUDIO_TRACK_UPDATED,this.onAudioTrackUpdated,this),hls.on(Events.SUBTITLE_TRACK_SWITCH,this.onSubtitleTrackSwitch,this),hls.on(Events.SUBTITLE_TRACK_UPDATED,this.onSubtitleTrackUpdated,this),hls.on(Events.EVENT_CUE_ENTER,this.onInterstitialCueEnter,this),hls.on(Events.ASSET_LIST_LOADED,this.onAssetListLoaded,this),hls.on(Events.BUFFER_APPENDED,this.onBufferAppended,this),hls.on(Events.BUFFER_FLUSHED,this.onBufferFlushed,this),hls.on(Events.BUFFERED_TO_END,this.onBufferedToEnd,this),hls.on(Events.MEDIA_ENDED,this.onMediaEnded,this),hls.on(Events.ERROR,this.onError,this),hls.on(Events.DESTROYING,this.onDestroying,this))}unregisterListeners(){const hls=this.hls;hls&&(hls.off(Events.MEDIA_ATTACHING,this.onMediaAttaching,this),hls.off(Events.MEDIA_ATTACHED,this.onMediaAttached,this),hls.off(Events.MEDIA_DETACHING,this.onMediaDetaching,this),hls.off(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.off(Events.LEVEL_UPDATED,this.onLevelUpdated,this),hls.off(Events.AUDIO_TRACK_SWITCHING,this.onAudioTrackSwitching,this),hls.off(Events.AUDIO_TRACK_UPDATED,this.onAudioTrackUpdated,this),hls.off(Events.SUBTITLE_TRACK_SWITCH,this.onSubtitleTrackSwitch,this),hls.off(Events.SUBTITLE_TRACK_UPDATED,this.onSubtitleTrackUpdated,this),hls.off(Events.EVENT_CUE_ENTER,this.onInterstitialCueEnter,this),hls.off(Events.ASSET_LIST_LOADED,this.onAssetListLoaded,this),hls.off(Events.BUFFER_CODECS,this.onBufferCodecs,this),hls.off(Events.BUFFER_APPENDED,this.onBufferAppended,this),hls.off(Events.BUFFER_FLUSHED,this.onBufferFlushed,this),hls.off(Events.BUFFERED_TO_END,this.onBufferedToEnd,this),hls.off(Events.MEDIA_ENDED,this.onMediaEnded,this),hls.off(Events.ERROR,this.onError,this),hls.off(Events.DESTROYING,this.onDestroying,this))}startLoad(){this.resumeBuffering()}stopLoad(){this.pauseBuffering()}resumeBuffering(){var _this$getBufferingPla;null==(_this$getBufferingPla=this.getBufferingPlayer())||_this$getBufferingPla.resumeBuffering()}pauseBuffering(){var _this$getBufferingPla2;null==(_this$getBufferingPla2=this.getBufferingPlayer())||_this$getBufferingPla2.pauseBuffering()}destroy(){this.unregisterListeners(),this.stopLoad(),this.assetListLoader&&this.assetListLoader.destroy(),this.emptyPlayerQueue(),this.clearScheduleState(),this.schedule&&this.schedule.destroy(),this.media=this.detachedData=this.mediaSelection=this.requiredTracks=this.altSelection=this.schedule=this.manager=null,this.hls=this.HlsPlayerClass=this.log=null,this.assetListLoader=null,this.onPlay=this.onPause=this.onSeeking=this.onTimeupdate=null,this.onScheduleUpdate=null}onDestroying(){const media=this.primaryMedia||this.media;media&&this.removeMediaListeners(media)}removeMediaListeners(media){removeEventListener(media,"play",this.onPlay),removeEventListener(media,"pause",this.onPause),removeEventListener(media,"seeking",this.onSeeking),removeEventListener(media,"timeupdate",this.onTimeupdate)}onMediaAttaching(event,data){const media=this.media=data.media;addEventListener(media,"seeking",this.onSeeking),addEventListener(media,"timeupdate",this.onTimeupdate),addEventListener(media,"play",this.onPlay),addEventListener(media,"pause",this.onPause)}onMediaAttached(event,data){const playingItem=this.effectivePlayingItem,detachedMedia=this.detachedData;if(this.detachedData=null,null===playingItem)this.checkStart();else if(!detachedMedia){this.clearScheduleState();const playingIndex=this.findItemIndex(playingItem);this.setSchedulePosition(playingIndex)}}clearScheduleState(){this.playingItem=this.bufferingItem=this.waitingItem=this.endedItem=this.playingAsset=this.endedAsset=this.bufferingAsset=null}onMediaDetaching(event,data){const transferringMedia=!!data.transferMedia,media=this.media;if(this.media=null,!transferringMedia&&(media&&this.removeMediaListeners(media),this.detachedData)){const player=this.getBufferingPlayer();player&&(this.playingAsset=this.endedAsset=this.bufferingAsset=this.bufferingItem=this.waitingItem=this.detachedData=null,player.detachMedia()),this.shouldPlay=!1}}get interstitialsManager(){if(!this.hls)return null;if(this.manager)return this.manager;const c=this,effectiveBufferingItem=()=>c.bufferingItem||c.waitingItem,getAssetPlayer=asset=>asset?c.getAssetPlayer(asset.identifier):asset,getMappedTime=(item,timelineType,asset,controllerField,assetPlayerField)=>{if(item){let time=item[timelineType].start;const interstitial=item.event;if(interstitial){if("playout"===timelineType||interstitial.timelineOccupancy!==TimelineOccupancy.Point){const assetPlayer=getAssetPlayer(asset);(null==assetPlayer?void 0:assetPlayer.interstitial)===interstitial&&(time+=assetPlayer.assetItem.startOffset+assetPlayer[assetPlayerField])}}else{time+=("bufferedPos"===controllerField?getBufferedEnd():c[controllerField])-item.start}return time}return 0},getBufferedEnd=()=>{const value=c.bufferedPos;return value===Number.MAX_VALUE?getMappedDuration("primary"):Math.max(value,0)},getMappedDuration=timelineType=>{var _c$primaryDetails,_c$schedule2;return null!=(_c$primaryDetails=c.primaryDetails)&&_c$primaryDetails.live?c.primaryDetails.edge:(null==(_c$schedule2=c.schedule)?void 0:_c$schedule2.durations[timelineType])||0},seekTo=(time,timelineType)=>{var _item$event,_c$schedule$items2;const item=c.effectivePlayingItem;if(null!=item&&null!=(_item$event=item.event)&&_item$event.restrictions.skip||!c.schedule)return;c.log(`seek to ${time} "${timelineType}"`);const playingItem=c.effectivePlayingItem,targetIndex=c.schedule.findItemIndexAtTime(time,timelineType),targetItem=null==(_c$schedule$items2=c.schedule.items)?void 0:_c$schedule$items2[targetIndex],bufferingPlayer=c.getBufferingPlayer(),bufferingInterstitial=null==bufferingPlayer?void 0:bufferingPlayer.interstitial,appendInPlace=null==bufferingInterstitial?void 0:bufferingInterstitial.appendInPlace,seekInItem=playingItem&&c.itemsMatch(playingItem,targetItem);if(playingItem&&(appendInPlace||seekInItem)){const assetPlayer=getAssetPlayer(c.playingAsset),media=(null==assetPlayer?void 0:assetPlayer.media)||c.primaryMedia;if(media){const currentTime="primary"===timelineType?media.currentTime:getMappedTime(playingItem,timelineType,c.playingAsset,"timelinePos","currentTime"),diff=time-currentTime,seekToTime=(appendInPlace?currentTime:media.currentTime)+diff;if(seekToTime>=0&&(!assetPlayer||appendInPlace||seekToTime<=assetPlayer.duration))return void(media.currentTime=seekToTime)}}if(targetItem){let seekToTime=time;if("primary"!==timelineType){const diff=time-targetItem[timelineType].start;seekToTime=targetItem.start+diff}const targetIsPrimary=!c.isInterstitial(targetItem);if(c.isInterstitial(playingItem)&&!playingItem.event.appendInPlace||!targetIsPrimary&&!targetItem.event.appendInPlace){if(playingItem){const playingIndex=c.findItemIndex(playingItem);if(targetIndex>playingIndex){const jumpIndex=c.schedule.findJumpRestrictedIndex(playingIndex+1,targetIndex);if(jumpIndex>playingIndex)return void c.setSchedulePosition(jumpIndex)}let assetIndex=0;if(targetIsPrimary)c.timelinePos=seekToTime,c.checkBuffer();else{const assetList=targetItem.event.assetList,eventTime=time-(targetItem[timelineType]||targetItem).start;for(let i=assetList.length;i--;){const asset=assetList[i];if(asset.duration&&eventTime>=asset.startOffset&&eventTime<asset.startOffset+asset.duration){assetIndex=i;break}}}c.setSchedulePosition(targetIndex,assetIndex)}}else{const media=c.media||(appendInPlace?null==bufferingPlayer?void 0:bufferingPlayer.media:null);media&&(media.currentTime=seekToTime)}}},getActiveInterstitial=()=>{const playingItem=c.effectivePlayingItem;if(c.isInterstitial(playingItem))return playingItem;const bufferingItem=effectiveBufferingItem();return c.isInterstitial(bufferingItem)?bufferingItem:null},interstitialPlayer={get bufferedEnd(){const interstitialItem=effectiveBufferingItem(),bufferingItem=c.bufferingItem;var _c$bufferingAsset;return bufferingItem&&bufferingItem===interstitialItem&&(getMappedTime(bufferingItem,"playout",c.bufferingAsset,"bufferedPos","bufferedEnd")-bufferingItem.playout.start||(null==(_c$bufferingAsset=c.bufferingAsset)?void 0:_c$bufferingAsset.startOffset))||0},get currentTime(){const interstitialItem=getActiveInterstitial(),playingItem=c.effectivePlayingItem;return playingItem&&playingItem===interstitialItem?getMappedTime(playingItem,"playout",c.effectivePlayingAsset,"timelinePos","currentTime")-playingItem.playout.start:0},set currentTime(time){const interstitialItem=getActiveInterstitial(),playingItem=c.effectivePlayingItem;playingItem&&playingItem===interstitialItem&&seekTo(time+playingItem.playout.start,"playout")},get duration(){const interstitialItem=getActiveInterstitial();return interstitialItem?interstitialItem.playout.end-interstitialItem.playout.start:0},get assetPlayers(){var _getActiveInterstitia;const assetList=null==(_getActiveInterstitia=getActiveInterstitial())?void 0:_getActiveInterstitia.event.assetList;return assetList?assetList.map((asset=>c.getAssetPlayer(asset.identifier))):[]},get playingIndex(){var _getActiveInterstitia2;const interstitial=null==(_getActiveInterstitia2=getActiveInterstitial())?void 0:_getActiveInterstitia2.event;return interstitial&&c.effectivePlayingAsset?interstitial.findAssetIndex(c.effectivePlayingAsset):-1},get scheduleItem(){return getActiveInterstitial()}};return this.manager={get events(){var _c$schedule3;return(null==(_c$schedule3=c.schedule)||null==(_c$schedule3=_c$schedule3.events)?void 0:_c$schedule3.slice(0))||[]},get schedule(){var _c$schedule4;return(null==(_c$schedule4=c.schedule)||null==(_c$schedule4=_c$schedule4.items)?void 0:_c$schedule4.slice(0))||[]},get interstitialPlayer(){return getActiveInterstitial()?interstitialPlayer:null},get playerQueue(){return c.playerQueue.slice(0)},get bufferingAsset(){return c.bufferingAsset},get bufferingItem(){return effectiveBufferingItem()},get bufferingIndex(){const item=effectiveBufferingItem();return c.findItemIndex(item)},get playingAsset(){return c.effectivePlayingAsset},get playingItem(){return c.effectivePlayingItem},get playingIndex(){const item=c.effectivePlayingItem;return c.findItemIndex(item)},primary:{get bufferedEnd(){return getBufferedEnd()},get currentTime(){const timelinePos=c.timelinePos;return timelinePos>0?timelinePos:0},set currentTime(time){seekTo(time,"primary")},get duration(){return getMappedDuration("primary")},get seekableStart(){var _c$primaryDetails2;return(null==(_c$primaryDetails2=c.primaryDetails)?void 0:_c$primaryDetails2.fragmentStart)||0}},integrated:{get bufferedEnd(){return getMappedTime(effectiveBufferingItem(),"integrated",c.bufferingAsset,"bufferedPos","bufferedEnd")},get currentTime(){return getMappedTime(c.effectivePlayingItem,"integrated",c.effectivePlayingAsset,"timelinePos","currentTime")},set currentTime(time){seekTo(time,"integrated")},get duration(){return getMappedDuration("integrated")},get seekableStart(){var _c$primaryDetails3;return((primaryTime,timelineType)=>{var _c$schedule;if(0!==primaryTime&&"primary"!==timelineType&&null!=(_c$schedule=c.schedule)&&_c$schedule.length){var _c$schedule$items;const index=c.schedule.findItemIndexAtTime(primaryTime),item=null==(_c$schedule$items=c.schedule.items)?void 0:_c$schedule$items[index];if(item)return primaryTime+(item[timelineType].start-item.start)}return primaryTime})((null==(_c$primaryDetails3=c.primaryDetails)?void 0:_c$primaryDetails3.fragmentStart)||0,"integrated")}},skip:()=>{const item=c.effectivePlayingItem,event=null==item?void 0:item.event;if(event&&!event.restrictions.skip){const index=c.findItemIndex(item);if(event.appendInPlace){const time=item.playout.start+item.event.duration;seekTo(time+.001,"playout")}else c.advanceAfterAssetEnded(event,index,1/0)}}}}get effectivePlayingItem(){return this.waitingItem||this.playingItem||this.endedItem}get effectivePlayingAsset(){return this.playingAsset||this.endedAsset}get playingLastItem(){var _this$schedule;const playingItem=this.playingItem,items=null==(_this$schedule=this.schedule)?void 0:_this$schedule.items;return!!(this.playbackStarted&&playingItem&&items)&&this.findItemIndex(playingItem)===items.length-1}get playbackStarted(){return null!==this.effectivePlayingItem}get currentTime(){var _this$bufferingItem,_media;if(null===this.mediaSelection)return;const queuedForPlayback=this.waitingItem||this.playingItem;if(this.isInterstitial(queuedForPlayback)&&!queuedForPlayback.event.appendInPlace)return;let media=this.media;!media&&null!=(_this$bufferingItem=this.bufferingItem)&&null!=(_this$bufferingItem=_this$bufferingItem.event)&&_this$bufferingItem.appendInPlace&&(media=this.primaryMedia);const currentTime=null==(_media=media)?void 0:_media.currentTime;return void 0!==currentTime&&isFiniteNumber(currentTime)?currentTime:void 0}get primaryMedia(){var _this$detachedData;return this.media||(null==(_this$detachedData=this.detachedData)?void 0:_this$detachedData.media)||null}isInterstitial(item){return!(null==item||!item.event)}retreiveMediaSource(assetId,toSegment){const player=this.getAssetPlayer(assetId);player&&this.transferMediaFromPlayer(player,toSegment)}transferMediaFromPlayer(player,toSegment){const appendInPlace=player.interstitial.appendInPlace,playerMedia=player.media;if(appendInPlace&&playerMedia===this.primaryMedia){if(this.bufferingAsset=null,(!toSegment||this.isInterstitial(toSegment)&&!toSegment.event.appendInPlace)&&toSegment&&playerMedia)return void(this.detachedData={media:playerMedia});const attachMediaSourceData=player.transferMedia();this.log(`transfer MediaSource from ${player} ${stringify(attachMediaSourceData)}`),this.detachedData=attachMediaSourceData}else toSegment&&playerMedia&&(this.shouldPlay||(this.shouldPlay=!playerMedia.paused))}transferMediaTo(player,media){var _this$detachedData2,_attachMediaSourceDat;if(player.media===media)return;let attachMediaSourceData=null;const primaryPlayer=this.hls,isAssetPlayer=player!==primaryPlayer,appendInPlace=isAssetPlayer&&player.interstitial.appendInPlace,detachedMediaSource=null==(_this$detachedData2=this.detachedData)?void 0:_this$detachedData2.mediaSource;let logFromSource;if(primaryPlayer.media)appendInPlace&&(attachMediaSourceData=primaryPlayer.transferMedia(),this.detachedData=attachMediaSourceData),logFromSource="Primary";else if(detachedMediaSource){const bufferingPlayer=this.getBufferingPlayer();bufferingPlayer?(attachMediaSourceData=bufferingPlayer.transferMedia(),logFromSource=`${bufferingPlayer}`):logFromSource="detached MediaSource"}else logFromSource="detached media";if(!attachMediaSourceData)if(detachedMediaSource)attachMediaSourceData=this.detachedData,this.log(`using detachedData: MediaSource ${stringify(attachMediaSourceData)}`);else if(!this.detachedData||primaryPlayer.media===media){const playerQueue=this.playerQueue;playerQueue.length>1&&playerQueue.forEach((queuedPlayer=>{if(isAssetPlayer&&queuedPlayer.interstitial.appendInPlace!==appendInPlace){const interstitial=queuedPlayer.interstitial;this.clearInterstitial(queuedPlayer.interstitial,null),interstitial.appendInPlace=!1,interstitial.appendInPlace&&this.warn(`Could not change append strategy for queued assets ${interstitial}`)}})),this.hls.detachMedia(),this.detachedData={media}}const transferring=attachMediaSourceData&&"mediaSource"in attachMediaSourceData&&"closed"!==(null==(_attachMediaSourceDat=attachMediaSourceData.mediaSource)?void 0:_attachMediaSourceDat.readyState),dataToAttach=transferring&&attachMediaSourceData?attachMediaSourceData:media;this.log(`${transferring?"transfering MediaSource":"attaching media"} to ${isAssetPlayer?player:"Primary"} from ${logFromSource} (media.currentTime: ${media.currentTime})`);const schedule=this.schedule;if(dataToAttach===attachMediaSourceData&&schedule){const isAssetAtEndOfSchedule=isAssetPlayer&&player.assetId===schedule.assetIdAtEnd;dataToAttach.overrides={duration:schedule.duration,endOfStream:!isAssetPlayer||isAssetAtEndOfSchedule,cueRemoval:!isAssetPlayer}}player.attachMedia(dataToAttach)}onInterstitialCueEnter(){this.onTimeupdate()}checkStart(){const schedule=this.schedule,interstitialEvents=null==schedule?void 0:schedule.events;if(!interstitialEvents||this.playbackDisabled||!this.media)return;-1===this.bufferedPos&&(this.bufferedPos=0);const timelinePos=this.timelinePos,effectivePlayingItem=this.effectivePlayingItem;if(-1===timelinePos){const startPosition=this.hls.startPosition;if(this.timelinePos=startPosition,interstitialEvents.length&&interstitialEvents[0].cue.pre){const index=schedule.findEventIndex(interstitialEvents[0].identifier);this.setSchedulePosition(index)}else if(startPosition>=0||!this.primaryLive){const start=this.timelinePos=startPosition>0?startPosition:0,index=schedule.findItemIndexAtTime(start);this.setSchedulePosition(index)}}else if(effectivePlayingItem&&!this.playingItem){const index=schedule.findItemIndex(effectivePlayingItem);this.setSchedulePosition(index)}}advanceAssetBuffering(item,assetItem){const interstitial=item.event,assetListIndex=interstitial.findAssetIndex(assetItem),nextAssetIndex=getNextAssetIndex(interstitial,assetListIndex);if(interstitial.isAssetPastPlayoutLimit(nextAssetIndex)){if(this.schedule){var _this$schedule$items;const nextItem=null==(_this$schedule$items=this.schedule.items)?void 0:_this$schedule$items[this.findItemIndex(item)+1];nextItem&&this.bufferedToItem(nextItem)}}else this.bufferedToEvent(item,nextAssetIndex)}advanceAfterAssetEnded(interstitial,index,assetListIndex){const nextAssetIndex=getNextAssetIndex(interstitial,assetListIndex);if(interstitial.isAssetPastPlayoutLimit(nextAssetIndex)){if(this.schedule){const scheduleItems=this.schedule.items;if(scheduleItems){const nextIndex=index+1;if(nextIndex>=scheduleItems.length)return void this.setSchedulePosition(-1);const resumptionTime=interstitial.resumeTime;this.timelinePos<resumptionTime&&(this.timelinePos=resumptionTime,interstitial.appendInPlace&&this.advanceInPlace(resumptionTime),this.checkBuffer(this.bufferedPos<resumptionTime)),this.setSchedulePosition(nextIndex)}}}else{if(interstitial.appendInPlace){const assetItem=interstitial.assetList[nextAssetIndex];assetItem&&this.advanceInPlace(assetItem.timelineStart)}this.setSchedulePosition(index,nextAssetIndex)}}setScheduleToAssetAtTime(time,playingAsset){const schedule=this.schedule;if(!schedule)return;const parentIdentifier=playingAsset.parentIdentifier,interstitial=schedule.getEvent(parentIdentifier);if(interstitial){const itemIndex=schedule.findEventIndex(parentIdentifier),assetListIndex=schedule.findAssetIndex(interstitial,time);this.advanceAfterAssetEnded(interstitial,itemIndex,assetListIndex-1)}}setSchedulePosition(index,assetListIndex){var _this$schedule2;const scheduleItems=null==(_this$schedule2=this.schedule)?void 0:_this$schedule2.items;if(!scheduleItems||this.playbackDisabled)return;const scheduledItem=index>=0?scheduleItems[index]:null;this.log(`setSchedulePosition ${index}, ${assetListIndex} (${scheduledItem?segmentToString(scheduledItem):scheduledItem})`);const currentItem=this.waitingItem||this.playingItem,playingLastItem=this.playingLastItem;if(this.isInterstitial(currentItem)){const interstitial=currentItem.event,playingAsset=this.playingAsset,assetId=null==playingAsset?void 0:playingAsset.identifier,player=assetId?this.getAssetPlayer(assetId):null;if(player&&assetId&&(!this.eventItemsMatch(currentItem,scheduledItem)||void 0!==assetListIndex&&assetId!==interstitial.assetList[assetListIndex].identifier)){var _this$detachedData3;const playingAssetListIndex=interstitial.findAssetIndex(playingAsset);if(this.log(`INTERSTITIAL_ASSET_ENDED ${playingAssetListIndex+1}/${interstitial.assetList.length} ${eventAssetToString(playingAsset)}`),this.endedAsset=playingAsset,this.playingAsset=null,this.hls.trigger(Events.INTERSTITIAL_ASSET_ENDED,{asset:playingAsset,assetListIndex:playingAssetListIndex,event:interstitial,schedule:scheduleItems.slice(0),scheduleIndex:index,player}),currentItem!==this.playingItem)return void(this.itemsMatch(currentItem,this.playingItem)&&!this.playingAsset&&this.advanceAfterAssetEnded(interstitial,this.findItemIndex(this.playingItem),playingAssetListIndex));this.retreiveMediaSource(assetId,scheduledItem),!player.media||null!=(_this$detachedData3=this.detachedData)&&_this$detachedData3.mediaSource||player.detachMedia()}if(!this.eventItemsMatch(currentItem,scheduledItem)&&(this.endedItem=currentItem,this.playingItem=null,this.log(`INTERSTITIAL_ENDED ${interstitial} ${segmentToString(currentItem)}`),interstitial.hasPlayed=!0,this.hls.trigger(Events.INTERSTITIAL_ENDED,{event:interstitial,schedule:scheduleItems.slice(0),scheduleIndex:index}),interstitial.cue.once)){var _this$schedule3;this.updateSchedule();const updatedScheduleItems=null==(_this$schedule3=this.schedule)?void 0:_this$schedule3.items;if(scheduledItem&&updatedScheduleItems){const updatedIndex=this.findItemIndex(scheduledItem);this.advanceSchedule(updatedIndex,updatedScheduleItems,assetListIndex,currentItem,playingLastItem)}return}}this.advanceSchedule(index,scheduleItems,assetListIndex,currentItem,playingLastItem)}advanceSchedule(index,scheduleItems,assetListIndex,currentItem,playedLastItem){const schedule=this.schedule;if(!schedule)return;const scheduledItem=index>=0?scheduleItems[index]:null,media=this.primaryMedia,playerQueue=this.playerQueue;if(playerQueue.length&&playerQueue.forEach((player=>{const interstitial=player.interstitial,queuedIndex=schedule.findEventIndex(interstitial.identifier);(queuedIndex<index||queuedIndex>index+1)&&this.clearInterstitial(interstitial,scheduledItem)})),this.isInterstitial(scheduledItem)){this.timelinePos=Math.min(Math.max(this.timelinePos,scheduledItem.start),scheduledItem.end);const interstitial=scheduledItem.event;if(void 0===assetListIndex){const assetIndexCandidate=getNextAssetIndex(interstitial,(assetListIndex=schedule.findAssetIndex(interstitial,this.timelinePos))-1);if(interstitial.isAssetPastPlayoutLimit(assetIndexCandidate)||interstitial.appendInPlace&&this.timelinePos===scheduledItem.end)return void this.advanceAfterAssetEnded(interstitial,index,assetListIndex);assetListIndex=assetIndexCandidate}const waitingItem=this.waitingItem;this.assetsBuffered(scheduledItem,media)||this.setBufferingItem(scheduledItem);let player=this.preloadAssets(interstitial,assetListIndex);if(this.eventItemsMatch(scheduledItem,waitingItem||currentItem)||(this.waitingItem=scheduledItem,this.log(`INTERSTITIAL_STARTED ${segmentToString(scheduledItem)} ${interstitial.appendInPlace?"append in place":""}`),this.hls.trigger(Events.INTERSTITIAL_STARTED,{event:interstitial,schedule:scheduleItems.slice(0),scheduleIndex:index})),!interstitial.assetListLoaded)return void this.log(`Waiting for ASSET-LIST to complete loading ${interstitial}`);if(interstitial.assetListLoader&&(interstitial.assetListLoader.destroy(),interstitial.assetListLoader=void 0),!media)return void this.log(`Waiting for attachMedia to start Interstitial ${interstitial}`);this.waitingItem=this.endedItem=null,this.playingItem=scheduledItem;const assetItem=interstitial.assetList[assetListIndex];if(!assetItem)return void this.advanceAfterAssetEnded(interstitial,index,assetListIndex||0);if(player||(player=this.getAssetPlayer(assetItem.identifier)),null===player||player.destroyed){const assetListLength=interstitial.assetList.length;this.warn(`asset ${assetListIndex+1}/${assetListLength} player destroyed ${interstitial}`),player=this.createAssetPlayer(interstitial,assetItem,assetListIndex),player.loadSource()}if(!this.eventItemsMatch(scheduledItem,this.bufferingItem)&&interstitial.appendInPlace&&this.isAssetBuffered(assetItem))return;this.startAssetPlayer(player,assetListIndex,scheduleItems,index,media),this.shouldPlay&&playWithCatch(player.media)}else null!==scheduledItem?(this.resumePrimary(scheduledItem,index,currentItem),this.shouldPlay&&playWithCatch(this.hls.media)):playedLastItem&&this.isInterstitial(currentItem)&&(this.endedItem=null,this.playingItem=currentItem,currentItem.event.appendInPlace||this.attachPrimary(schedule.durations.primary,null))}get playbackDisabled(){return!1===this.hls.config.enableInterstitialPlayback}get primaryDetails(){var _this$mediaSelection;return null==(_this$mediaSelection=this.mediaSelection)?void 0:_this$mediaSelection.main.details}get primaryLive(){var _this$primaryDetails;return!(null==(_this$primaryDetails=this.primaryDetails)||!_this$primaryDetails.live)}resumePrimary(scheduledItem,index,fromItem){var _this$detachedData4,_this$schedule4;if(this.playingItem=scheduledItem,this.playingAsset=this.endedAsset=null,this.waitingItem=this.endedItem=null,this.bufferedToItem(scheduledItem),this.log(`resuming ${segmentToString(scheduledItem)}`),null==(_this$detachedData4=this.detachedData)||!_this$detachedData4.mediaSource){let timelinePos=this.timelinePos;(timelinePos<scheduledItem.start||timelinePos>=scheduledItem.end)&&(timelinePos=this.getPrimaryResumption(scheduledItem,index),this.timelinePos=timelinePos),this.attachPrimary(timelinePos,scheduledItem)}if(!fromItem)return;const scheduleItems=null==(_this$schedule4=this.schedule)?void 0:_this$schedule4.items;scheduleItems&&(this.log(`INTERSTITIALS_PRIMARY_RESUMED ${segmentToString(scheduledItem)}`),this.hls.trigger(Events.INTERSTITIALS_PRIMARY_RESUMED,{schedule:scheduleItems.slice(0),scheduleIndex:index}),this.checkBuffer())}getPrimaryResumption(scheduledItem,index){const itemStart=scheduledItem.start;if(this.primaryLive){const details=this.primaryDetails;if(0===index)return this.hls.startPosition;if(details&&(itemStart<details.fragmentStart||itemStart>details.edge))return this.hls.liveSyncPosition||-1}return itemStart}isAssetBuffered(asset){const player=this.getAssetPlayer(asset.identifier);if(null!=player&&player.hls)return player.hls.bufferedToEnd;return BufferHelper.bufferInfo(this.primaryMedia,this.timelinePos,0).end+1>=asset.timelineStart+(asset.duration||0)}attachPrimary(timelinePos,item,skipSeekToStartPosition){item?this.setBufferingItem(item):this.bufferingItem=this.playingItem,this.bufferingAsset=null;const media=this.primaryMedia;if(!media)return;const hls=this.hls;hls.media?this.checkBuffer():(this.transferMediaTo(hls,media),skipSeekToStartPosition&&this.startLoadingPrimaryAt(timelinePos,skipSeekToStartPosition)),skipSeekToStartPosition||(this.timelinePos=timelinePos,this.startLoadingPrimaryAt(timelinePos,skipSeekToStartPosition))}startLoadingPrimaryAt(timelinePos,skipSeekToStartPosition){var _hls$mainForwardBuffe;const hls=this.hls;!hls.loadingEnabled||!hls.media||Math.abs(((null==(_hls$mainForwardBuffe=hls.mainForwardBufferInfo)?void 0:_hls$mainForwardBuffe.start)||hls.media.currentTime)-timelinePos)>.5?hls.startLoad(timelinePos,skipSeekToStartPosition):hls.bufferingEnabled||hls.resumeBuffering()}onManifestLoading(){var _this$schedule5;this.stopLoad(),null==(_this$schedule5=this.schedule)||_this$schedule5.reset(),this.emptyPlayerQueue(),this.clearScheduleState(),this.shouldPlay=!1,this.bufferedPos=this.timelinePos=-1,this.mediaSelection=this.altSelection=this.manager=this.requiredTracks=null,this.hls.off(Events.BUFFER_CODECS,this.onBufferCodecs,this),this.hls.on(Events.BUFFER_CODECS,this.onBufferCodecs,this)}onLevelUpdated(event,data){if(-1===data.level||!this.schedule)return;const main=this.hls.levels[data.level],currentSelection=_objectSpread2(_objectSpread2({},this.mediaSelection||this.altSelection),{},{main});this.mediaSelection=currentSelection,this.schedule.parseInterstitialDateRanges(currentSelection,this.hls.config.interstitialAppendInPlace),!this.effectivePlayingItem&&this.schedule.items&&this.checkStart()}onAudioTrackUpdated(event,data){const audio=this.hls.audioTracks[data.id],previousSelection=this.mediaSelection;if(!previousSelection)return void(this.altSelection=_objectSpread2(_objectSpread2({},this.altSelection),{},{audio}));const currentSelection=_objectSpread2(_objectSpread2({},previousSelection),{},{audio});this.mediaSelection=currentSelection}onSubtitleTrackUpdated(event,data){const subtitles=this.hls.subtitleTracks[data.id],previousSelection=this.mediaSelection;if(!previousSelection)return void(this.altSelection=_objectSpread2(_objectSpread2({},this.altSelection),{},{subtitles}));const currentSelection=_objectSpread2(_objectSpread2({},previousSelection),{},{subtitles});this.mediaSelection=currentSelection}onAudioTrackSwitching(event,data){const audioOption=getBasicSelectionOption(data);this.playerQueue.forEach((({hls})=>hls&&(hls.setAudioOption(data)||hls.setAudioOption(audioOption))))}onSubtitleTrackSwitch(event,data){const subtitleOption=getBasicSelectionOption(data);this.playerQueue.forEach((({hls})=>hls&&(hls.setSubtitleOption(data)||-1!==data.id&&hls.setSubtitleOption(subtitleOption))))}onBufferCodecs(event,data){const requiredTracks=data.tracks;requiredTracks&&(this.requiredTracks=requiredTracks)}onBufferAppended(event,data){this.checkBuffer()}onBufferFlushed(event,data){const playingItem=this.playingItem;if(playingItem&&!this.itemsMatch(playingItem,this.bufferingItem)&&!this.isInterstitial(playingItem)){const timelinePos=this.timelinePos;this.bufferedPos=timelinePos,this.checkBuffer()}}onBufferedToEnd(event){if(!this.schedule)return;const interstitialEvents=this.schedule.events;if(this.bufferedPos<Number.MAX_VALUE&&interstitialEvents){for(let i=0;i<interstitialEvents.length;i++){const interstitial=interstitialEvents[i];if(interstitial.cue.post){var _this$schedule$items2;const scheduleIndex=this.schedule.findEventIndex(interstitial.identifier),item=null==(_this$schedule$items2=this.schedule.items)?void 0:_this$schedule$items2[scheduleIndex];this.isInterstitial(item)&&this.eventItemsMatch(item,this.bufferingItem)&&this.bufferedToItem(item,0);break}}this.bufferedPos=Number.MAX_VALUE}}onMediaEnded(event){const playingItem=this.playingItem;if(!this.playingLastItem&&playingItem){const playingIndex=this.findItemIndex(playingItem);this.setSchedulePosition(playingIndex+1)}else this.shouldPlay=!1}updateItem(previousItem,time){var _this$schedule6;const items=null==(_this$schedule6=this.schedule)?void 0:_this$schedule6.items;if(previousItem&&items){return items[this.findItemIndex(previousItem,time)]||null}return null}trimInPlace(updatedItem,itemBeforeUpdate){if(this.isInterstitial(updatedItem)&&updatedItem.event.appendInPlace&&itemBeforeUpdate.end-updatedItem.end>.25){updatedItem.event.assetList.forEach(((asset,index)=>{updatedItem.event.isAssetPastPlayoutLimit(index)&&this.clearAssetPlayer(asset.identifier,null)}));const flushStart=updatedItem.end+.25,bufferInfo=BufferHelper.bufferInfo(this.primaryMedia,flushStart,0);(bufferInfo.end>flushStart||(bufferInfo.nextStart||0)>flushStart)&&(this.attachPrimary(flushStart,null),this.flushFrontBuffer(flushStart))}}itemsMatch(a,b){return!!b&&(a===b||a.event&&b.event&&this.eventItemsMatch(a,b)||!a.event&&!b.event&&this.findItemIndex(a)===this.findItemIndex(b))}eventItemsMatch(a,b){var _b$event;return!!b&&(a===b||a.event.identifier===(null==(_b$event=b.event)?void 0:_b$event.identifier))}findItemIndex(item,time){return item&&this.schedule?this.schedule.findItemIndex(item,time):-1}updateSchedule(forceUpdate=!1){var _this$schedule7;const mediaSelection=this.mediaSelection;mediaSelection&&(null==(_this$schedule7=this.schedule)||_this$schedule7.updateSchedule(mediaSelection,[],forceUpdate))}checkBuffer(starved){var _this$schedule8;const items=null==(_this$schedule8=this.schedule)?void 0:_this$schedule8.items;if(!items)return;const bufferInfo=BufferHelper.bufferInfo(this.primaryMedia,this.timelinePos,0);starved&&(this.bufferedPos=this.timelinePos),starved||(starved=bufferInfo.len<1),this.updateBufferedPos(bufferInfo.end,items,starved)}updateBufferedPos(bufferEnd,items,bufferIsEmpty){const schedule=this.schedule,bufferingItem=this.bufferingItem;if(this.bufferedPos>bufferEnd||!schedule)return;if(1===items.length&&this.itemsMatch(items[0],bufferingItem))return void(this.bufferedPos=bufferEnd);const playingItem=this.playingItem,playingIndex=this.findItemIndex(playingItem);let bufferEndIndex=schedule.findItemIndexAtTime(bufferEnd);if(this.bufferedPos<bufferEnd){var _nextItemToBuffer$eve;const bufferingIndex=this.findItemIndex(bufferingItem),nextToBufferIndex=Math.min(bufferingIndex+1,items.length-1),nextItemToBuffer=items[nextToBufferIndex];if((-1===bufferEndIndex&&bufferingItem&&bufferEnd>=bufferingItem.end||null!=(_nextItemToBuffer$eve=nextItemToBuffer.event)&&_nextItemToBuffer$eve.appendInPlace&&bufferEnd+.01>=nextItemToBuffer.start)&&(bufferEndIndex=nextToBufferIndex),this.isInterstitial(bufferingItem)){const interstitial=bufferingItem.event;if(nextToBufferIndex-playingIndex>1&&!1===interstitial.appendInPlace)return;if(0===interstitial.assetList.length&&interstitial.assetListLoader)return}if(this.bufferedPos=bufferEnd,bufferEndIndex>bufferingIndex&&bufferEndIndex>playingIndex)this.bufferedToItem(nextItemToBuffer);else{const details=this.primaryDetails;this.primaryLive&&details&&bufferEnd>details.edge-details.targetduration&&nextItemToBuffer.start<details.edge+this.hls.config.interstitialLiveLookAhead&&this.isInterstitial(nextItemToBuffer)&&this.preloadAssets(nextItemToBuffer.event,0)}}else bufferIsEmpty&&playingItem&&!this.itemsMatch(playingItem,bufferingItem)&&(bufferEndIndex===playingIndex?this.bufferedToItem(playingItem):bufferEndIndex===playingIndex+1&&this.bufferedToItem(items[bufferEndIndex]))}assetsBuffered(item,media){return 0!==item.event.assetList.length&&!item.event.assetList.some((asset=>{const player=this.getAssetPlayer(asset.identifier);return!(null!=player&&player.bufferedInPlaceToEnd(media))}))}setBufferingItem(item){const bufferingLast=this.bufferingItem,schedule=this.schedule;if(!this.itemsMatch(item,bufferingLast)&&schedule){const{items,events}=schedule;if(!items||!events)return bufferingLast;const isInterstitial=this.isInterstitial(item),bufferingPlayer=this.getBufferingPlayer();this.bufferingItem=item,this.bufferedPos=Math.max(item.start,Math.min(item.end,this.timelinePos));const timeRemaining=bufferingPlayer?bufferingPlayer.remaining:bufferingLast?bufferingLast.end-this.timelinePos:0;if(this.log(`INTERSTITIALS_BUFFERED_TO_BOUNDARY ${segmentToString(item)}`+(bufferingLast?` (${timeRemaining.toFixed(2)} remaining)`:"")),!this.playbackDisabled)if(isInterstitial){const bufferIndex=schedule.findAssetIndex(item.event,this.bufferedPos);item.event.assetList.forEach(((asset,i)=>{const player=this.getAssetPlayer(asset.identifier);player&&(i===bufferIndex&&player.loadSource(),player.resumeBuffering())}))}else this.hls.resumeBuffering(),this.playerQueue.forEach((player=>player.pauseBuffering()));this.hls.trigger(Events.INTERSTITIALS_BUFFERED_TO_BOUNDARY,{events:events.slice(0),schedule:items.slice(0),bufferingIndex:this.findItemIndex(item),playingIndex:this.findItemIndex(this.playingItem)})}else this.bufferingItem!==item&&(this.bufferingItem=item);return bufferingLast}bufferedToItem(item,assetListIndex=0){const bufferingLast=this.setBufferingItem(item);if(!this.playbackDisabled)if(this.isInterstitial(item))this.bufferedToEvent(item,assetListIndex);else if(null!==bufferingLast){this.bufferingAsset=null;const detachedData=this.detachedData;if(detachedData)if(detachedData.mediaSource){const skipSeekToStartPosition=!0;this.attachPrimary(item.start,item,skipSeekToStartPosition)}else this.preloadPrimary(item);else this.preloadPrimary(item)}}preloadPrimary(item){const index=this.findItemIndex(item),timelinePos=this.getPrimaryResumption(item,index);this.startLoadingPrimaryAt(timelinePos)}bufferedToEvent(item,assetListIndex){const interstitial=item.event,neverLoaded=0===interstitial.assetList.length&&!interstitial.assetListLoader,playOnce=interstitial.cue.once;if(neverLoaded||!playOnce){const player=this.preloadAssets(interstitial,assetListIndex);if(null!=player&&player.interstitial.appendInPlace){const media=this.primaryMedia;media&&this.bufferAssetPlayer(player,media)}}}preloadAssets(interstitial,assetListIndex){const uri=interstitial.assetUrl,assetListLength=interstitial.assetList.length,neverLoaded=0===assetListLength&&!interstitial.assetListLoader,playOnce=interstitial.cue.once;if(neverLoaded){const timelineStart=interstitial.timelineStart;if(interstitial.appendInPlace){var _playingItem$nextEven;const playingItem=this.playingItem;this.isInterstitial(playingItem)||(null==playingItem||null==(_playingItem$nextEven=playingItem.nextEvent)?void 0:_playingItem$nextEven.identifier)!==interstitial.identifier||this.flushFrontBuffer(timelineStart+.25)}let hlsStartOffset,liveStartPosition=0;if(!this.playingItem&&this.primaryLive&&(liveStartPosition=this.hls.startPosition,-1===liveStartPosition&&(liveStartPosition=this.hls.liveSyncPosition||0)),liveStartPosition&&!interstitial.cue.pre&&!interstitial.cue.post){const startOffset=liveStartPosition-timelineStart;startOffset>0&&(hlsStartOffset=Math.round(1e3*startOffset)/1e3)}if(this.log(`Load interstitial asset ${assetListIndex+1}/${uri?1:assetListLength} ${interstitial}${hlsStartOffset?` live-start: ${liveStartPosition} start-offset: ${hlsStartOffset}`:""}`),uri)return this.createAsset(interstitial,0,0,timelineStart,interstitial.duration,uri);const assetListLoader=this.assetListLoader.loadAssetList(interstitial,hlsStartOffset);assetListLoader&&(interstitial.assetListLoader=assetListLoader)}else if(!playOnce&&assetListLength){for(let i=assetListIndex;i<assetListLength;i++){const _asset=interstitial.assetList[i],playerIndex=this.getAssetPlayerQueueIndex(_asset.identifier);-1!==playerIndex&&!this.playerQueue[playerIndex].destroyed||_asset.error||this.createAssetPlayer(interstitial,_asset,i)}const asset=interstitial.assetList[assetListIndex];if(asset){const player=this.getAssetPlayer(asset.identifier);return player&&player.loadSource(),player}}return null}flushFrontBuffer(startOffset){const requiredTracks=this.requiredTracks;if(!requiredTracks)return;this.log(`Removing front buffer starting at ${startOffset}`);Object.keys(requiredTracks).forEach((type=>{this.hls.trigger(Events.BUFFER_FLUSHING,{startOffset,endOffset:1/0,type})}))}getAssetPlayerQueueIndex(assetId){const playerQueue=this.playerQueue;for(let i=0;i<playerQueue.length;i++)if(assetId===playerQueue[i].assetId)return i;return-1}getAssetPlayer(assetId){const index=this.getAssetPlayerQueueIndex(assetId);return this.playerQueue[index]||null}getBufferingPlayer(){const{playerQueue,primaryMedia}=this;if(primaryMedia)for(let i=0;i<playerQueue.length;i++)if(playerQueue[i].media===primaryMedia)return playerQueue[i];return null}createAsset(interstitial,assetListIndex,startOffset,timelineStart,duration,uri){const assetItem={parentIdentifier:interstitial.identifier,identifier:generateAssetIdentifier(interstitial,uri,assetListIndex),duration,startOffset,timelineStart,uri};return this.createAssetPlayer(interstitial,assetItem,assetListIndex)}createAssetPlayer(interstitial,assetItem,assetListIndex){const primary=this.hls,userConfig=primary.userConfig;let videoPreference=userConfig.videoPreference;const currentLevel=primary.loadLevelObj||primary.levels[primary.currentLevel];(videoPreference||currentLevel)&&(videoPreference=_extends({},videoPreference),currentLevel.videoCodec&&(videoPreference.videoCodec=currentLevel.videoCodec),currentLevel.videoRange&&(videoPreference.allowedVideoRanges=[currentLevel.videoRange]));const selectedAudio=primary.audioTracks[primary.audioTrack],selectedSubtitle=primary.subtitleTracks[primary.subtitleTrack];let startPosition=0;if(this.primaryLive||interstitial.appendInPlace){const timePastStart=this.timelinePos-assetItem.timelineStart;if(timePastStart>1){const duration=assetItem.duration;duration&&timePastStart<duration&&(startPosition=timePastStart)}}const assetId=assetItem.identifier,playerConfig=_objectSpread2(_objectSpread2({},userConfig),{},{maxMaxBufferLength:Math.min(180,primary.config.maxMaxBufferLength),autoStartLoad:!0,startFragPrefetch:!0,primarySessionId:primary.sessionId,assetPlayerId:assetId,abrEwmaDefaultEstimate:primary.bandwidthEstimate,interstitialsController:void 0,startPosition,liveDurationInfinity:!1,testBandwidth:!1,videoPreference,audioPreference:selectedAudio||userConfig.audioPreference,subtitlePreference:selectedSubtitle||userConfig.subtitlePreference});interstitial.appendInPlace&&(interstitial.appendInPlaceStarted=!0,assetItem.timelineStart&&(playerConfig.timelineOffset=assetItem.timelineStart));const cmcd=playerConfig.cmcd;null!=cmcd&&cmcd.sessionId&&cmcd.contentId&&(playerConfig.cmcd=_extends({},cmcd,{contentId:hash(assetItem.uri)})),this.getAssetPlayer(assetId)&&this.warn(`Duplicate date range identifier ${interstitial} and asset ${assetId}`);const player=new HlsAssetPlayer(this.HlsPlayerClass,playerConfig,interstitial,assetItem);this.playerQueue.push(player),interstitial.assetList[assetListIndex]=assetItem;let initialDuration=!0;const updateAssetPlayerDetails=details=>{if(details.live){var _this$schedule9;const error=new Error(`Interstitials MUST be VOD assets ${interstitial}`),errorData={fatal:!0,type:ErrorTypes.OTHER_ERROR,details:ErrorDetails.INTERSTITIAL_ASSET_ITEM_ERROR,error},scheduleIndex=(null==(_this$schedule9=this.schedule)?void 0:_this$schedule9.findEventIndex(interstitial.identifier))||-1;return void this.handleAssetItemError(errorData,interstitial,scheduleIndex,assetListIndex,error.message)}const duration=details.edge-details.fragmentStart,currentAssetDuration=assetItem.duration;(initialDuration||null===currentAssetDuration||duration>currentAssetDuration)&&(initialDuration=!1,this.log(`Interstitial asset "${assetId}" duration change ${currentAssetDuration} > ${duration}`),assetItem.duration=duration,this.updateSchedule())};player.on(Events.LEVEL_UPDATED,((event,{details})=>updateAssetPlayerDetails(details))),player.on(Events.LEVEL_PTS_UPDATED,((event,{details})=>updateAssetPlayerDetails(details))),player.on(Events.EVENT_CUE_ENTER,(()=>this.onInterstitialCueEnter()));const onBufferCodecs=(event,data)=>{const inQueuPlayer=this.getAssetPlayer(assetId);if(inQueuPlayer&&data.tracks){inQueuPlayer.off(Events.BUFFER_CODECS,onBufferCodecs),inQueuPlayer.tracks=data.tracks;const media=this.primaryMedia;this.bufferingAsset===inQueuPlayer.assetItem&&media&&!inQueuPlayer.media&&this.bufferAssetPlayer(inQueuPlayer,media)}};player.on(Events.BUFFER_CODECS,onBufferCodecs);player.on(Events.BUFFERED_TO_END,(()=>{var _this$schedule$items3;const inQueuPlayer=this.getAssetPlayer(assetId);if(this.log(`buffered to end of asset ${inQueuPlayer}`),!inQueuPlayer||!this.schedule)return;const scheduleIndex=this.schedule.findEventIndex(interstitial.identifier),item=null==(_this$schedule$items3=this.schedule.items)?void 0:_this$schedule$items3[scheduleIndex];this.isInterstitial(item)&&this.advanceAssetBuffering(item,assetItem)}));const endedWithAssetIndex=assetIndex=>()=>{if(!this.getAssetPlayer(assetId)||!this.schedule)return;this.shouldPlay=!0;const scheduleIndex=this.schedule.findEventIndex(interstitial.identifier);this.advanceAfterAssetEnded(interstitial,scheduleIndex,assetIndex)};return player.once(Events.MEDIA_ENDED,endedWithAssetIndex(assetListIndex)),player.once(Events.PLAYOUT_LIMIT_REACHED,endedWithAssetIndex(1/0)),player.on(Events.ERROR,((event,data)=>{if(!this.schedule)return;const inQueuPlayer=this.getAssetPlayer(assetId);if(data.details===ErrorDetails.BUFFER_STALLED_ERROR)return null!=inQueuPlayer&&inQueuPlayer.appendInPlace?void this.handleInPlaceStall(interstitial):(this.onTimeupdate(),void this.checkBuffer(!0));this.handleAssetItemError(data,interstitial,this.schedule.findEventIndex(interstitial.identifier),assetListIndex,`Asset player error ${data.error} ${interstitial}`)})),player.on(Events.DESTROYING,(()=>{if(!this.getAssetPlayer(assetId)||!this.schedule)return;const error=new Error(`Asset player destroyed unexpectedly ${assetId}`),errorData={fatal:!0,type:ErrorTypes.OTHER_ERROR,details:ErrorDetails.INTERSTITIAL_ASSET_ITEM_ERROR,error};this.handleAssetItemError(errorData,interstitial,this.schedule.findEventIndex(interstitial.identifier),assetListIndex,error.message)})),this.log(`INTERSTITIAL_ASSET_PLAYER_CREATED ${eventAssetToString(assetItem)}`),this.hls.trigger(Events.INTERSTITIAL_ASSET_PLAYER_CREATED,{asset:assetItem,assetListIndex,event:interstitial,player}),player}clearInterstitial(interstitial,toSegment){interstitial.assetList.forEach((asset=>{this.clearAssetPlayer(asset.identifier,toSegment)})),interstitial.reset()}resetAssetPlayer(assetId){const playerIndex=this.getAssetPlayerQueueIndex(assetId);if(-1!==playerIndex){this.log(`reset asset player "${assetId}" after error`);const player=this.playerQueue[playerIndex];this.transferMediaFromPlayer(player,null),player.resetDetails()}}clearAssetPlayer(assetId,toSegment){const playerIndex=this.getAssetPlayerQueueIndex(assetId);if(-1!==playerIndex){this.log(`clear asset player "${assetId}" toSegment: ${toSegment?segmentToString(toSegment):toSegment}`);const player=this.playerQueue[playerIndex];this.transferMediaFromPlayer(player,toSegment),this.playerQueue.splice(playerIndex,1),player.destroy()}}emptyPlayerQueue(){let player;for(;player=this.playerQueue.pop();)player.destroy();this.playerQueue=[]}startAssetPlayer(player,assetListIndex,scheduleItems,scheduleIndex,media){const{interstitial,assetItem,assetId}=player,assetListLength=interstitial.assetList.length,playingAsset=this.playingAsset;this.endedAsset=null,this.playingAsset=assetItem,playingAsset&&playingAsset.identifier===assetId||(playingAsset&&(this.clearAssetPlayer(playingAsset.identifier,scheduleItems[scheduleIndex]),delete playingAsset.error),this.log(`INTERSTITIAL_ASSET_STARTED ${assetListIndex+1}/${assetListLength} ${eventAssetToString(assetItem)}`),this.hls.trigger(Events.INTERSTITIAL_ASSET_STARTED,{asset:assetItem,assetListIndex,event:interstitial,schedule:scheduleItems.slice(0),scheduleIndex,player})),this.bufferAssetPlayer(player,media)}bufferAssetPlayer(player,media){var _this$schedule$items4,_this$detachedData5;if(!this.schedule)return;const{interstitial,assetItem}=player,scheduleIndex=this.schedule.findEventIndex(interstitial.identifier),item=null==(_this$schedule$items4=this.schedule.items)?void 0:_this$schedule$items4[scheduleIndex];if(!item)return;player.loadSource(),this.setBufferingItem(item),this.bufferingAsset=assetItem;const bufferingPlayer=this.getBufferingPlayer();if(bufferingPlayer===player)return;const appendInPlaceNext=interstitial.appendInPlace;if(appendInPlaceNext&&!1===(null==bufferingPlayer?void 0:bufferingPlayer.interstitial.appendInPlace))return;const activeTracks=(null==bufferingPlayer?void 0:bufferingPlayer.tracks)||(null==(_this$detachedData5=this.detachedData)?void 0:_this$detachedData5.tracks)||this.requiredTracks;if(appendInPlaceNext&&assetItem!==this.playingAsset){if(!player.tracks)return void this.log(`Waiting for track info before buffering ${player}`);if(activeTracks&&!isCompatibleTrackChange(activeTracks,player.tracks)){const error=new Error(`Asset ${eventAssetToString(assetItem)} SourceBuffer tracks ('${Object.keys(player.tracks)}') are not compatible with primary content tracks ('${Object.keys(activeTracks)}')`),errorData={fatal:!0,type:ErrorTypes.OTHER_ERROR,details:ErrorDetails.INTERSTITIAL_ASSET_ITEM_ERROR,error},assetListIndex=interstitial.findAssetIndex(assetItem);return void this.handleAssetItemError(errorData,interstitial,scheduleIndex,assetListIndex,error.message)}}this.transferMediaTo(player,media)}handleInPlaceStall(interstitial){const schedule=this.schedule,media=this.primaryMedia;if(!schedule||!media)return;const currentTime=media.currentTime,foundAssetIndex=schedule.findAssetIndex(interstitial,currentTime),stallingAsset=interstitial.assetList[foundAssetIndex];if(stallingAsset){const player=this.getAssetPlayer(stallingAsset.identifier);if(player){const assetCurrentTime=player.currentTime||currentTime-stallingAsset.timelineStart,distanceFromEnd=player.duration-assetCurrentTime;if(this.warn(`Stalled at ${assetCurrentTime} of ${assetCurrentTime+distanceFromEnd} in ${player} ${interstitial} (media.currentTime: ${currentTime})`),assetCurrentTime&&(distanceFromEnd/media.playbackRate<.5||player.bufferedInPlaceToEnd(media))&&player.hls){const scheduleIndex=schedule.findEventIndex(interstitial.identifier);this.advanceAfterAssetEnded(interstitial,scheduleIndex,foundAssetIndex)}}}}advanceInPlace(time){const media=this.primaryMedia;media&&media.currentTime<time&&(media.currentTime=time)}handleAssetItemError(data,interstitial,scheduleIndex,assetListIndex,errorMessage){if(data.details===ErrorDetails.BUFFER_STALLED_ERROR)return;const assetItem=interstitial.assetList[assetListIndex]||null;if(this.warn(`INTERSTITIAL_ASSET_ERROR ${assetItem?eventAssetToString(assetItem):assetItem} ${data.error}`),!this.schedule)return;const assetId=(null==assetItem?void 0:assetItem.identifier)||"",playerIndex=this.getAssetPlayerQueueIndex(assetId),player=this.playerQueue[playerIndex]||null,items=this.schedule.items,interstitialAssetError=_extends({},data,{fatal:!1,errorAction:createDoNothingErrorAction(!0),asset:assetItem,assetListIndex,event:interstitial,schedule:items,scheduleIndex,player});if(this.hls.trigger(Events.INTERSTITIAL_ASSET_ERROR,interstitialAssetError),!data.fatal)return;const playingAsset=this.playingAsset,bufferingAsset=this.bufferingAsset,error=new Error(errorMessage);if(assetItem&&(this.clearAssetPlayer(assetId,null),assetItem.error=error),interstitial.assetList.some((asset=>!asset.error)))for(let i=assetListIndex;i<interstitial.assetList.length;i++)this.resetAssetPlayer(interstitial.assetList[i].identifier);else interstitial.error=error;this.updateSchedule(!0),interstitial.error?this.primaryFallback(interstitial):playingAsset&&playingAsset.identifier===assetId?this.advanceAfterAssetEnded(interstitial,scheduleIndex,assetListIndex):bufferingAsset&&bufferingAsset.identifier===assetId&&this.isInterstitial(this.bufferingItem)&&this.advanceAssetBuffering(this.bufferingItem,bufferingAsset)}primaryFallback(interstitial){const flushStart=interstitial.timelineStart,playingItem=this.effectivePlayingItem;if(playingItem){this.log(`Fallback to primary from event "${interstitial.identifier}" start: ${flushStart} pos: ${this.timelinePos} playing: ${segmentToString(playingItem)} error: ${interstitial.error}`);let timelinePos=this.timelinePos;-1===timelinePos&&(timelinePos=this.hls.startPosition);const newPlayingItem=this.updateItem(playingItem,timelinePos);if(this.itemsMatch(playingItem,newPlayingItem)&&this.clearInterstitial(interstitial,null),interstitial.appendInPlace&&(this.attachPrimary(flushStart,null),this.flushFrontBuffer(flushStart)),!this.schedule)return;const scheduleIndex=this.schedule.findItemIndexAtTime(timelinePos);this.setSchedulePosition(scheduleIndex)}else this.checkStart()}onAssetListLoaded(event,data){var _this$schedule0,_this$bufferingItem2;const interstitial=data.event,interstitialId=interstitial.identifier,assets=data.assetListResponse.ASSETS;if(null==(_this$schedule0=this.schedule)||!_this$schedule0.hasEvent(interstitialId))return;const eventStart=interstitial.timelineStart,previousDuration=interstitial.duration;let sumDuration=0;assets.forEach(((asset,assetListIndex)=>{const duration=parseFloat(asset.DURATION);this.createAsset(interstitial,assetListIndex,sumDuration,eventStart+sumDuration,duration,asset.URI),sumDuration+=duration})),interstitial.duration=sumDuration,this.log(`Loaded asset-list with duration: ${sumDuration} (was: ${previousDuration}) ${interstitial}`);const waitingItem=this.waitingItem,waitingForItem=(null==waitingItem?void 0:waitingItem.event.identifier)===interstitialId;this.updateSchedule();const bufferingEvent=null==(_this$bufferingItem2=this.bufferingItem)?void 0:_this$bufferingItem2.event;if(waitingForItem){var _this$schedule$items5;const scheduleIndex=this.schedule.findEventIndex(interstitialId),item=null==(_this$schedule$items5=this.schedule.items)?void 0:_this$schedule$items5[scheduleIndex];if(item){if(!this.playingItem&&this.timelinePos>item.end){if(this.schedule.findItemIndexAtTime(this.timelinePos)!==scheduleIndex)return interstitial.error=new Error(`Interstitial no longer within playback range ${this.timelinePos} ${interstitial}`),this.updateSchedule(!0),void this.primaryFallback(interstitial)}this.setBufferingItem(item)}this.setSchedulePosition(scheduleIndex)}else if((null==bufferingEvent?void 0:bufferingEvent.identifier)===interstitialId){const assetItem=interstitial.assetList[0];if(assetItem){const player=this.getAssetPlayer(assetItem.identifier);if(bufferingEvent.appendInPlace){const media=this.primaryMedia;player&&media&&this.bufferAssetPlayer(player,media)}else player&&player.loadSource()}}}onError(event,data){if(this.schedule)switch(data.details){case ErrorDetails.ASSET_LIST_PARSING_ERROR:case ErrorDetails.ASSET_LIST_LOAD_ERROR:case ErrorDetails.ASSET_LIST_LOAD_TIMEOUT:{const interstitial=data.interstitial;interstitial&&(this.updateSchedule(!0),this.primaryFallback(interstitial));break}case ErrorDetails.BUFFER_STALLED_ERROR:{const stallingItem=this.endedItem||this.waitingItem||this.playingItem;if(this.isInterstitial(stallingItem)&&stallingItem.event.appendInPlace)return void this.handleInPlaceStall(stallingItem.event);this.log(`Primary player stall @${this.timelinePos} bufferedPos: ${this.bufferedPos}`),this.onTimeupdate(),this.checkBuffer(!0);break}}}}});function deepCpy(obj){return obj&&"object"==typeof obj?Array.isArray(obj)?obj.map(deepCpy):Object.keys(obj).reduce(((result,key)=>(result[key]=deepCpy(obj[key]),result)),{}):obj}class GapController extends TaskLoop{constructor(hls,fragmentTracker){super("gap-controller",hls.logger),this.hls=void 0,this.fragmentTracker=void 0,this.media=null,this.mediaSource=void 0,this.nudgeRetry=0,this.stallReported=!1,this.stalled=null,this.moved=!1,this.seeking=!1,this.buffered={},this.lastCurrentTime=0,this.ended=0,this.waiting=0,this.onMediaPlaying=()=>{this.ended=0,this.waiting=0},this.onMediaWaiting=()=>{var _this$media;null!=(_this$media=this.media)&&_this$media.seeking||(this.waiting=self.performance.now(),this.tick())},this.onMediaEnded=()=>{var _this$media2;this.hls&&(this.ended=(null==(_this$media2=this.media)?void 0:_this$media2.currentTime)||1,this.hls.trigger(Events.MEDIA_ENDED,{stalled:!1}))},this.hls=hls,this.fragmentTracker=fragmentTracker,this.registerListeners()}registerListeners(){const{hls}=this;hls&&(hls.on(Events.MEDIA_ATTACHED,this.onMediaAttached,this),hls.on(Events.MEDIA_DETACHING,this.onMediaDetaching,this),hls.on(Events.BUFFER_APPENDED,this.onBufferAppended,this))}unregisterListeners(){const{hls}=this;hls&&(hls.off(Events.MEDIA_ATTACHED,this.onMediaAttached,this),hls.off(Events.MEDIA_DETACHING,this.onMediaDetaching,this),hls.off(Events.BUFFER_APPENDED,this.onBufferAppended,this))}destroy(){super.destroy(),this.unregisterListeners(),this.media=this.hls=this.fragmentTracker=null,this.mediaSource=void 0}onMediaAttached(event,data){this.setInterval(100),this.mediaSource=data.mediaSource;const media=this.media=data.media;addEventListener(media,"playing",this.onMediaPlaying),addEventListener(media,"waiting",this.onMediaWaiting),addEventListener(media,"ended",this.onMediaEnded)}onMediaDetaching(event,data){this.clearInterval();const{media}=this;media&&(removeEventListener(media,"playing",this.onMediaPlaying),removeEventListener(media,"waiting",this.onMediaWaiting),removeEventListener(media,"ended",this.onMediaEnded),this.media=null),this.mediaSource=void 0}onBufferAppended(event,data){this.buffered=data.timeRanges}get hasBuffered(){return Object.keys(this.buffered).length>0}tick(){var _this$media3;if(null==(_this$media3=this.media)||!_this$media3.readyState||!this.hasBuffered)return;const currentTime=this.media.currentTime;this.poll(currentTime,this.lastCurrentTime),this.lastCurrentTime=currentTime}poll(currentTime,lastCurrentTime){var _this$hls,_this$hls2;const config=null==(_this$hls=this.hls)?void 0:_this$hls.config;if(!config)return;const media=this.media;if(!media)return;const{seeking}=media,seeked=this.seeking&&!seeking,beginSeek=!this.seeking&&seeking,pausedEndedOrHalted=media.paused&&!seeking||media.ended||0===media.playbackRate;if(this.seeking=seeking,currentTime!==lastCurrentTime)return lastCurrentTime&&(this.ended=0),this.moved=!0,seeking||(this.nudgeRetry=0,config.nudgeOnVideoHole&&!pausedEndedOrHalted&&currentTime>lastCurrentTime&&this.nudgeOnVideoHole(currentTime,lastCurrentTime)),void(0===this.waiting&&this.stallResolved(currentTime));if(beginSeek||seeked)return void(seeked&&this.stallResolved(currentTime));if(pausedEndedOrHalted)return this.nudgeRetry=0,this.stallResolved(currentTime),void(!this.ended&&media.ended&&this.hls&&(this.ended=currentTime||1,this.hls.trigger(Events.MEDIA_ENDED,{stalled:!1})));if(!BufferHelper.getBuffered(media).length)return void(this.nudgeRetry=0);const bufferInfo=BufferHelper.bufferInfo(media,currentTime,0),nextStart=bufferInfo.nextStart||0,fragmentTracker=this.fragmentTracker;if(seeking&&fragmentTracker&&this.hls){const inFlightDependency=getInFlightDependency(this.hls.inFlightFragments,currentTime),hasEnoughBuffer=bufferInfo.len>2,noBufferHole=!nextStart||inFlightDependency||nextStart-currentTime>2&&!fragmentTracker.getPartialFragment(currentTime);if(hasEnoughBuffer||noBufferHole)return;this.moved=!1}const levelDetails=null==(_this$hls2=this.hls)?void 0:_this$hls2.latestLevelDetails;if(!this.moved&&null!==this.stalled&&fragmentTracker){if(!(bufferInfo.len>0)&&!nextStart)return;const startJump=Math.max(nextStart,bufferInfo.start||0)-currentTime,maxStartGapJump=!(null==levelDetails||!levelDetails.live)?2*levelDetails.targetduration:2,appended=appendedFragAtPosition(currentTime,fragmentTracker);if(startJump>0&&(startJump<=maxStartGapJump||appended))return void(media.paused||this._trySkipBufferHole(appended))}const detectStallWithCurrentTimeMs=config.detectStallWithCurrentTimeMs,tnow=self.performance.now(),tWaiting=this.waiting;let stalled=this.stalled;if(null===stalled){if(!(tWaiting>0&&tnow-tWaiting<detectStallWithCurrentTimeMs))return void(this.stalled=tnow);stalled=this.stalled=tWaiting}const stalledDuration=tnow-stalled;if(!seeking&&(stalledDuration>=detectStallWithCurrentTimeMs||tWaiting)&&this.hls){var _this$mediaSource;if("ended"===(null==(_this$mediaSource=this.mediaSource)?void 0:_this$mediaSource.readyState)&&(null==levelDetails||!levelDetails.live)&&Math.abs(currentTime-((null==levelDetails?void 0:levelDetails.edge)||0))<1){if(this.ended)return;return this.ended=currentTime||1,void this.hls.trigger(Events.MEDIA_ENDED,{stalled:!0})}if(this._reportStall(bufferInfo),!this.media||!this.hls)return}const bufferedWithHoles=BufferHelper.bufferInfo(media,currentTime,config.maxBufferHole);this._tryFixBufferStall(bufferedWithHoles,stalledDuration,currentTime)}stallResolved(currentTime){const stalled=this.stalled;if(stalled&&this.hls&&(this.stalled=null,this.stallReported)){const stalledDuration=self.performance.now()-stalled;this.log(`playback not stuck anymore @${currentTime}, after ${Math.round(stalledDuration)}ms`),this.stallReported=!1,this.waiting=0,this.hls.trigger(Events.STALL_RESOLVED,{})}}nudgeOnVideoHole(currentTime,lastCurrentTime){var _this$buffered$audio;const videoSourceBuffered=this.buffered.video;if(this.hls&&this.media&&this.fragmentTracker&&null!=(_this$buffered$audio=this.buffered.audio)&&_this$buffered$audio.length&&videoSourceBuffered&&videoSourceBuffered.length>1&&currentTime>videoSourceBuffered.end(0)){const audioBufferInfo=BufferHelper.bufferedInfo(BufferHelper.timeRangesToArray(this.buffered.audio),currentTime,0);if(audioBufferInfo.len>1&&lastCurrentTime>=audioBufferInfo.start){const videoTimes=BufferHelper.timeRangesToArray(videoSourceBuffered),lastBufferedIndex=BufferHelper.bufferedInfo(videoTimes,lastCurrentTime,0).bufferedIndex;if(lastBufferedIndex>-1&&lastBufferedIndex<videoTimes.length-1){const bufferedIndex=BufferHelper.bufferedInfo(videoTimes,currentTime,0).bufferedIndex,holeStart=videoTimes[lastBufferedIndex].end,holeEnd=videoTimes[lastBufferedIndex+1].start;if((-1===bufferedIndex||bufferedIndex>lastBufferedIndex)&&holeEnd-holeStart<1&&currentTime-holeStart<2){const error=new Error(`nudging playhead to flush pipeline after video hole. currentTime: ${currentTime} hole: ${holeStart} -> ${holeEnd} buffered index: ${bufferedIndex}`);this.warn(error.message),this.media.currentTime+=1e-6;let frag=appendedFragAtPosition(currentTime,this.fragmentTracker);frag&&"fragment"in frag?frag=frag.fragment:frag||(frag=void 0);const bufferInfo=BufferHelper.bufferInfo(this.media,currentTime,0);this.hls.trigger(Events.ERROR,{type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.BUFFER_SEEK_OVER_HOLE,fatal:!1,error,reason:error.message,frag,buffer:bufferInfo.len,bufferInfo})}}}}}_tryFixBufferStall(bufferInfo,stalledDurationMs,currentTime){var _this$hls3,_this$hls4;const{fragmentTracker,media}=this,config=null==(_this$hls3=this.hls)?void 0:_this$hls3.config;if(!media||!fragmentTracker||!config)return;const levelDetails=null==(_this$hls4=this.hls)?void 0:_this$hls4.latestLevelDetails,appended=appendedFragAtPosition(currentTime,fragmentTracker);if(appended||null!=levelDetails&&levelDetails.live&&currentTime<levelDetails.fragmentStart){if(this._trySkipBufferHole(appended)||!this.media)return}const bufferedRanges=bufferInfo.buffered,adjacentTraversal=this.adjacentTraversal(bufferInfo,currentTime);(bufferedRanges&&bufferedRanges.length>1&&bufferInfo.len>config.maxBufferHole||bufferInfo.nextStart&&(bufferInfo.nextStart-currentTime<config.maxBufferHole||adjacentTraversal))&&(stalledDurationMs>1e3*config.highBufferWatchdogPeriod||this.waiting)&&(this.warn("Trying to nudge playhead over buffer-hole"),this._tryNudgeBuffer(bufferInfo))}adjacentTraversal(bufferInfo,currentTime){const fragmentTracker=this.fragmentTracker,nextStart=bufferInfo.nextStart;if(fragmentTracker&&nextStart){const current=fragmentTracker.getFragAtPos(currentTime,PlaylistLevelType.MAIN),next=fragmentTracker.getFragAtPos(nextStart,PlaylistLevelType.MAIN);if(current&&next)return next.sn-current.sn<2}return!1}_reportStall(bufferInfo){const{hls,media,stallReported,stalled}=this;if(!stallReported&&null!==stalled&&media&&hls){this.stallReported=!0;const error=new Error(`Playback stalling at @${media.currentTime} due to low buffer (${stringify(bufferInfo)})`);this.warn(error.message),hls.trigger(Events.ERROR,{type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.BUFFER_STALLED_ERROR,fatal:!1,error,buffer:bufferInfo.len,bufferInfo,stalled:{start:stalled}})}}_trySkipBufferHole(appended){var _this$hls5;const{fragmentTracker,media}=this,config=null==(_this$hls5=this.hls)?void 0:_this$hls5.config;if(!media||!fragmentTracker||!config)return 0;const currentTime=media.currentTime,bufferInfo=BufferHelper.bufferInfo(media,currentTime,0),startTime=currentTime<bufferInfo.start?bufferInfo.start:bufferInfo.nextStart;if(startTime&&this.hls){const bufferStarved=bufferInfo.len<=config.maxBufferHole,waiting=bufferInfo.len>0&&bufferInfo.len<1&&media.readyState<3,gapLength=startTime-currentTime;if(gapLength>0&&(bufferStarved||waiting)){if(gapLength>config.maxBufferHole){let startGap=!1;if(0===currentTime){const startFrag=fragmentTracker.getAppendedFrag(0,PlaylistLevelType.MAIN);startFrag&&startTime<startFrag.end&&(startGap=!0)}if(!startGap&&appended){var _this$hls$loadLevelOb;if(null==(_this$hls$loadLevelOb=this.hls.loadLevelObj)||!_this$hls$loadLevelOb.details)return 0;if(getInFlightDependency(this.hls.inFlightFragments,startTime))return 0;let moreToLoad=!1,pos=appended.end;for(;pos<startTime;){const provisioned=appendedFragAtPosition(pos,fragmentTracker);if(!provisioned){moreToLoad=!0;break}pos+=provisioned.duration}if(moreToLoad)return 0}}const targetTime=Math.max(startTime+.05,currentTime+.1);if(this.warn(`skipping hole, adjusting currentTime from ${currentTime} to ${targetTime}`),this.moved=!0,media.currentTime=targetTime,null==appended||!appended.gap){const error=new Error(`fragment loaded with buffer holes, seeking from ${currentTime} to ${targetTime}`),errorData={type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.BUFFER_SEEK_OVER_HOLE,fatal:!1,error,reason:error.message,buffer:bufferInfo.len,bufferInfo};appended&&("fragment"in appended?errorData.part=appended:errorData.frag=appended),this.hls.trigger(Events.ERROR,errorData)}return targetTime}}return 0}_tryNudgeBuffer(bufferInfo){const{hls,media,nudgeRetry}=this,config=null==hls?void 0:hls.config;if(!media||!config)return 0;const currentTime=media.currentTime;if(this.nudgeRetry++,nudgeRetry<config.nudgeMaxRetry){const targetTime=currentTime+(nudgeRetry+1)*config.nudgeOffset,error=new Error(`Nudging 'currentTime' from ${currentTime} to ${targetTime}`);this.warn(error.message),media.currentTime=targetTime,hls.trigger(Events.ERROR,{type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.BUFFER_NUDGE_ON_STALL,error,fatal:!1,buffer:bufferInfo.len,bufferInfo})}else{const error=new Error(`Playhead still not moving while enough data buffered @${currentTime} after ${config.nudgeMaxRetry} nudges`);this.error(error.message),hls.trigger(Events.ERROR,{type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.BUFFER_STALLED_ERROR,error,fatal:!0,buffer:bufferInfo.len,bufferInfo})}}}function getInFlightDependency(inFlightFragments,currentTime){const main=inFlight(inFlightFragments.main);if(main&&main.start<=currentTime)return main;const audio=inFlight(inFlightFragments.audio);return audio&&audio.start<=currentTime?audio:null}function inFlight(inFlightData){if(!inFlightData)return null;switch(inFlightData.state){case State.IDLE:case State.STOPPED:case State.ENDED:case State.ERROR:return null}return inFlightData.frag}function appendedFragAtPosition(pos,fragmentTracker){return fragmentTracker.getAppendedFrag(pos,PlaylistLevelType.MAIN)||fragmentTracker.getPartialFragment(pos)}function getCueClass(){if("undefined"!=typeof self)return self.VTTCue||self.TextTrackCue}function createCueWithDataFields(Cue,startTime,endTime,data,type){let cue=new Cue(startTime,endTime,"");try{cue.value=data,type&&(cue.type=type)}catch(e){cue=new Cue(startTime,endTime,stringify(type?_objectSpread2({type},data):data))}return cue}const MAX_CUE_ENDTIME=(()=>{const Cue=getCueClass();try{Cue&&new Cue(0,Number.POSITIVE_INFINITY,"")}catch(e){return Number.MAX_VALUE}return Number.POSITIVE_INFINITY})();class ID3TrackController{constructor(hls){this.hls=void 0,this.id3Track=null,this.media=null,this.dateRangeCuesAppended={},this.removeCues=!0,this.assetCue=void 0,this.onEventCueEnter=()=>{this.hls&&this.hls.trigger(Events.EVENT_CUE_ENTER,{})},this.hls=hls,this._registerListeners()}destroy(){this._unregisterListeners(),this.id3Track=null,this.media=null,this.dateRangeCuesAppended={},this.hls=this.onEventCueEnter=null}_registerListeners(){const{hls}=this;hls&&(hls.on(Events.MEDIA_ATTACHING,this.onMediaAttaching,this),hls.on(Events.MEDIA_ATTACHED,this.onMediaAttached,this),hls.on(Events.MEDIA_DETACHING,this.onMediaDetaching,this),hls.on(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.on(Events.FRAG_PARSING_METADATA,this.onFragParsingMetadata,this),hls.on(Events.BUFFER_FLUSHING,this.onBufferFlushing,this),hls.on(Events.LEVEL_UPDATED,this.onLevelUpdated,this),hls.on(Events.LEVEL_PTS_UPDATED,this.onLevelPtsUpdated,this))}_unregisterListeners(){const{hls}=this;hls&&(hls.off(Events.MEDIA_ATTACHING,this.onMediaAttaching,this),hls.off(Events.MEDIA_ATTACHED,this.onMediaAttached,this),hls.off(Events.MEDIA_DETACHING,this.onMediaDetaching,this),hls.off(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.off(Events.FRAG_PARSING_METADATA,this.onFragParsingMetadata,this),hls.off(Events.BUFFER_FLUSHING,this.onBufferFlushing,this),hls.off(Events.LEVEL_UPDATED,this.onLevelUpdated,this),hls.off(Events.LEVEL_PTS_UPDATED,this.onLevelPtsUpdated,this))}onMediaAttaching(event,data){var _data$overrides;this.media=data.media,!1===(null==(_data$overrides=data.overrides)?void 0:_data$overrides.cueRemoval)&&(this.removeCues=!1)}onMediaAttached(){var _this$hls;const details=null==(_this$hls=this.hls)?void 0:_this$hls.latestLevelDetails;details&&this.updateDateRangeCues(details)}onMediaDetaching(event,data){this.media=null;!!data.transferMedia||(this.id3Track&&(this.removeCues&&clearCurrentCues(this.id3Track,this.onEventCueEnter),this.id3Track=null),this.dateRangeCuesAppended={})}onManifestLoading(){this.dateRangeCuesAppended={}}createTrack(media){const track=this.getID3Track(media.textTracks);return track.mode="hidden",track}getID3Track(textTracks){if(this.media){for(let i=0;i<textTracks.length;i++){const textTrack=textTracks[i];if("metadata"===textTrack.kind&&"id3"===textTrack.label)return sendAddTrackEvent(textTrack,this.media),textTrack}return this.media.addTextTrack("metadata","id3")}}onFragParsingMetadata(event,data){if(!this.media||!this.hls)return;const{enableEmsgMetadataCues,enableID3MetadataCues}=this.hls.config;if(!enableEmsgMetadataCues&&!enableID3MetadataCues)return;const{samples}=data;this.id3Track||(this.id3Track=this.createTrack(this.media));const Cue=getCueClass();if(Cue)for(let i=0;i<samples.length;i++){const type=samples[i].type;if(type===MetadataSchema.emsg&&!enableEmsgMetadataCues||!enableID3MetadataCues)continue;const frames=getId3Frames(samples[i].data),startTime=samples[i].pts;let endTime=startTime+samples[i].duration;endTime>MAX_CUE_ENDTIME&&(endTime=MAX_CUE_ENDTIME);endTime-startTime<=0&&(endTime=startTime+.25);for(let j=0;j<frames.length;j++){const frame=frames[j];if(!isId3TimestampFrame(frame)){this.updateId3CueEnds(startTime,type);const cue=createCueWithDataFields(Cue,startTime,endTime,frame,type);cue&&this.id3Track.addCue(cue)}}}}updateId3CueEnds(startTime,type){var _this$id3Track;const cues=null==(_this$id3Track=this.id3Track)?void 0:_this$id3Track.cues;if(cues)for(let i=cues.length;i--;){const cue=cues[i];cue.type===type&&cue.startTime<startTime&&cue.endTime===MAX_CUE_ENDTIME&&(cue.endTime=startTime)}}onBufferFlushing(event,{startOffset,endOffset,type}){const{id3Track,hls}=this;if(!hls)return;const{config:{enableEmsgMetadataCues,enableID3MetadataCues}}=hls;if(id3Track&&(enableEmsgMetadataCues||enableID3MetadataCues)){let predicate;predicate="audio"===type?cue=>cue.type===MetadataSchema.audioId3&&enableID3MetadataCues:"video"===type?cue=>cue.type===MetadataSchema.emsg&&enableEmsgMetadataCues:cue=>cue.type===MetadataSchema.audioId3&&enableID3MetadataCues||cue.type===MetadataSchema.emsg&&enableEmsgMetadataCues,removeCuesInRange(id3Track,startOffset,endOffset,predicate)}}onLevelUpdated(event,{details}){this.updateDateRangeCues(details,!0)}onLevelPtsUpdated(event,data){Math.abs(data.drift)>.01&&this.updateDateRangeCues(data.details)}updateDateRangeCues(details,removeOldCues){if(!this.hls||!this.media)return;const{assetPlayerId,timelineOffset,enableDateRangeMetadataCues,interstitialsController}=this.hls.config;if(!enableDateRangeMetadataCues)return;const Cue=getCueClass();if(assetPlayerId&&timelineOffset&&!interstitialsController){const{fragmentStart,fragmentEnd}=details;let cue=this.assetCue;cue?(cue.startTime=fragmentStart,cue.endTime=fragmentEnd):Cue&&(cue=this.assetCue=createCueWithDataFields(Cue,fragmentStart,fragmentEnd,{assetPlayerId:this.hls.config.assetPlayerId},"hlsjs.interstitial.asset"),cue&&(cue.id=assetPlayerId,this.id3Track||(this.id3Track=this.createTrack(this.media)),this.id3Track.addCue(cue),cue.addEventListener("enter",this.onEventCueEnter)))}if(!details.hasProgramDateTime)return;const{id3Track}=this,{dateRanges}=details,ids=Object.keys(dateRanges);let dateRangeCuesAppended=this.dateRangeCuesAppended;var _id3Track$cues;if(id3Track&&removeOldCues)if(null!=(_id3Track$cues=id3Track.cues)&&_id3Track$cues.length){const idsToRemove=Object.keys(dateRangeCuesAppended).filter((id=>!ids.includes(id)));for(let i=idsToRemove.length;i--;){var _dateRangeCuesAppende;const id=idsToRemove[i],cues=null==(_dateRangeCuesAppende=dateRangeCuesAppended[id])?void 0:_dateRangeCuesAppende.cues;delete dateRangeCuesAppended[id],cues&&Object.keys(cues).forEach((key=>{const cue=cues[key];if(cue){cue.removeEventListener("enter",this.onEventCueEnter);try{id3Track.removeCue(cue)}catch(e){}}}))}}else dateRangeCuesAppended=this.dateRangeCuesAppended={};const lastFragment=details.fragments[details.fragments.length-1];if(0!==ids.length&&isFiniteNumber(null==lastFragment?void 0:lastFragment.programDateTime)){this.id3Track||(this.id3Track=this.createTrack(this.media));for(let i=0;i<ids.length;i++){const id=ids[i],dateRange=dateRanges[id],startTime=dateRange.startTime,appendedDateRangeCues=dateRangeCuesAppended[id],cues=(null==appendedDateRangeCues?void 0:appendedDateRangeCues.cues)||{};let durationKnown=(null==appendedDateRangeCues?void 0:appendedDateRangeCues.durationKnown)||!1,endTime=MAX_CUE_ENDTIME;const{duration,endDate}=dateRange;if(endDate&&null!==duration)endTime=startTime+duration,durationKnown=!0;else if(dateRange.endOnNext&&!durationKnown){const nextDateRangeWithSameClass=ids.reduce(((candidateDateRange,id)=>{if(id!==dateRange.id){const otherDateRange=dateRanges[id];if(otherDateRange.class===dateRange.class&&otherDateRange.startDate>dateRange.startDate&&(!candidateDateRange||dateRange.startDate<candidateDateRange.startDate))return otherDateRange}return candidateDateRange}),null);nextDateRangeWithSameClass&&(endTime=nextDateRangeWithSameClass.startTime,durationKnown=!0)}const attributes=Object.keys(dateRange.attr);for(let j=0;j<attributes.length;j++){const key=attributes[j];if("ID"===(attrName=key)||"CLASS"===attrName||"CUE"===attrName||"START-DATE"===attrName||"DURATION"===attrName||"END-DATE"===attrName||"END-ON-NEXT"===attrName)continue;const cue=cues[key];if(cue)!durationKnown||null!=appendedDateRangeCues&&appendedDateRangeCues.durationKnown?Math.abs(cue.startTime-startTime)>.01&&(cue.startTime=startTime,cue.endTime=endTime):cue.endTime=endTime;else if(Cue){let data=dateRange.attr[key];isSCTE35Attribute(key)&&(data=hexToArrayBuffer(data));const _cue=createCueWithDataFields(Cue,startTime,endTime,{key,data},MetadataSchema.dateRange);_cue&&(_cue.id=id,this.id3Track.addCue(_cue),cues[key]=_cue,interstitialsController&&("X-ASSET-LIST"!==key&&"X-ASSET-URL"!==key||_cue.addEventListener("enter",this.onEventCueEnter)))}}dateRangeCuesAppended[id]={cues,dateRange,durationKnown}}var attrName}}}class LatencyController{constructor(hls){this.hls=void 0,this.config=void 0,this.media=null,this.currentTime=0,this.stallCount=0,this._latency=null,this._targetLatencyUpdated=!1,this.onTimeupdate=()=>{const{media}=this,levelDetails=this.levelDetails;if(!media||!levelDetails)return;this.currentTime=media.currentTime;const latency=this.computeLatency();if(null===latency)return;this._latency=latency;const{lowLatencyMode,maxLiveSyncPlaybackRate}=this.config;if(!lowLatencyMode||1===maxLiveSyncPlaybackRate||!levelDetails.live)return;const targetLatency=this.targetLatency;if(null===targetLatency)return;const distanceFromTarget=latency-targetLatency;if(distanceFromTarget<Math.min(this.maxLatency,targetLatency+levelDetails.targetduration)&&distanceFromTarget>.05&&this.forwardBufferLength>1){const max=Math.min(2,Math.max(1,maxLiveSyncPlaybackRate)),rate=Math.round(2/(1+Math.exp(-.75*distanceFromTarget-this.edgeStalled))*20)/20,playbackRate=Math.min(max,Math.max(1,rate));this.changeMediaPlaybackRate(media,playbackRate)}else 1!==media.playbackRate&&0!==media.playbackRate&&this.changeMediaPlaybackRate(media,1)},this.hls=hls,this.config=hls.config,this.registerListeners()}get levelDetails(){var _this$hls;return(null==(_this$hls=this.hls)?void 0:_this$hls.latestLevelDetails)||null}get latency(){return this._latency||0}get maxLatency(){const{config}=this;if(void 0!==config.liveMaxLatencyDuration)return config.liveMaxLatencyDuration;const levelDetails=this.levelDetails;return levelDetails?config.liveMaxLatencyDurationCount*levelDetails.targetduration:0}get targetLatency(){const levelDetails=this.levelDetails;if(null===levelDetails||null===this.hls)return null;const{holdBack,partHoldBack,targetduration}=levelDetails,{liveSyncDuration,liveSyncDurationCount,lowLatencyMode}=this.config,userConfig=this.hls.userConfig;let targetLatency=lowLatencyMode&&partHoldBack||holdBack;(this._targetLatencyUpdated||userConfig.liveSyncDuration||userConfig.liveSyncDurationCount||0===targetLatency)&&(targetLatency=void 0!==liveSyncDuration?liveSyncDuration:liveSyncDurationCount*targetduration);const maxLiveSyncOnStallIncrease=targetduration;return targetLatency+Math.min(this.stallCount*this.config.liveSyncOnStallIncrease,maxLiveSyncOnStallIncrease)}set targetLatency(latency){this.stallCount=0,this.config.liveSyncDuration=latency,this._targetLatencyUpdated=!0}get liveSyncPosition(){const liveEdge=this.estimateLiveEdge(),targetLatency=this.targetLatency;if(null===liveEdge||null===targetLatency)return null;const levelDetails=this.levelDetails;if(null===levelDetails)return null;const edge=levelDetails.edge,syncPosition=liveEdge-targetLatency-this.edgeStalled,min=edge-levelDetails.totalduration,max=edge-(this.config.lowLatencyMode&&levelDetails.partTarget||levelDetails.targetduration);return Math.min(Math.max(min,syncPosition),max)}get drift(){const levelDetails=this.levelDetails;return null===levelDetails?1:levelDetails.drift}get edgeStalled(){const levelDetails=this.levelDetails;if(null===levelDetails)return 0;const maxLevelUpdateAge=3*(this.config.lowLatencyMode&&levelDetails.partTarget||levelDetails.targetduration);return Math.max(levelDetails.age-maxLevelUpdateAge,0)}get forwardBufferLength(){const{media}=this,levelDetails=this.levelDetails;if(!media||!levelDetails)return 0;const bufferedRanges=media.buffered.length;return(bufferedRanges?media.buffered.end(bufferedRanges-1):levelDetails.edge)-this.currentTime}destroy(){this.unregisterListeners(),this.onMediaDetaching(),this.hls=null}registerListeners(){const{hls}=this;hls&&(hls.on(Events.MEDIA_ATTACHED,this.onMediaAttached,this),hls.on(Events.MEDIA_DETACHING,this.onMediaDetaching,this),hls.on(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.on(Events.LEVEL_UPDATED,this.onLevelUpdated,this),hls.on(Events.ERROR,this.onError,this))}unregisterListeners(){const{hls}=this;hls&&(hls.off(Events.MEDIA_ATTACHED,this.onMediaAttached,this),hls.off(Events.MEDIA_DETACHING,this.onMediaDetaching,this),hls.off(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.off(Events.LEVEL_UPDATED,this.onLevelUpdated,this),hls.off(Events.ERROR,this.onError,this))}onMediaAttached(event,data){this.media=data.media,this.media.addEventListener("timeupdate",this.onTimeupdate)}onMediaDetaching(){this.media&&(this.media.removeEventListener("timeupdate",this.onTimeupdate),this.media=null)}onManifestLoading(){this._latency=null,this.stallCount=0}onLevelUpdated(event,{details}){details.advanced&&this.onTimeupdate(),!details.live&&this.media&&this.media.removeEventListener("timeupdate",this.onTimeupdate)}onError(event,data){var _this$levelDetails;data.details===ErrorDetails.BUFFER_STALLED_ERROR&&(this.stallCount++,this.hls&&null!=(_this$levelDetails=this.levelDetails)&&_this$levelDetails.live&&this.hls.logger.warn("[latency-controller]: Stall detected, adjusting target latency"))}changeMediaPlaybackRate(media,playbackRate){var _this$hls2,_this$targetLatency;media.playbackRate!==playbackRate&&(null==(_this$hls2=this.hls)||_this$hls2.logger.debug(`[latency-controller]: latency=${this.latency.toFixed(3)}, targetLatency=${null==(_this$targetLatency=this.targetLatency)?void 0:_this$targetLatency.toFixed(3)}, forwardBufferLength=${this.forwardBufferLength.toFixed(3)}: adjusting playback rate from ${media.playbackRate} to ${playbackRate}`),media.playbackRate=playbackRate)}estimateLiveEdge(){const levelDetails=this.levelDetails;return null===levelDetails?null:levelDetails.edge+levelDetails.age}computeLatency(){const liveEdge=this.estimateLiveEdge();return null===liveEdge?null:liveEdge-this.currentTime}}class LevelController extends BasePlaylistController{constructor(hls,contentSteeringController){super(hls,"level-controller"),this._levels=[],this._firstLevel=-1,this._maxAutoLevel=-1,this._startLevel=void 0,this.currentLevel=null,this.currentLevelIndex=-1,this.manualLevelIndex=-1,this.steering=void 0,this.onParsedComplete=void 0,this.steering=contentSteeringController,this._registerListeners()}_registerListeners(){const{hls}=this;hls.on(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.on(Events.MANIFEST_LOADED,this.onManifestLoaded,this),hls.on(Events.LEVEL_LOADED,this.onLevelLoaded,this),hls.on(Events.LEVELS_UPDATED,this.onLevelsUpdated,this),hls.on(Events.FRAG_BUFFERED,this.onFragBuffered,this),hls.on(Events.ERROR,this.onError,this)}_unregisterListeners(){const{hls}=this;hls.off(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.off(Events.MANIFEST_LOADED,this.onManifestLoaded,this),hls.off(Events.LEVEL_LOADED,this.onLevelLoaded,this),hls.off(Events.LEVELS_UPDATED,this.onLevelsUpdated,this),hls.off(Events.FRAG_BUFFERED,this.onFragBuffered,this),hls.off(Events.ERROR,this.onError,this)}destroy(){this._unregisterListeners(),this.steering=null,this.resetLevels(),super.destroy()}stopLoad(){this._levels.forEach((level=>{level.loadError=0,level.fragmentError=0})),super.stopLoad()}resetLevels(){this._startLevel=void 0,this.manualLevelIndex=-1,this.currentLevelIndex=-1,this.currentLevel=null,this._levels=[],this._maxAutoLevel=-1}onManifestLoading(event,data){this.resetLevels()}onManifestLoaded(event,data){const preferManagedMediaSource=this.hls.config.preferManagedMediaSource,levels=[],redundantSet={},generatePathwaySet={};let resolutionFound=!1,videoCodecFound=!1,audioCodecFound=!1;data.levels.forEach((levelParsed=>{const attributes=levelParsed.attrs;let{audioCodec,videoCodec}=levelParsed;audioCodec&&(levelParsed.audioCodec=audioCodec=getCodecCompatibleName(audioCodec,preferManagedMediaSource)||void 0),videoCodec&&(videoCodec=levelParsed.videoCodec=function convertAVC1ToAVCOTI(videoCodecs){const codecs=videoCodecs.split(",");for(let i=0;i<codecs.length;i++){const avcdata=codecs[i].split(".");avcdata.length>2&&"avc1"===avcdata[0]&&(codecs[i]=`avc1.${parseInt(avcdata[1]).toString(16)}${("000"+parseInt(avcdata[2]).toString(16)).slice(-4)}`)}return codecs.join(",")}(videoCodec));const{width,height,unknownCodecs}=levelParsed;let unknownUnsupportedCodecCount=unknownCodecs?unknownCodecs.length:0;if(unknownCodecs)for(let i=unknownUnsupportedCodecCount;i--;){const unknownCodec=unknownCodecs[i];this.isAudioSupported(unknownCodec)?(levelParsed.audioCodec=audioCodec=audioCodec?`${audioCodec},${unknownCodec}`:unknownCodec,unknownUnsupportedCodecCount--,sampleEntryCodesISO.audio[audioCodec.substring(0,4)]=2):this.isVideoSupported(unknownCodec)&&(levelParsed.videoCodec=videoCodec=videoCodec?`${videoCodec},${unknownCodec}`:unknownCodec,unknownUnsupportedCodecCount--,sampleEntryCodesISO.video[videoCodec.substring(0,4)]=2)}if(resolutionFound||(resolutionFound=!(!width||!height)),videoCodecFound||(videoCodecFound=!!videoCodec),audioCodecFound||(audioCodecFound=!!audioCodec),unknownUnsupportedCodecCount||audioCodec&&!this.isAudioSupported(audioCodec)||videoCodec&&!this.isVideoSupported(videoCodec))return void this.log(`Some or all CODECS not supported "${attributes.CODECS}"`);const{CODECS,"FRAME-RATE":FRAMERATE,"HDCP-LEVEL":HDCP,"PATHWAY-ID":PATHWAY,RESOLUTION,"VIDEO-RANGE":VIDEO_RANGE}=attributes,levelKey=`${`${PATHWAY||"."}-`}${levelParsed.bitrate}-${RESOLUTION}-${FRAMERATE}-${CODECS}-${VIDEO_RANGE}-${HDCP}`;if(redundantSet[levelKey])if(redundantSet[levelKey].uri===levelParsed.url||levelParsed.attrs["PATHWAY-ID"])redundantSet[levelKey].addGroupId("audio",attributes.AUDIO),redundantSet[levelKey].addGroupId("text",attributes.SUBTITLES);else{const pathwayCount=generatePathwaySet[levelKey]+=1;levelParsed.attrs["PATHWAY-ID"]=new Array(pathwayCount+1).join(".");const level=this.createLevel(levelParsed);redundantSet[levelKey]=level,levels.push(level)}else{const level=this.createLevel(levelParsed);redundantSet[levelKey]=level,generatePathwaySet[levelKey]=1,levels.push(level)}})),this.filterAndSortMediaOptions(levels,data,resolutionFound,videoCodecFound,audioCodecFound)}createLevel(levelParsed){const level=new Level(levelParsed),supplemental=levelParsed.supplemental;if(null!=supplemental&&supplemental.videoCodec&&!this.isVideoSupported(supplemental.videoCodec)){const error=new Error(`SUPPLEMENTAL-CODECS not supported "${supplemental.videoCodec}"`);this.log(error.message),level.supportedResult=getUnsupportedResult(error,[])}return level}isAudioSupported(codec){return areCodecsMediaSourceSupported(codec,"audio",this.hls.config.preferManagedMediaSource)}isVideoSupported(codec){return areCodecsMediaSourceSupported(codec,"video",this.hls.config.preferManagedMediaSource)}filterAndSortMediaOptions(filteredLevels,data,resolutionFound,videoCodecFound,audioCodecFound){let audioTracks=[],subtitleTracks=[],levels=filteredLevels;if((resolutionFound||videoCodecFound)&&audioCodecFound&&(levels=levels.filter((({videoCodec,videoRange,width,height})=>(!!videoCodec||!(!width||!height))&&function isVideoRange(value){return!!value&&VideoRangeValues.indexOf(value)>-1}(videoRange)))),0===levels.length)return void Promise.resolve().then((()=>{if(this.hls){let message="no level with compatible codecs found in manifest",reason=message;data.levels.length&&(reason=`one or more CODECS in variant not supported: ${stringify(data.levels.map((level=>level.attrs.CODECS)).filter(((value,index,array)=>array.indexOf(value)===index)))}`,this.warn(reason),message+=` (${reason})`);const error=new Error(message);this.hls.trigger(Events.ERROR,{type:ErrorTypes.MEDIA_ERROR,details:ErrorDetails.MANIFEST_INCOMPATIBLE_CODECS_ERROR,fatal:!0,url:data.url,error,reason})}}));data.audioTracks&&(audioTracks=data.audioTracks.filter((track=>!track.audioCodec||this.isAudioSupported(track.audioCodec))),assignTrackIdsByGroup(audioTracks)),data.subtitles&&(subtitleTracks=data.subtitles,assignTrackIdsByGroup(subtitleTracks));const unsortedLevels=levels.slice(0);levels.sort(((a,b)=>{if(a.attrs["HDCP-LEVEL"]!==b.attrs["HDCP-LEVEL"])return(a.attrs["HDCP-LEVEL"]||"")>(b.attrs["HDCP-LEVEL"]||"")?1:-1;if(resolutionFound&&a.height!==b.height)return a.height-b.height;if(a.frameRate!==b.frameRate)return a.frameRate-b.frameRate;if(a.videoRange!==b.videoRange)return VideoRangeValues.indexOf(a.videoRange)-VideoRangeValues.indexOf(b.videoRange);if(a.videoCodec!==b.videoCodec){const valueA=videoCodecPreferenceValue(a.videoCodec),valueB=videoCodecPreferenceValue(b.videoCodec);if(valueA!==valueB)return valueB-valueA}if(a.uri===b.uri&&a.codecSet!==b.codecSet){const valueA=codecsSetSelectionPreferenceValue(a.codecSet),valueB=codecsSetSelectionPreferenceValue(b.codecSet);if(valueA!==valueB)return valueB-valueA}return a.averageBitrate!==b.averageBitrate?a.averageBitrate-b.averageBitrate:0}));let firstLevelInPlaylist=unsortedLevels[0];if(this.steering&&(levels=this.steering.filterParsedLevels(levels),levels.length!==unsortedLevels.length))for(let i=0;i<unsortedLevels.length;i++)if(unsortedLevels[i].pathwayId===levels[0].pathwayId){firstLevelInPlaylist=unsortedLevels[i];break}this._levels=levels;for(let i=0;i<levels.length;i++)if(levels[i]===firstLevelInPlaylist){var _this$hls$userConfig;this._firstLevel=i;const firstLevelBitrate=firstLevelInPlaylist.bitrate,bandwidthEstimate=this.hls.bandwidthEstimate;if(this.log(`manifest loaded, ${levels.length} level(s) found, first bitrate: ${firstLevelBitrate}`),void 0===(null==(_this$hls$userConfig=this.hls.userConfig)?void 0:_this$hls$userConfig.abrEwmaDefaultEstimate)){const startingBwEstimate=Math.min(firstLevelBitrate,this.hls.config.abrEwmaDefaultEstimateMax);startingBwEstimate>bandwidthEstimate&&bandwidthEstimate===this.hls.abrEwmaDefaultEstimate&&(this.hls.bandwidthEstimate=startingBwEstimate)}break}const audioOnly=audioCodecFound&&!videoCodecFound,config=this.hls.config,altAudioEnabled=!(!config.audioStreamController||!config.audioTrackController),edata={levels,audioTracks,subtitleTracks,sessionData:data.sessionData,sessionKeys:data.sessionKeys,firstLevel:this._firstLevel,stats:data.stats,audio:audioCodecFound,video:videoCodecFound,altAudio:altAudioEnabled&&!audioOnly&&audioTracks.some((t=>!!t.url))};this.hls.trigger(Events.MANIFEST_PARSED,edata)}get levels(){return 0===this._levels.length?null:this._levels}get loadLevelObj(){return this.currentLevel}get level(){return this.currentLevelIndex}set level(newLevel){const levels=this._levels;if(0===levels.length)return;if(newLevel<0||newLevel>=levels.length){const error=new Error("invalid level idx"),fatal=newLevel<0;if(this.hls.trigger(Events.ERROR,{type:ErrorTypes.OTHER_ERROR,details:ErrorDetails.LEVEL_SWITCH_ERROR,level:newLevel,fatal,error,reason:error.message}),fatal)return;newLevel=Math.min(newLevel,levels.length-1)}const lastLevelIndex=this.currentLevelIndex,lastLevel=this.currentLevel,lastPathwayId=lastLevel?lastLevel.attrs["PATHWAY-ID"]:void 0,level=levels[newLevel],pathwayId=level.attrs["PATHWAY-ID"];if(this.currentLevelIndex=newLevel,this.currentLevel=level,lastLevelIndex===newLevel&&lastLevel&&lastPathwayId===pathwayId)return;this.log(`Switching to level ${newLevel} (${level.height?level.height+"p ":""}${level.videoRange?level.videoRange+" ":""}${level.codecSet?level.codecSet+" ":""}@${level.bitrate})${pathwayId?" with Pathway "+pathwayId:""} from level ${lastLevelIndex}${lastPathwayId?" with Pathway "+lastPathwayId:""}`);const levelSwitchingData={level:newLevel,attrs:level.attrs,details:level.details,bitrate:level.bitrate,averageBitrate:level.averageBitrate,maxBitrate:level.maxBitrate,realBitrate:level.realBitrate,width:level.width,height:level.height,codecSet:level.codecSet,audioCodec:level.audioCodec,videoCodec:level.videoCodec,audioGroups:level.audioGroups,subtitleGroups:level.subtitleGroups,loaded:level.loaded,loadError:level.loadError,fragmentError:level.fragmentError,name:level.name,id:level.id,uri:level.uri,url:level.url,urlId:0,audioGroupIds:level.audioGroupIds,textGroupIds:level.textGroupIds};this.hls.trigger(Events.LEVEL_SWITCHING,levelSwitchingData);const levelDetails=level.details;if(!levelDetails||levelDetails.live){const hlsUrlParameters=this.switchParams(level.uri,null==lastLevel?void 0:lastLevel.details,levelDetails);this.loadPlaylist(hlsUrlParameters)}}get manualLevel(){return this.manualLevelIndex}set manualLevel(newLevel){this.manualLevelIndex=newLevel,void 0===this._startLevel&&(this._startLevel=newLevel),-1!==newLevel&&(this.level=newLevel)}get firstLevel(){return this._firstLevel}set firstLevel(newLevel){this._firstLevel=newLevel}get startLevel(){if(void 0===this._startLevel){const configStartLevel=this.hls.config.startLevel;return void 0!==configStartLevel?configStartLevel:this.hls.firstAutoLevel}return this._startLevel}set startLevel(newLevel){this._startLevel=newLevel}get pathways(){return this.steering?this.steering.pathways():[]}get pathwayPriority(){return this.steering?this.steering.pathwayPriority:null}set pathwayPriority(pathwayPriority){if(this.steering){const pathwaysList=this.steering.pathways(),filteredPathwayPriority=pathwayPriority.filter((pathwayId=>-1!==pathwaysList.indexOf(pathwayId)));if(pathwayPriority.length<1)return void this.warn(`pathwayPriority ${pathwayPriority} should contain at least one pathway from list: ${pathwaysList}`);this.steering.pathwayPriority=filteredPathwayPriority}}onError(event,data){!data.fatal&&data.context&&data.context.type===PlaylistContextType_LEVEL&&data.context.level===this.level&&this.checkRetry(data)}onFragBuffered(event,{frag}){if(void 0!==frag&&frag.type===PlaylistLevelType.MAIN){const el=frag.elementaryStreams;if(!Object.keys(el).some((type=>!!el[type])))return;const level=this._levels[frag.level];null!=level&&level.loadError&&(this.log(`Resetting level error count of ${level.loadError} on frag buffered`),level.loadError=0)}}onLevelLoaded(event,data){var _data$deliveryDirecti2;const{level,details}=data,curLevel=data.levelInfo;var _data$deliveryDirecti;if(!curLevel)return this.warn(`Invalid level index ${level}`),void(null!=(_data$deliveryDirecti=data.deliveryDirectives)&&_data$deliveryDirecti.skip&&(details.deltaUpdateFailed=!0));if(curLevel===this.currentLevel||data.withoutMultiVariant){0===curLevel.fragmentError&&(curLevel.loadError=0);let previousDetails=curLevel.details;previousDetails===data.details&&previousDetails.advanced&&(previousDetails=void 0),this.playlistLoaded(level,data,previousDetails)}else null!=(_data$deliveryDirecti2=data.deliveryDirectives)&&_data$deliveryDirecti2.skip&&(details.deltaUpdateFailed=!0)}loadPlaylist(hlsUrlParameters){super.loadPlaylist(),this.shouldLoadPlaylist(this.currentLevel)&&this.scheduleLoading(this.currentLevel,hlsUrlParameters)}loadingPlaylist(currentLevel,hlsUrlParameters){super.loadingPlaylist(currentLevel,hlsUrlParameters);const url=this.getUrlWithDirectives(currentLevel.uri,hlsUrlParameters),currentLevelIndex=this.currentLevelIndex,pathwayId=currentLevel.attrs["PATHWAY-ID"],details=currentLevel.details,age=null==details?void 0:details.age;this.log(`Loading level index ${currentLevelIndex}${void 0!==(null==hlsUrlParameters?void 0:hlsUrlParameters.msn)?" at sn "+hlsUrlParameters.msn+" part "+hlsUrlParameters.part:""}${pathwayId?" Pathway "+pathwayId:""}${age&&details.live?" age "+age.toFixed(1)+(details.type?" "+details.type||0:""):""} ${url}`),this.hls.trigger(Events.LEVEL_LOADING,{url,level:currentLevelIndex,levelInfo:currentLevel,pathwayId:currentLevel.attrs["PATHWAY-ID"],id:0,deliveryDirectives:hlsUrlParameters||null})}get nextLoadLevel(){return-1!==this.manualLevelIndex?this.manualLevelIndex:this.hls.nextAutoLevel}set nextLoadLevel(nextLevel){this.level=nextLevel,-1===this.manualLevelIndex&&(this.hls.nextAutoLevel=nextLevel)}removeLevel(levelIndex){var _this$currentLevel;if(1===this._levels.length)return;const levels=this._levels.filter(((level,index)=>index!==levelIndex||(this.steering&&this.steering.removeLevel(level),level===this.currentLevel&&(this.currentLevel=null,this.currentLevelIndex=-1,level.details&&level.details.fragments.forEach((f=>f.level=-1))),!1)));reassignFragmentLevelIndexes(levels),this._levels=levels,this.currentLevelIndex>-1&&null!=(_this$currentLevel=this.currentLevel)&&_this$currentLevel.details&&(this.currentLevelIndex=this.currentLevel.details.fragments[0].level),this.manualLevelIndex>-1&&(this.manualLevelIndex=this.currentLevelIndex);const maxLevel=levels.length-1;this._firstLevel=Math.min(this._firstLevel,maxLevel),this._startLevel&&(this._startLevel=Math.min(this._startLevel,maxLevel)),this.hls.trigger(Events.LEVELS_UPDATED,{levels})}onLevelsUpdated(event,{levels}){this._levels=levels}checkMaxAutoUpdated(){const{autoLevelCapping,maxAutoLevel,maxHdcpLevel}=this.hls;this._maxAutoLevel!==maxAutoLevel&&(this._maxAutoLevel=maxAutoLevel,this.hls.trigger(Events.MAX_AUTO_LEVEL_UPDATED,{autoLevelCapping,levels:this.levels,maxAutoLevel,minAutoLevel:this.hls.minAutoLevel,maxHdcpLevel}))}}function assignTrackIdsByGroup(tracks){const groups={};tracks.forEach((track=>{const groupId=track.groupId||"";track.id=groups[groupId]=groups[groupId]||0,groups[groupId]++}))}function getSourceBuffer(){return self.SourceBuffer||self.WebKitSourceBuffer}function isMSESupported(){if(!getMediaSource())return!1;const sourceBuffer=getSourceBuffer();return!sourceBuffer||sourceBuffer.prototype&&"function"==typeof sourceBuffer.prototype.appendBuffer&&"function"==typeof sourceBuffer.prototype.remove}function isSupported(){if(!isMSESupported())return!1;const mediaSource=getMediaSource();return"function"==typeof(null==mediaSource?void 0:mediaSource.isTypeSupported)&&(["avc1.42E01E,mp4a.40.2","av01.0.01M.08","vp09.00.50.08"].some((codecsForVideoContainer=>mediaSource.isTypeSupported(mimeTypeForCodec(codecsForVideoContainer,"video"))))||["mp4a.40.2","fLaC"].some((codecForAudioContainer=>mediaSource.isTypeSupported(mimeTypeForCodec(codecForAudioContainer,"audio")))))}class StreamController extends BaseStreamController{constructor(hls,fragmentTracker,keyLoader){super(hls,fragmentTracker,keyLoader,"stream-controller",PlaylistLevelType.MAIN),this.audioCodecSwap=!1,this.level=-1,this._forceStartLoad=!1,this._hasEnoughToStart=!1,this.altAudio=0,this.audioOnly=!1,this.fragPlaying=null,this.fragLastKbps=0,this.couldBacktrack=!1,this.backtrackFragment=null,this.audioCodecSwitch=!1,this.videoBuffer=null,this.onMediaPlaying=()=>{this.tick()},this.onMediaSeeked=()=>{const media=this.media,currentTime=media?media.currentTime:null;if(null===currentTime||!isFiniteNumber(currentTime))return;if(this.log(`Media seeked to ${currentTime.toFixed(3)}`),!this.getBufferedFrag(currentTime))return;const bufferInfo=this.getFwdBufferInfoAtPos(media,currentTime,PlaylistLevelType.MAIN,0);null!==bufferInfo&&0!==bufferInfo.len?this.tick():this.warn(`Main forward buffer length at ${currentTime} on "seeked" event ${bufferInfo?bufferInfo.len:"empty"})`)},this.registerListeners()}registerListeners(){super.registerListeners();const{hls}=this;hls.on(Events.MANIFEST_PARSED,this.onManifestParsed,this),hls.on(Events.LEVEL_LOADING,this.onLevelLoading,this),hls.on(Events.LEVEL_LOADED,this.onLevelLoaded,this),hls.on(Events.FRAG_LOAD_EMERGENCY_ABORTED,this.onFragLoadEmergencyAborted,this),hls.on(Events.AUDIO_TRACK_SWITCHING,this.onAudioTrackSwitching,this),hls.on(Events.AUDIO_TRACK_SWITCHED,this.onAudioTrackSwitched,this),hls.on(Events.BUFFER_CREATED,this.onBufferCreated,this),hls.on(Events.BUFFER_FLUSHED,this.onBufferFlushed,this),hls.on(Events.LEVELS_UPDATED,this.onLevelsUpdated,this),hls.on(Events.FRAG_BUFFERED,this.onFragBuffered,this)}unregisterListeners(){super.unregisterListeners();const{hls}=this;hls.off(Events.MANIFEST_PARSED,this.onManifestParsed,this),hls.off(Events.LEVEL_LOADED,this.onLevelLoaded,this),hls.off(Events.FRAG_LOAD_EMERGENCY_ABORTED,this.onFragLoadEmergencyAborted,this),hls.off(Events.AUDIO_TRACK_SWITCHING,this.onAudioTrackSwitching,this),hls.off(Events.AUDIO_TRACK_SWITCHED,this.onAudioTrackSwitched,this),hls.off(Events.BUFFER_CREATED,this.onBufferCreated,this),hls.off(Events.BUFFER_FLUSHED,this.onBufferFlushed,this),hls.off(Events.LEVELS_UPDATED,this.onLevelsUpdated,this),hls.off(Events.FRAG_BUFFERED,this.onFragBuffered,this)}onHandlerDestroying(){this.onMediaPlaying=this.onMediaSeeked=null,this.unregisterListeners(),super.onHandlerDestroying()}startLoad(startPosition,skipSeekToStartPosition){if(this.levels){const{lastCurrentTime,hls}=this;if(this.stopLoad(),this.setInterval(100),this.level=-1,!this.startFragRequested){let startLevel=hls.startLevel;-1===startLevel&&(hls.config.testBandwidth&&this.levels.length>1?(startLevel=0,this.bitrateTest=!0):startLevel=hls.firstAutoLevel),hls.nextLoadLevel=startLevel,this.level=hls.loadLevel,this._hasEnoughToStart=!!skipSeekToStartPosition}lastCurrentTime>0&&-1===startPosition&&!skipSeekToStartPosition&&(this.log(`Override startPosition with lastCurrentTime @${lastCurrentTime.toFixed(3)}`),startPosition=lastCurrentTime),this.state=State.IDLE,this.nextLoadPosition=this.lastCurrentTime=startPosition+this.timelineOffset,this.startPosition=skipSeekToStartPosition?-1:startPosition,this.tick()}else this._forceStartLoad=!0,this.state=State.STOPPED}stopLoad(){this._forceStartLoad=!1,super.stopLoad()}doTick(){switch(this.state){case State.WAITING_LEVEL:{const{levels,level}=this,currentLevel=null==levels?void 0:levels[level],details=null==currentLevel?void 0:currentLevel.details;if(details&&(!details.live||this.levelLastLoaded===currentLevel&&!this.waitForLive(currentLevel))){if(this.waitForCdnTuneIn(details))break;this.state=State.IDLE;break}if(this.hls.nextLoadLevel!==this.level){this.state=State.IDLE;break}break}case State.FRAG_LOADING_WAITING_RETRY:{var _this$media;const now=self.performance.now(),retryDate=this.retryDate;if(!retryDate||now>=retryDate||null!=(_this$media=this.media)&&_this$media.seeking){const{levels,level}=this,currentLevel=null==levels?void 0:levels[level];this.resetStartWhenNotLoaded(currentLevel||null),this.state=State.IDLE}}}this.state===State.IDLE&&this.doTickIdle(),this.onTickEnd()}onTickEnd(){var _this$media2;super.onTickEnd(),null!=(_this$media2=this.media)&&_this$media2.readyState&&!1===this.media.seeking&&(this.lastCurrentTime=this.media.currentTime),this.checkFragmentChanged()}doTickIdle(){const{hls,levelLastLoaded,levels,media}=this;if(null===levelLastLoaded||!media&&!this.primaryPrefetch&&(this.startFragRequested||!hls.config.startFragPrefetch))return;if(this.altAudio&&this.audioOnly)return;const level=this.buffering?hls.nextLoadLevel:hls.loadLevel;if(null==levels||!levels[level])return;const levelInfo=levels[level],bufferInfo=this.getMainFwdBufferInfo();if(null===bufferInfo)return;const lastDetails=this.getLevelDetails();if(lastDetails&&this._streamEnded(bufferInfo,lastDetails)){const data={};return 2===this.altAudio&&(data.type="video"),this.hls.trigger(Events.BUFFER_EOS,data),void(this.state=State.ENDED)}if(!this.buffering)return;hls.loadLevel!==level&&-1===hls.manualLevel&&this.log(`Adapting to level ${level} from level ${this.level}`),this.level=hls.nextLoadLevel=level;const levelDetails=levelInfo.details;if(!levelDetails||this.state===State.WAITING_LEVEL||this.waitForLive(levelInfo))return this.level=level,this.state=State.WAITING_LEVEL,void(this.startFragRequested=!1);const bufferLen=bufferInfo.len,maxBufLen=this.getMaxBufferLength(levelInfo.maxBitrate);if(bufferLen>=maxBufLen)return;this.backtrackFragment&&this.backtrackFragment.start>bufferInfo.end&&(this.backtrackFragment=null);const targetBufferTime=this.backtrackFragment?this.backtrackFragment.start:bufferInfo.end;let frag=this.getNextFragment(targetBufferTime,levelDetails);if(this.couldBacktrack&&!this.fragPrevious&&frag&&isMediaFragment(frag)&&this.fragmentTracker.getState(frag)!==FragmentState_OK){var _this$backtrackFragme;const fragIdx=(null!=(_this$backtrackFragme=this.backtrackFragment)?_this$backtrackFragme:frag).sn-levelDetails.startSN,backtrackFrag=levelDetails.fragments[fragIdx-1];backtrackFrag&&frag.cc===backtrackFrag.cc&&(frag=backtrackFrag,this.fragmentTracker.removeFragment(backtrackFrag))}else this.backtrackFragment&&bufferInfo.len&&(this.backtrackFragment=null);if(frag&&this.isLoopLoading(frag,targetBufferTime)){if(!frag.gap){const type=this.audioOnly&&!this.altAudio?ElementaryStreamTypes_AUDIO:ElementaryStreamTypes_VIDEO,mediaBuffer=(type===ElementaryStreamTypes_VIDEO?this.videoBuffer:this.mediaBuffer)||this.media;mediaBuffer&&this.afterBufferFlushed(mediaBuffer,type,PlaylistLevelType.MAIN)}frag=this.getNextFragmentLoopLoading(frag,levelDetails,bufferInfo,PlaylistLevelType.MAIN,maxBufLen)}frag&&(!frag.initSegment||frag.initSegment.data||this.bitrateTest||(frag=frag.initSegment),this.loadFragment(frag,levelInfo,targetBufferTime))}loadFragment(frag,level,targetBufferTime){const fragState=this.fragmentTracker.getState(frag);fragState===FragmentState_NOT_LOADED||fragState===FragmentState_PARTIAL?isMediaFragment(frag)?this.bitrateTest?(this.log(`Fragment ${frag.sn} of level ${frag.level} is being downloaded to test bitrate and will not be buffered`),this._loadBitrateTestFrag(frag,level)):super.loadFragment(frag,level,targetBufferTime):this._loadInitSegment(frag,level):this.clearTrackerIfNeeded(frag)}getBufferedFrag(position){return this.fragmentTracker.getBufferedFrag(position,PlaylistLevelType.MAIN)}followingBufferedFrag(frag){return frag?this.getBufferedFrag(frag.end+.5):null}immediateLevelSwitch(){this.abortCurrentFrag(),this.flushMainBuffer(0,Number.POSITIVE_INFINITY)}nextLevelSwitch(){const{levels,media}=this;if(null!=media&&media.readyState){let fetchdelay;const fragPlayingCurrent=this.getAppendedFrag(media.currentTime);fragPlayingCurrent&&fragPlayingCurrent.start>1&&this.flushMainBuffer(0,fragPlayingCurrent.start-1);const levelDetails=this.getLevelDetails();if(null!=levelDetails&&levelDetails.live){const bufferInfo=this.getMainFwdBufferInfo();if(!bufferInfo||bufferInfo.len<2*levelDetails.targetduration)return}if(!media.paused&&levels){const nextLevel=levels[this.hls.nextLoadLevel],fragLastKbps=this.fragLastKbps;fetchdelay=fragLastKbps&&this.fragCurrent?this.fragCurrent.duration*nextLevel.maxBitrate/(1e3*fragLastKbps)+1:0}else fetchdelay=0;const bufferedFrag=this.getBufferedFrag(media.currentTime+fetchdelay);if(bufferedFrag){const nextBufferedFrag=this.followingBufferedFrag(bufferedFrag);if(nextBufferedFrag){this.abortCurrentFrag();const maxStart=nextBufferedFrag.maxStartPTS?nextBufferedFrag.maxStartPTS:nextBufferedFrag.start,fragDuration=nextBufferedFrag.duration,startPts=Math.max(bufferedFrag.end,maxStart+Math.min(Math.max(fragDuration-this.config.maxFragLookUpTolerance,fragDuration*(this.couldBacktrack?.5:.125)),fragDuration*(this.couldBacktrack?.75:.25)));this.flushMainBuffer(startPts,Number.POSITIVE_INFINITY)}}}}abortCurrentFrag(){const fragCurrent=this.fragCurrent;switch(this.fragCurrent=null,this.backtrackFragment=null,fragCurrent&&(fragCurrent.abortRequests(),this.fragmentTracker.removeFragment(fragCurrent)),this.state){case State.KEY_LOADING:case State.FRAG_LOADING:case State.FRAG_LOADING_WAITING_RETRY:case State.PARSING:case State.PARSED:this.state=State.IDLE}this.nextLoadPosition=this.getLoadPosition()}flushMainBuffer(startOffset,endOffset){super.flushMainBuffer(startOffset,endOffset,2===this.altAudio?"video":null)}onMediaAttached(event,data){super.onMediaAttached(event,data);const media=data.media;addEventListener(media,"playing",this.onMediaPlaying),addEventListener(media,"seeked",this.onMediaSeeked)}onMediaDetaching(event,data){const{media}=this;media&&(removeEventListener(media,"playing",this.onMediaPlaying),removeEventListener(media,"seeked",this.onMediaSeeked)),this.videoBuffer=null,this.fragPlaying=null,super.onMediaDetaching(event,data);!!data.transferMedia||(this._hasEnoughToStart=!1)}onManifestLoading(){super.onManifestLoading(),this.log("Trigger BUFFER_RESET"),this.hls.trigger(Events.BUFFER_RESET,void 0),this.couldBacktrack=!1,this.fragLastKbps=0,this.fragPlaying=this.backtrackFragment=null,this.altAudio=0,this.audioOnly=!1}onManifestParsed(event,data){let aac=!1,heaac=!1;for(let i=0;i<data.levels.length;i++){const codec=data.levels[i].audioCodec;codec&&(aac=aac||-1!==codec.indexOf("mp4a.40.2"),heaac=heaac||-1!==codec.indexOf("mp4a.40.5"))}this.audioCodecSwitch=aac&&heaac&&!function changeTypeSupported(){var _sourceBuffer$prototy;const sourceBuffer=getSourceBuffer();return"function"==typeof(null==sourceBuffer||null==(_sourceBuffer$prototy=sourceBuffer.prototype)?void 0:_sourceBuffer$prototy.changeType)}(),this.audioCodecSwitch&&this.log("Both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC"),this.levels=data.levels,this.startFragRequested=!1}onLevelLoading(event,data){const{levels}=this;if(!levels||this.state!==State.IDLE)return;const level=data.levelInfo;(!level.details||level.details.live&&(this.levelLastLoaded!==level||level.details.expired)||this.waitForCdnTuneIn(level.details))&&(this.state=State.WAITING_LEVEL)}onLevelLoaded(event,data){var _curLevel$details;const{levels,startFragRequested}=this,newLevelId=data.level,newDetails=data.details,duration=newDetails.totalduration;if(!levels)return void this.warn(`Levels were reset while loading level ${newLevelId}`);this.log(`Level ${newLevelId} loaded [${newDetails.startSN},${newDetails.endSN}]${newDetails.lastPartSn?`[part-${newDetails.lastPartSn}-${newDetails.lastPartIndex}]`:""}, cc [${newDetails.startCC}, ${newDetails.endCC}] duration:${duration}`);const curLevel=data.levelInfo,fragCurrent=this.fragCurrent;!fragCurrent||this.state!==State.FRAG_LOADING&&this.state!==State.FRAG_LOADING_WAITING_RETRY||fragCurrent.level!==data.level&&fragCurrent.loader&&this.abortCurrentFrag();let sliding=0;if(newDetails.live||null!=(_curLevel$details=curLevel.details)&&_curLevel$details.live){var _this$levelLastLoaded;if(this.checkLiveUpdate(newDetails),newDetails.deltaUpdateFailed)return;sliding=this.alignPlaylists(newDetails,curLevel.details,null==(_this$levelLastLoaded=this.levelLastLoaded)?void 0:_this$levelLastLoaded.details)}if(curLevel.details=newDetails,this.levelLastLoaded=curLevel,startFragRequested||this.setStartPosition(newDetails,sliding),this.hls.trigger(Events.LEVEL_UPDATED,{details:newDetails,level:newLevelId}),this.state===State.WAITING_LEVEL){if(this.waitForCdnTuneIn(newDetails))return;this.state=State.IDLE}startFragRequested&&newDetails.live&&this.synchronizeToLiveEdge(newDetails),this.tick()}synchronizeToLiveEdge(levelDetails){const{config,media}=this;if(!media)return;const liveSyncPosition=this.hls.liveSyncPosition,currentTime=this.getLoadPosition(),start=levelDetails.fragmentStart,end=levelDetails.edge,withinSlidingWindow=currentTime>=start-config.maxFragLookUpTolerance&&currentTime<=end;if(null!==liveSyncPosition&&media.duration>liveSyncPosition&&(currentTime<liveSyncPosition||!withinSlidingWindow)){const maxLatency=void 0!==config.liveMaxLatencyDuration?config.liveMaxLatencyDuration:config.liveMaxLatencyDurationCount*levelDetails.targetduration;if((!withinSlidingWindow&&media.readyState<4||currentTime<end-maxLatency)&&(this._hasEnoughToStart||(this.nextLoadPosition=liveSyncPosition),media.readyState))if(this.warn(`Playback: ${currentTime.toFixed(3)} is located too far from the end of live sliding playlist: ${end}, reset currentTime to : ${liveSyncPosition.toFixed(3)}`),"buffered"===this.config.liveSyncMode){var _bufferInfo$buffered;const bufferInfo=BufferHelper.bufferInfo(media,liveSyncPosition,0);if(null==(_bufferInfo$buffered=bufferInfo.buffered)||!_bufferInfo$buffered.length)return void(media.currentTime=liveSyncPosition);if(bufferInfo.start<=currentTime)return void(media.currentTime=liveSyncPosition);const{nextStart}=BufferHelper.bufferedInfo(bufferInfo.buffered,currentTime,0);nextStart&&(media.currentTime=nextStart)}else media.currentTime=liveSyncPosition}}_handleFragmentLoadProgress(data){var _frag$initSegment;const frag=data.frag,{part,payload}=data,{levels}=this;if(!levels)return void this.warn(`Levels were reset while fragment load was in progress. Fragment ${frag.sn} of level ${frag.level} will not be buffered`);const currentLevel=levels[frag.level];if(!currentLevel)return void this.warn(`Level ${frag.level} not found on progress`);const details=currentLevel.details;if(!details)return this.warn(`Dropping fragment ${frag.sn} of level ${frag.level} after level details were reset`),void this.fragmentTracker.removeFragment(frag);const videoCodec=currentLevel.videoCodec,accurateTimeOffset=details.PTSKnown||!details.live,initSegmentData=null==(_frag$initSegment=frag.initSegment)?void 0:_frag$initSegment.data,audioCodec=this._getAudioCodec(currentLevel),transmuxer=this.transmuxer=this.transmuxer||new TransmuxerInterface(this.hls,PlaylistLevelType.MAIN,this._handleTransmuxComplete.bind(this),this._handleTransmuxerFlush.bind(this)),partIndex=part?part.index:-1,partial=-1!==partIndex,chunkMeta=new ChunkMetadata(frag.level,frag.sn,frag.stats.chunkCount,payload.byteLength,partIndex,partial),initPTS=this.initPTS[frag.cc];transmuxer.push(payload,initSegmentData,audioCodec,videoCodec,frag,part,details.totalduration,accurateTimeOffset,chunkMeta,initPTS)}onAudioTrackSwitching(event,data){const hls=this.hls,fromAltAudio=2===this.altAudio;if(useAlternateAudio(data.url,hls))this.altAudio=1;else{if(this.mediaBuffer!==this.media){this.log("Switching on main audio, use media.buffered to schedule main fragment loading"),this.mediaBuffer=this.media;const fragCurrent=this.fragCurrent;fragCurrent&&(this.log("Switching to main audio track, cancel main fragment load"),fragCurrent.abortRequests(),this.fragmentTracker.removeFragment(fragCurrent)),this.resetTransmuxer(),this.resetLoadingState()}else this.audioOnly&&this.resetTransmuxer();if(fromAltAudio)return this.fragmentTracker.removeAllFragments(),hls.once(Events.BUFFER_FLUSHED,(()=>{this.hls&&this.hls.trigger(Events.AUDIO_TRACK_SWITCHED,data)})),void hls.trigger(Events.BUFFER_FLUSHING,{startOffset:0,endOffset:Number.POSITIVE_INFINITY,type:null});hls.trigger(Events.AUDIO_TRACK_SWITCHED,data)}}onAudioTrackSwitched(event,data){const altAudio=useAlternateAudio(data.url,this.hls);if(altAudio){const videoBuffer=this.videoBuffer;videoBuffer&&this.mediaBuffer!==videoBuffer&&(this.log("Switching on alternate audio, use video.buffered to schedule main fragment loading"),this.mediaBuffer=videoBuffer)}this.altAudio=altAudio?2:0,this.tick()}onBufferCreated(event,data){const tracks=data.tracks;let mediaTrack,name,alternate=!1;for(const type in tracks){const track=tracks[type];if("main"===track.id){if(name=type,mediaTrack=track,"video"===type){const videoTrack=tracks[type];videoTrack&&(this.videoBuffer=videoTrack.buffer)}}else alternate=!0}alternate&&mediaTrack?(this.log(`Alternate track found, use ${name}.buffered to schedule main fragment loading`),this.mediaBuffer=mediaTrack.buffer):this.mediaBuffer=this.media}onFragBuffered(event,data){const{frag,part}=data,bufferedMainFragment=frag.type===PlaylistLevelType.MAIN;if(bufferedMainFragment){if(this.fragContextChanged(frag))return this.warn(`Fragment ${frag.sn}${part?" p: "+part.index:""} of level ${frag.level} finished buffering, but was aborted. state: ${this.state}`),void(this.state===State.PARSED&&(this.state=State.IDLE));const stats=part?part.stats:frag.stats;this.fragLastKbps=Math.round(8*stats.total/(stats.buffering.end-stats.loading.first)),isMediaFragment(frag)&&(this.fragPrevious=frag),this.fragBufferedComplete(frag,part)}const media=this.media;media&&(!this._hasEnoughToStart&&BufferHelper.getBuffered(media).length&&(this._hasEnoughToStart=!0,this.seekToStartPos()),bufferedMainFragment&&this.tick())}get hasEnoughToStart(){return this._hasEnoughToStart}onError(event,data){var _data$context;if(data.fatal)this.state=State.ERROR;else switch(data.details){case ErrorDetails.FRAG_GAP:case ErrorDetails.FRAG_PARSING_ERROR:case ErrorDetails.FRAG_DECRYPT_ERROR:case ErrorDetails.FRAG_LOAD_ERROR:case ErrorDetails.FRAG_LOAD_TIMEOUT:case ErrorDetails.KEY_LOAD_ERROR:case ErrorDetails.KEY_LOAD_TIMEOUT:this.onFragmentOrKeyLoadError(PlaylistLevelType.MAIN,data);break;case ErrorDetails.LEVEL_LOAD_ERROR:case ErrorDetails.LEVEL_LOAD_TIMEOUT:case ErrorDetails.LEVEL_PARSING_ERROR:data.levelRetry||this.state!==State.WAITING_LEVEL||(null==(_data$context=data.context)?void 0:_data$context.type)!==PlaylistContextType_LEVEL||(this.state=State.IDLE);break;case ErrorDetails.BUFFER_ADD_CODEC_ERROR:case ErrorDetails.BUFFER_APPEND_ERROR:if("main"!==data.parent)return;this.reduceLengthAndFlushBuffer(data)&&this.resetLoadingState();break;case ErrorDetails.BUFFER_FULL_ERROR:if("main"!==data.parent)return;if(this.reduceLengthAndFlushBuffer(data)){!this.config.interstitialsController&&this.config.assetPlayerId?this._hasEnoughToStart=!0:this.flushMainBuffer(0,Number.POSITIVE_INFINITY)}break;case ErrorDetails.INTERNAL_EXCEPTION:this.recoverWorkerError(data)}}onFragLoadEmergencyAborted(){this.state=State.IDLE,this._hasEnoughToStart||(this.startFragRequested=!1,this.nextLoadPosition=this.lastCurrentTime),this.tickImmediate()}onBufferFlushed(event,{type}){if(type!==ElementaryStreamTypes_AUDIO||!this.altAudio){const mediaBuffer=(type===ElementaryStreamTypes_VIDEO?this.videoBuffer:this.mediaBuffer)||this.media;mediaBuffer&&(this.afterBufferFlushed(mediaBuffer,type,PlaylistLevelType.MAIN),this.tick())}}onLevelsUpdated(event,data){this.level>-1&&this.fragCurrent&&(this.level=this.fragCurrent.level,-1===this.level&&this.resetWhenMissingContext(this.fragCurrent)),this.levels=data.levels}swapAudioCodec(){this.audioCodecSwap=!this.audioCodecSwap}seekToStartPos(){const{media}=this;if(!media)return;const currentTime=media.currentTime;let startPosition=this.startPosition;if(startPosition>=0&&currentTime<startPosition){if(media.seeking)return void this.log(`could not seek to ${startPosition}, already seeking at ${currentTime}`);const timelineOffset=this.timelineOffset;timelineOffset&&startPosition&&(startPosition+=timelineOffset);const details=this.getLevelDetails(),buffered=BufferHelper.getBuffered(media),bufferStart=buffered.length?buffered.start(0):0,delta=bufferStart-startPosition,skipTolerance=Math.max(this.config.maxBufferHole,this.config.maxFragLookUpTolerance);(this.config.startOnSegmentBoundary||delta>0&&(delta<skipTolerance||this.loadingParts&&delta<2*((null==details?void 0:details.partTarget)||0)))&&(this.log(`adjusting start position by ${delta} to match buffer start`),startPosition+=delta,this.startPosition=startPosition),currentTime<startPosition&&(this.log(`seek to target start position ${startPosition} from current time ${currentTime} buffer start ${bufferStart}`),media.currentTime=startPosition)}}_getAudioCodec(currentLevel){let audioCodec=this.config.defaultAudioCodec||currentLevel.audioCodec;return this.audioCodecSwap&&audioCodec&&(this.log("Swapping audio codec"),audioCodec=-1!==audioCodec.indexOf("mp4a.40.5")?"mp4a.40.2":"mp4a.40.5"),audioCodec}_loadBitrateTestFrag(fragment,level){fragment.bitrateTest=!0,this._doFragLoad(fragment,level).then((data=>{const{hls}=this,frag=null==data?void 0:data.frag;if(!frag||this.fragContextChanged(frag))return;level.fragmentError=0,this.state=State.IDLE,this.startFragRequested=!1,this.bitrateTest=!1;const stats=frag.stats;stats.parsing.start=stats.parsing.end=stats.buffering.start=stats.buffering.end=self.performance.now(),hls.trigger(Events.FRAG_LOADED,data),frag.bitrateTest=!1}))}_handleTransmuxComplete(transmuxResult){const id=this.playlistType,{hls}=this,{remuxResult,chunkMeta}=transmuxResult,context=this.getCurrentContext(chunkMeta);if(!context)return void this.resetWhenMissingContext(chunkMeta);const{frag,part,level}=context,{video,text,id3,initSegment}=remuxResult,{details}=level,audio=this.altAudio?void 0:remuxResult.audio;if(this.fragContextChanged(frag))this.fragmentTracker.removeFragment(frag);else{if(this.state=State.PARSING,initSegment){const tracks=initSegment.tracks;if(tracks){const mapFragment=frag.initSegment||frag;if(this.unhandledEncryptionError(initSegment,frag))return;this._bufferInitSegment(level,tracks,mapFragment,chunkMeta),hls.trigger(Events.FRAG_PARSING_INIT_SEGMENT,{frag:mapFragment,id,tracks})}const baseTime=initSegment.initPTS,timescale=initSegment.timescale,initPTS=this.initPTS[frag.cc];if(isFiniteNumber(baseTime)&&(!initPTS||initPTS.baseTime!==baseTime||initPTS.timescale!==timescale)){const trackId=initSegment.trackId;this.initPTS[frag.cc]={baseTime,timescale,trackId},hls.trigger(Events.INIT_PTS_FOUND,{frag,id,initPTS:baseTime,timescale,trackId})}}if(video&&details){audio&&"audiovideo"===video.type&&this.logMuxedErr(frag);const prevFrag=details.fragments[frag.sn-1-details.startSN],isFirstFragment=frag.sn===details.startSN,isFirstInDiscontinuity=!prevFrag||frag.cc>prevFrag.cc;if(!1!==remuxResult.independent){const{startPTS,endPTS,startDTS,endDTS}=video;if(part)part.elementaryStreams[video.type]={startPTS,endPTS,startDTS,endDTS};else if(video.firstKeyFrame&&video.independent&&1===chunkMeta.id&&!isFirstInDiscontinuity&&(this.couldBacktrack=!0),video.dropped&&video.independent){const bufferInfo=this.getMainFwdBufferInfo(),targetBufferTime=(bufferInfo?bufferInfo.end:this.getLoadPosition())+this.config.maxBufferHole,startTime=video.firstKeyFramePTS?video.firstKeyFramePTS:startPTS;if(!isFirstFragment&&targetBufferTime<startTime-this.config.maxBufferHole&&!isFirstInDiscontinuity)return void this.backtrack(frag);isFirstInDiscontinuity&&(frag.gap=!0),frag.setElementaryStreamInfo(video.type,frag.start,endPTS,frag.start,endDTS,!0)}else isFirstFragment&&startPTS-(details.appliedTimelineOffset||0)>2&&(frag.gap=!0);frag.setElementaryStreamInfo(video.type,startPTS,endPTS,startDTS,endDTS),this.backtrackFragment&&(this.backtrackFragment=frag),this.bufferFragmentData(video,frag,part,chunkMeta,isFirstFragment||isFirstInDiscontinuity)}else{if(!isFirstFragment&&!isFirstInDiscontinuity)return void this.backtrack(frag);frag.gap=!0}}if(audio){const{startPTS,endPTS,startDTS,endDTS}=audio;part&&(part.elementaryStreams[ElementaryStreamTypes_AUDIO]={startPTS,endPTS,startDTS,endDTS}),frag.setElementaryStreamInfo(ElementaryStreamTypes_AUDIO,startPTS,endPTS,startDTS,endDTS),this.bufferFragmentData(audio,frag,part,chunkMeta)}if(details&&null!=id3&&id3.samples.length){const emittedID3={id,frag,details,samples:id3.samples};hls.trigger(Events.FRAG_PARSING_METADATA,emittedID3)}if(details&&text){const emittedText={id,frag,details,samples:text.samples};hls.trigger(Events.FRAG_PARSING_USERDATA,emittedText)}}}logMuxedErr(frag){this.warn(`${isMediaFragment(frag)?"Media":"Init"} segment with muxed audiovideo where only video expected: ${frag.url}`)}_bufferInitSegment(currentLevel,tracks,frag,chunkMeta){if(this.state!==State.PARSING)return;this.audioOnly=!!tracks.audio&&!tracks.video,this.altAudio&&!this.audioOnly&&(delete tracks.audio,tracks.audiovideo&&this.logMuxedErr(frag));const{audio,video,audiovideo}=tracks;if(audio){const levelCodec=currentLevel.audioCodec;let audioCodec=pickMostCompleteCodecName(audio.codec,levelCodec);"mp4a"===audioCodec&&(audioCodec="mp4a.40.5");const ua=navigator.userAgent.toLowerCase();if(this.audioCodecSwitch){audioCodec&&(audioCodec=-1!==audioCodec.indexOf("mp4a.40.5")?"mp4a.40.2":"mp4a.40.5");const audioMetadata=audio.metadata;audioMetadata&&"channelCount"in audioMetadata&&1!==(audioMetadata.channelCount||1)&&-1===ua.indexOf("firefox")&&(audioCodec="mp4a.40.5")}audioCodec&&-1!==audioCodec.indexOf("mp4a.40.5")&&-1!==ua.indexOf("android")&&"audio/mpeg"!==audio.container&&(audioCodec="mp4a.40.2",this.log(`Android: force audio codec to ${audioCodec}`)),levelCodec&&levelCodec!==audioCodec&&this.log(`Swapping manifest audio codec "${levelCodec}" for "${audioCodec}"`),audio.levelCodec=audioCodec,audio.id=PlaylistLevelType.MAIN,this.log(`Init audio buffer, container:${audio.container}, codecs[selected/level/parsed]=[${audioCodec||""}/${levelCodec||""}/${audio.codec}]`),delete tracks.audiovideo}if(video){video.levelCodec=currentLevel.videoCodec,video.id=PlaylistLevelType.MAIN;const parsedVideoCodec=video.codec;if(4===(null==parsedVideoCodec?void 0:parsedVideoCodec.length))switch(parsedVideoCodec){case"hvc1":case"hev1":video.codec="hvc1.1.6.L120.90";break;case"av01":video.codec="av01.0.04M.08";break;case"avc1":video.codec="avc1.42e01e"}this.log(`Init video buffer, container:${video.container}, codecs[level/parsed]=[${currentLevel.videoCodec||""}/${parsedVideoCodec}]${video.codec!==parsedVideoCodec?" parsed-corrected="+video.codec:""}${video.supplemental?" supplemental="+video.supplemental:""}`),delete tracks.audiovideo}audiovideo&&(this.log(`Init audiovideo buffer, container:${audiovideo.container}, codecs[level/parsed]=[${currentLevel.codecs}/${audiovideo.codec}]`),delete tracks.video,delete tracks.audio);const trackTypes=Object.keys(tracks);if(trackTypes.length){if(this.hls.trigger(Events.BUFFER_CODECS,tracks),!this.hls)return;trackTypes.forEach((trackName=>{const initSegment=tracks[trackName].initSegment;null!=initSegment&&initSegment.byteLength&&this.hls.trigger(Events.BUFFER_APPENDING,{type:trackName,data:initSegment,frag,part:null,chunkMeta,parent:frag.type})}))}this.tickImmediate()}getMainFwdBufferInfo(){const bufferOutput=this.mediaBuffer&&2===this.altAudio?this.mediaBuffer:this.media;return this.getFwdBufferInfo(bufferOutput,PlaylistLevelType.MAIN)}get maxBufferLength(){const{levels,level}=this,levelInfo=null==levels?void 0:levels[level];return levelInfo?this.getMaxBufferLength(levelInfo.maxBitrate):this.config.maxBufferLength}backtrack(frag){this.couldBacktrack=!0,this.backtrackFragment=frag,this.resetTransmuxer(),this.flushBufferGap(frag),this.fragmentTracker.removeFragment(frag),this.fragPrevious=null,this.nextLoadPosition=frag.start,this.state=State.IDLE}checkFragmentChanged(){const video=this.media;let fragPlayingCurrent=null;if(video&&video.readyState>1&&!1===video.seeking){const currentTime=video.currentTime;if(BufferHelper.isBuffered(video,currentTime)?fragPlayingCurrent=this.getAppendedFrag(currentTime):BufferHelper.isBuffered(video,currentTime+.1)&&(fragPlayingCurrent=this.getAppendedFrag(currentTime+.1)),fragPlayingCurrent){this.backtrackFragment=null;const fragPlaying=this.fragPlaying,fragCurrentLevel=fragPlayingCurrent.level;fragPlaying&&fragPlayingCurrent.sn===fragPlaying.sn&&fragPlaying.level===fragCurrentLevel||(this.fragPlaying=fragPlayingCurrent,this.hls.trigger(Events.FRAG_CHANGED,{frag:fragPlayingCurrent}),fragPlaying&&fragPlaying.level===fragCurrentLevel||this.hls.trigger(Events.LEVEL_SWITCHED,{level:fragCurrentLevel}))}}}get nextLevel(){const frag=this.nextBufferedFrag;return frag?frag.level:-1}get currentFrag(){var _this$media3;if(this.fragPlaying)return this.fragPlaying;const currentTime=(null==(_this$media3=this.media)?void 0:_this$media3.currentTime)||this.lastCurrentTime;return isFiniteNumber(currentTime)?this.getAppendedFrag(currentTime):null}get currentProgramDateTime(){var _this$media4;const currentTime=(null==(_this$media4=this.media)?void 0:_this$media4.currentTime)||this.lastCurrentTime;if(isFiniteNumber(currentTime)){const details=this.getLevelDetails(),frag=this.currentFrag||(details?findFragmentByPTS(null,details.fragments,currentTime):null);if(frag){const programDateTime=frag.programDateTime;if(null!==programDateTime){const epocMs=programDateTime+1e3*(currentTime-frag.start);return new Date(epocMs)}}}return null}get currentLevel(){const frag=this.currentFrag;return frag?frag.level:-1}get nextBufferedFrag(){const frag=this.currentFrag;return frag?this.followingBufferedFrag(frag):null}get forceStartLoad(){return this._forceStartLoad}}class KeyLoader{constructor(config){this.config=void 0,this.keyUriToKeyInfo={},this.emeController=null,this.config=config}abort(type){for(const uri in this.keyUriToKeyInfo){const loader=this.keyUriToKeyInfo[uri].loader;if(loader){var _loader$context;if(type&&type!==(null==(_loader$context=loader.context)?void 0:_loader$context.frag.type))return;loader.abort()}}}detach(){for(const uri in this.keyUriToKeyInfo){const keyInfo=this.keyUriToKeyInfo[uri];(keyInfo.mediaKeySessionContext||keyInfo.decryptdata.isCommonEncryption)&&delete this.keyUriToKeyInfo[uri]}}destroy(){this.detach();for(const uri in this.keyUriToKeyInfo){const loader=this.keyUriToKeyInfo[uri].loader;loader&&loader.destroy()}this.keyUriToKeyInfo={}}createKeyLoadError(frag,details=ErrorDetails.KEY_LOAD_ERROR,error,networkDetails,response){return new LoadError({type:ErrorTypes.NETWORK_ERROR,details,fatal:!1,frag,response,error,networkDetails})}loadClear(loadingFrag,encryptedFragments,startFragRequested){if(this.emeController&&this.config.emeEnabled&&!this.emeController.getSelectedKeySystemFormats().length){if(encryptedFragments.length)for(let i=0,l=encryptedFragments.length;i<l;i++){const frag=encryptedFragments[i];if(loadingFrag.cc<=frag.cc&&(!isMediaFragment(loadingFrag)||!isMediaFragment(frag)||loadingFrag.sn<frag.sn)||!startFragRequested&&i==l-1)return this.emeController.selectKeySystemFormat(frag).then((keySystemFormat=>{if(!this.emeController)return;frag.setKeyFormat(keySystemFormat);const keySystem=keySystemFormatToKeySystemDomain(keySystemFormat);return keySystem?this.emeController.getKeySystemAccess([keySystem]):void 0}))}if(this.config.requireKeySystemAccessOnStart){const keySystemsInConfig=getKeySystemsForConfig(this.config);if(keySystemsInConfig.length)return this.emeController.getKeySystemAccess(keySystemsInConfig)}}return null}load(frag){return!frag.decryptdata&&frag.encrypted&&this.emeController&&this.config.emeEnabled?this.emeController.selectKeySystemFormat(frag).then((keySystemFormat=>this.loadInternal(frag,keySystemFormat))):this.loadInternal(frag)}loadInternal(frag,keySystemFormat){var _keyInfo,_keyInfo2;keySystemFormat&&frag.setKeyFormat(keySystemFormat);const decryptdata=frag.decryptdata;if(!decryptdata){const error=new Error(keySystemFormat?`Expected frag.decryptdata to be defined after setting format ${keySystemFormat}`:"Missing decryption data on fragment in onKeyLoading");return Promise.reject(this.createKeyLoadError(frag,ErrorDetails.KEY_LOAD_ERROR,error))}const uri=decryptdata.uri;if(!uri)return Promise.reject(this.createKeyLoadError(frag,ErrorDetails.KEY_LOAD_ERROR,new Error(`Invalid key URI: "${uri}"`)));let keyInfo=this.keyUriToKeyInfo[uri];if(null!=(_keyInfo=keyInfo)&&_keyInfo.decryptdata.key)return decryptdata.key=keyInfo.decryptdata.key,Promise.resolve({frag,keyInfo});var _keyInfo$mediaKeySess;if(null!=(_keyInfo2=keyInfo)&&_keyInfo2.keyLoadPromise)switch(null==(_keyInfo$mediaKeySess=keyInfo.mediaKeySessionContext)?void 0:_keyInfo$mediaKeySess.keyStatus){case void 0:case"status-pending":case"usable":case"usable-in-future":return keyInfo.keyLoadPromise.then((keyLoadedData=>(decryptdata.key=keyLoadedData.keyInfo.decryptdata.key,{frag,keyInfo})))}switch(keyInfo=this.keyUriToKeyInfo[uri]={decryptdata,keyLoadPromise:null,loader:null,mediaKeySessionContext:null},decryptdata.method){case"ISO-23001-7":case"SAMPLE-AES":case"SAMPLE-AES-CENC":case"SAMPLE-AES-CTR":return"identity"===decryptdata.keyFormat?this.loadKeyHTTP(keyInfo,frag):this.loadKeyEME(keyInfo,frag);case"AES-128":case"AES-256":case"AES-256-CTR":return this.loadKeyHTTP(keyInfo,frag);default:return Promise.reject(this.createKeyLoadError(frag,ErrorDetails.KEY_LOAD_ERROR,new Error(`Key supplied with unsupported METHOD: "${decryptdata.method}"`)))}}loadKeyEME(keyInfo,frag){const keyLoadedData={frag,keyInfo};if(this.emeController&&this.config.emeEnabled){const keySessionContextPromise=this.emeController.loadKey(keyLoadedData);if(keySessionContextPromise)return(keyInfo.keyLoadPromise=keySessionContextPromise.then((keySessionContext=>(keyInfo.mediaKeySessionContext=keySessionContext,keyLoadedData)))).catch((error=>{throw keyInfo.keyLoadPromise=null,error}))}return Promise.resolve(keyLoadedData)}loadKeyHTTP(keyInfo,frag){const config=this.config,keyLoader=new(0,config.loader)(config);return frag.keyLoader=keyInfo.loader=keyLoader,keyInfo.keyLoadPromise=new Promise(((resolve,reject)=>{const loaderContext={keyInfo,frag,responseType:"arraybuffer",url:keyInfo.decryptdata.uri},loadPolicy=config.keyLoadPolicy.default,loaderConfig={loadPolicy,timeout:loadPolicy.maxLoadTimeMs,maxRetry:0,retryDelay:0,maxRetryDelay:0},loaderCallbacks={onSuccess:(response,stats,context,networkDetails)=>{const{frag,keyInfo,url:uri}=context;if(!frag.decryptdata||keyInfo!==this.keyUriToKeyInfo[uri])return reject(this.createKeyLoadError(frag,ErrorDetails.KEY_LOAD_ERROR,new Error("after key load, decryptdata unset or changed"),networkDetails));keyInfo.decryptdata.key=frag.decryptdata.key=new Uint8Array(response.data),frag.keyLoader=null,keyInfo.loader=null,resolve({frag,keyInfo})},onError:(response,context,networkDetails,stats)=>{this.resetLoader(context),reject(this.createKeyLoadError(frag,ErrorDetails.KEY_LOAD_ERROR,new Error(`HTTP Error ${response.code} loading key ${response.text}`),networkDetails,_objectSpread2({url:loaderContext.url,data:void 0},response)))},onTimeout:(stats,context,networkDetails)=>{this.resetLoader(context),reject(this.createKeyLoadError(frag,ErrorDetails.KEY_LOAD_TIMEOUT,new Error("key loading timed out"),networkDetails))},onAbort:(stats,context,networkDetails)=>{this.resetLoader(context),reject(this.createKeyLoadError(frag,ErrorDetails.INTERNAL_ABORTED,new Error("key loading aborted"),networkDetails))}};keyLoader.load(loaderContext,loaderConfig,loaderCallbacks)}))}resetLoader(context){const{frag,keyInfo,url:uri}=context,loader=keyInfo.loader;frag.keyLoader===loader&&(frag.keyLoader=null,keyInfo.loader=null),delete this.keyUriToKeyInfo[uri],loader&&loader.destroy()}}function mapContextToLevelType(context){const{type}=context;switch(type){case PlaylistContextType_AUDIO_TRACK:return PlaylistLevelType.AUDIO;case PlaylistContextType_SUBTITLE_TRACK:return PlaylistLevelType.SUBTITLE;default:return PlaylistLevelType.MAIN}}function getResponseUrl(response,context){let url=response.url;return void 0!==url&&0!==url.indexOf("data:")||(url=context.url),url}class PlaylistLoader{constructor(hls){this.hls=void 0,this.loaders=Object.create(null),this.variableList=null,this.onManifestLoaded=this.checkAutostartLoad,this.hls=hls,this.registerListeners()}startLoad(startPosition){}stopLoad(){this.destroyInternalLoaders()}registerListeners(){const{hls}=this;hls.on(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.on(Events.LEVEL_LOADING,this.onLevelLoading,this),hls.on(Events.AUDIO_TRACK_LOADING,this.onAudioTrackLoading,this),hls.on(Events.SUBTITLE_TRACK_LOADING,this.onSubtitleTrackLoading,this),hls.on(Events.LEVELS_UPDATED,this.onLevelsUpdated,this)}unregisterListeners(){const{hls}=this;hls.off(Events.MANIFEST_LOADING,this.onManifestLoading,this),hls.off(Events.LEVEL_LOADING,this.onLevelLoading,this),hls.off(Events.AUDIO_TRACK_LOADING,this.onAudioTrackLoading,this),hls.off(Events.SUBTITLE_TRACK_LOADING,this.onSubtitleTrackLoading,this),hls.off(Events.LEVELS_UPDATED,this.onLevelsUpdated,this)}createInternalLoader(context){const config=this.hls.config,PLoader=config.pLoader,Loader=config.loader,loader=new(PLoader||Loader)(config);return this.loaders[context.type]=loader,loader}getInternalLoader(context){return this.loaders[context.type]}resetInternalLoader(contextType){this.loaders[contextType]&&delete this.loaders[contextType]}destroyInternalLoaders(){for(const contextType in this.loaders){const loader=this.loaders[contextType];loader&&loader.destroy(),this.resetInternalLoader(contextType)}}destroy(){this.variableList=null,this.unregisterListeners(),this.destroyInternalLoaders()}onManifestLoading(event,data){const{url}=data;this.variableList=null,this.load({id:null,level:0,responseType:"text",type:PlaylistContextType_MANIFEST,url,deliveryDirectives:null,levelOrTrack:null})}onLevelLoading(event,data){const{id,level,pathwayId,url,deliveryDirectives,levelInfo}=data;this.load({id,level,pathwayId,responseType:"text",type:PlaylistContextType_LEVEL,url,deliveryDirectives,levelOrTrack:levelInfo})}onAudioTrackLoading(event,data){const{id,groupId,url,deliveryDirectives,track}=data;this.load({id,groupId,level:null,responseType:"text",type:PlaylistContextType_AUDIO_TRACK,url,deliveryDirectives,levelOrTrack:track})}onSubtitleTrackLoading(event,data){const{id,groupId,url,deliveryDirectives,track}=data;this.load({id,groupId,level:null,responseType:"text",type:PlaylistContextType_SUBTITLE_TRACK,url,deliveryDirectives,levelOrTrack:track})}onLevelsUpdated(event,data){const loader=this.loaders[PlaylistContextType_LEVEL];if(loader){const context=loader.context;context&&!data.levels.some((lvl=>lvl===context.levelOrTrack))&&(loader.abort(),delete this.loaders[PlaylistContextType_LEVEL])}}load(context){var _context$deliveryDire;const config=this.hls.config;let loadPolicy,loader=this.getInternalLoader(context);if(loader){const logger=this.hls.logger,loaderContext=loader.context;if(loaderContext&&loaderContext.levelOrTrack===context.levelOrTrack&&(loaderContext.url===context.url||loaderContext.deliveryDirectives&&!context.deliveryDirectives))return void(loaderContext.url===context.url?logger.log(`[playlist-loader]: ignore ${context.url} ongoing request`):logger.log(`[playlist-loader]: ignore ${context.url} in favor of ${loaderContext.url}`));logger.log(`[playlist-loader]: aborting previous loader for type: ${context.type}`),loader.abort()}if(loadPolicy=context.type===PlaylistContextType_MANIFEST?config.manifestLoadPolicy.default:_extends({},config.playlistLoadPolicy.default,{timeoutRetry:null,errorRetry:null}),loader=this.createInternalLoader(context),isFiniteNumber(null==(_context$deliveryDire=context.deliveryDirectives)?void 0:_context$deliveryDire.part)){let levelDetails;if(context.type===PlaylistContextType_LEVEL&&null!==context.level?levelDetails=this.hls.levels[context.level].details:context.type===PlaylistContextType_AUDIO_TRACK&&null!==context.id?levelDetails=this.hls.audioTracks[context.id].details:context.type===PlaylistContextType_SUBTITLE_TRACK&&null!==context.id&&(levelDetails=this.hls.subtitleTracks[context.id].details),levelDetails){const partTarget=levelDetails.partTarget,targetDuration=levelDetails.targetduration;if(partTarget&&targetDuration){const maxLowLatencyPlaylistRefresh=1e3*Math.max(3*partTarget,.8*targetDuration);loadPolicy=_extends({},loadPolicy,{maxTimeToFirstByteMs:Math.min(maxLowLatencyPlaylistRefresh,loadPolicy.maxTimeToFirstByteMs),maxLoadTimeMs:Math.min(maxLowLatencyPlaylistRefresh,loadPolicy.maxTimeToFirstByteMs)})}}}const legacyRetryCompatibility=loadPolicy.errorRetry||loadPolicy.timeoutRetry||{},loaderConfig={loadPolicy,timeout:loadPolicy.maxLoadTimeMs,maxRetry:legacyRetryCompatibility.maxNumRetry||0,retryDelay:legacyRetryCompatibility.retryDelayMs||0,maxRetryDelay:legacyRetryCompatibility.maxRetryDelayMs||0},loaderCallbacks={onSuccess:(response,stats,context,networkDetails)=>{const loader=this.getInternalLoader(context);this.resetInternalLoader(context.type);const string=response.data;0===string.indexOf("#EXTM3U")?(stats.parsing.start=performance.now(),M3U8Parser.isMediaPlaylist(string)||context.type!==PlaylistContextType_MANIFEST?this.handleTrackOrLevelPlaylist(response,stats,context,networkDetails||null,loader):this.handleMasterPlaylist(response,stats,context,networkDetails)):this.handleManifestParsingError(response,context,new Error("no EXTM3U delimiter"),networkDetails||null,stats)},onError:(response,context,networkDetails,stats)=>{this.handleNetworkError(context,networkDetails,!1,response,stats)},onTimeout:(stats,context,networkDetails)=>{this.handleNetworkError(context,networkDetails,!0,void 0,stats)}};loader.load(context,loaderConfig,loaderCallbacks)}checkAutostartLoad(){if(!this.hls)return;const{config:{autoStartLoad,startPosition},forceStartLoad}=this.hls;(autoStartLoad||forceStartLoad)&&(this.hls.logger.log(`${autoStartLoad?"auto":"force"} startLoad with configured startPosition ${startPosition}`),this.hls.startLoad(startPosition))}handleMasterPlaylist(response,stats,context,networkDetails){const hls=this.hls,string=response.data,url=getResponseUrl(response,context),parsedResult=M3U8Parser.parseMasterPlaylist(string,url);if(parsedResult.playlistParsingError)return void this.handleManifestParsingError(response,context,parsedResult.playlistParsingError,networkDetails,stats);const{contentSteering,levels,sessionData,sessionKeys,startTimeOffset,variableList}=parsedResult;this.variableList=variableList;const{AUDIO:audioTracks=[],SUBTITLES:subtitles,"CLOSED-CAPTIONS":captions}=M3U8Parser.parseMasterPlaylistMedia(string,url,parsedResult);if(audioTracks.length){audioTracks.some((audioTrack=>!audioTrack.url))||!levels[0].audioCodec||levels[0].attrs.AUDIO||(this.hls.logger.log("[playlist-loader]: audio codec signaled in quality level, but no embedded audio track signaled, create one"),audioTracks.unshift({type:"main",name:"main",groupId:"main",default:!1,autoselect:!1,forced:!1,id:-1,attrs:new AttrList({}),bitrate:0,url:""}))}hls.trigger(Events.MANIFEST_LOADED,{levels,audioTracks,subtitles,captions,contentSteering,url,stats,networkDetails,sessionData,sessionKeys,startTimeOffset,variableList})}handleTrackOrLevelPlaylist(response,stats,context,networkDetails,loader){const hls=this.hls,{id,level,type}=context,url=getResponseUrl(response,context),levelId=isFiniteNumber(level)?level:isFiniteNumber(id)?id:0,levelType=mapContextToLevelType(context),levelDetails=M3U8Parser.parseLevelPlaylist(response.data,url,levelId,levelType,0,this.variableList);if(type===PlaylistContextType_MANIFEST){const singleLevel={attrs:new AttrList({}),bitrate:0,details:levelDetails,name:"",url};levelDetails.requestScheduled=stats.loading.start+computeReloadInterval(levelDetails,0),hls.trigger(Events.MANIFEST_LOADED,{levels:[singleLevel],audioTracks:[],url,stats,networkDetails,sessionData:null,sessionKeys:null,contentSteering:null,startTimeOffset:null,variableList:null})}stats.parsing.end=performance.now(),context.levelDetails=levelDetails,this.handlePlaylistLoaded(levelDetails,response,stats,context,networkDetails,loader)}handleManifestParsingError(response,context,error,networkDetails,stats){this.hls.trigger(Events.ERROR,{type:ErrorTypes.NETWORK_ERROR,details:ErrorDetails.MANIFEST_PARSING_ERROR,fatal:context.type===PlaylistContextType_MANIFEST,url:response.url,err:error,error,reason:error.message,response,context,networkDetails,stats})}handleNetworkError(context,networkDetails,timeout=!1,response,stats){let message=`A network ${timeout?"timeout":"error"+(response?" (status "+response.code+")":"")} occurred while loading ${context.type}`;context.type===PlaylistContextType_LEVEL?message+=`: ${context.level} id: ${context.id}`:context.type!==PlaylistContextType_AUDIO_TRACK&&context.type!==PlaylistContextType_SUBTITLE_TRACK||(message+=` id: ${context.id} group-id: "${context.groupId}"`);const error=new Error(message);this.hls.logger.warn(`[playlist-loader]: ${message}`);let details=ErrorDetails.UNKNOWN,fatal=!1;const loader=this.getInternalLoader(context);switch(context.type){case PlaylistContextType_MANIFEST:details=timeout?ErrorDetails.MANIFEST_LOAD_TIMEOUT:ErrorDetails.MANIFEST_LOAD_ERROR,fatal=!0;break;case PlaylistContextType_LEVEL:details=timeout?ErrorDetails.LEVEL_LOAD_TIMEOUT:ErrorDetails.LEVEL_LOAD_ERROR,fatal=!1;break;case PlaylistContextType_AUDIO_TRACK:details=timeout?ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT:ErrorDetails.AUDIO_TRACK_LOAD_ERROR,fatal=!1;break;case PlaylistContextType_SUBTITLE_TRACK:details=timeout?ErrorDetails.SUBTITLE_TRACK_LOAD_TIMEOUT:ErrorDetails.SUBTITLE_LOAD_ERROR,fatal=!1}loader&&this.resetInternalLoader(context.type);const errorData={type:ErrorTypes.NETWORK_ERROR,details,fatal,url:context.url,loader,context,error,networkDetails,stats};if(response){const url=(null==networkDetails?void 0:networkDetails.url)||context.url;errorData.response=_objectSpread2({url,data:void 0},response)}this.hls.trigger(Events.ERROR,errorData)}handlePlaylistLoaded(levelDetails,response,stats,context,networkDetails,loader){const hls=this.hls,{type,level,id,groupId,deliveryDirectives}=context,url=getResponseUrl(response,context),parent=mapContextToLevelType(context),levelIndex="number"==typeof context.level&&parent===PlaylistLevelType.MAIN?level:void 0;if(!levelDetails.fragments.length){const _error=levelDetails.playlistParsingError=new Error("No Segments found in Playlist");return void hls.trigger(Events.ERROR,{type:ErrorTypes.NETWORK_ERROR,details:ErrorDetails.LEVEL_EMPTY_ERROR,fatal:!1,url,error:_error,reason:_error.message,response,context,level:levelIndex,parent,networkDetails,stats})}levelDetails.targetduration||(levelDetails.playlistParsingError=new Error("Missing Target Duration"));const error=levelDetails.playlistParsingError;if(error){if(this.hls.logger.warn(`${error} ${levelDetails.url}`),!hls.config.ignorePlaylistParsingErrors)return void hls.trigger(Events.ERROR,{type:ErrorTypes.NETWORK_ERROR,details:ErrorDetails.LEVEL_PARSING_ERROR,fatal:!1,url,error,reason:error.message,response,context,level:levelIndex,parent,networkDetails,stats});levelDetails.playlistParsingError=null}switch(levelDetails.live&&loader&&(loader.getCacheAge&&(levelDetails.ageHeader=loader.getCacheAge()||0),loader.getCacheAge&&!isNaN(levelDetails.ageHeader)||(levelDetails.ageHeader=0)),type){case PlaylistContextType_MANIFEST:case PlaylistContextType_LEVEL:hls.trigger(Events.LEVEL_LOADED,{details:levelDetails,levelInfo:context.levelOrTrack||hls.levels[0],level:levelIndex||0,id:id||0,stats,networkDetails,deliveryDirectives,withoutMultiVariant:type===PlaylistContextType_MANIFEST});break;case PlaylistContextType_AUDIO_TRACK:hls.trigger(Events.AUDIO_TRACK_LOADED,{details:levelDetails,track:context.levelOrTrack,id:id||0,groupId:groupId||"",stats,networkDetails,deliveryDirectives});break;case PlaylistContextType_SUBTITLE_TRACK:hls.trigger(Events.SUBTITLE_TRACK_LOADED,{details:levelDetails,track:context.levelOrTrack,id:id||0,groupId:groupId||"",stats,networkDetails,deliveryDirectives})}}}class Hls{static get version(){return"1.6.10"}static isMSESupported(){return isMSESupported()}static isSupported(){return isSupported()}static getMediaSource(){return getMediaSource()}static get Events(){return Events}static get MetadataSchema(){return MetadataSchema}static get ErrorTypes(){return ErrorTypes}static get ErrorDetails(){return ErrorDetails}static get DefaultConfig(){return Hls.defaultConfig?Hls.defaultConfig:hlsDefaultConfig}static set DefaultConfig(defaultConfig){Hls.defaultConfig=defaultConfig}constructor(userConfig={}){this.config=void 0,this.userConfig=void 0,this.logger=void 0,this.coreComponents=void 0,this.networkControllers=void 0,this._emitter=new EventEmitter,this._autoLevelCapping=-1,this._maxHdcpLevel=null,this.abrController=void 0,this.bufferController=void 0,this.capLevelController=void 0,this.latencyController=void 0,this.levelController=void 0,this.streamController=void 0,this.audioStreamController=void 0,this.subtititleStreamController=void 0,this.audioTrackController=void 0,this.subtitleTrackController=void 0,this.interstitialsController=void 0,this.gapController=void 0,this.emeController=void 0,this.cmcdController=void 0,this._media=null,this._url=null,this._sessionId=void 0,this.triggeringException=void 0,this.started=!1;const logger=this.logger=function enableLogs(debugConfig,context,id){const newLogger=createLogger();if("object"==typeof console&&!0===debugConfig||"object"==typeof debugConfig){const keys=["debug","log","info","warn","error"];keys.forEach((key=>{newLogger[key]=getLoggerFn(key,debugConfig,id)}));try{newLogger.log(`Debug logs enabled for "${context}" in hls.js version 1.6.10`)}catch(e){return createLogger()}keys.forEach((key=>{exportedLogger[key]=getLoggerFn(key,debugConfig)}))}else _extends(exportedLogger,newLogger);return newLogger}(userConfig.debug||!1,"Hls instance",userConfig.assetPlayerId),config=this.config=function mergeConfig(defaultConfig,userConfig,logger){if((userConfig.liveSyncDurationCount||userConfig.liveMaxLatencyDurationCount)&&(userConfig.liveSyncDuration||userConfig.liveMaxLatencyDuration))throw new Error("Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration");if(void 0!==userConfig.liveMaxLatencyDurationCount&&(void 0===userConfig.liveSyncDurationCount||userConfig.liveMaxLatencyDurationCount<=userConfig.liveSyncDurationCount))throw new Error('Illegal hls.js config: "liveMaxLatencyDurationCount" must be greater than "liveSyncDurationCount"');if(void 0!==userConfig.liveMaxLatencyDuration&&(void 0===userConfig.liveSyncDuration||userConfig.liveMaxLatencyDuration<=userConfig.liveSyncDuration))throw new Error('Illegal hls.js config: "liveMaxLatencyDuration" must be greater than "liveSyncDuration"');const defaultsCopy=deepCpy(defaultConfig),deprecatedSettings=["TimeOut","MaxRetry","RetryDelay","MaxRetryTimeout"];return["manifest","level","frag"].forEach((type=>{const policyName=`${"level"===type?"playlist":type}LoadPolicy`,policyNotSet=void 0===userConfig[policyName],report=[];deprecatedSettings.forEach((setting=>{const deprecatedSetting=`${type}Loading${setting}`,value=userConfig[deprecatedSetting];if(void 0!==value&&policyNotSet){report.push(deprecatedSetting);const settings=defaultsCopy[policyName].default;switch(userConfig[policyName]={default:settings},setting){case"TimeOut":settings.maxLoadTimeMs=value,settings.maxTimeToFirstByteMs=value;break;case"MaxRetry":settings.errorRetry.maxNumRetry=value,settings.timeoutRetry.maxNumRetry=value;break;case"RetryDelay":settings.errorRetry.retryDelayMs=value,settings.timeoutRetry.retryDelayMs=value;break;case"MaxRetryTimeout":settings.errorRetry.maxRetryDelayMs=value,settings.timeoutRetry.maxRetryDelayMs=value}}})),report.length&&logger.warn(`hls.js config: "${report.join('", "')}" setting(s) are deprecated, use "${policyName}": ${stringify(userConfig[policyName])}`)})),_objectSpread2(_objectSpread2({},defaultsCopy),userConfig)}(Hls.DefaultConfig,userConfig,logger);this.userConfig=userConfig,config.progressive&&function enableStreamingMode(config,logger){const currentLoader=config.loader;currentLoader!==FetchLoader&&currentLoader!==XhrLoader?(logger.log("[config]: Custom loader detected, cannot enable progressive streaming"),config.progressive=!1):fetchSupported()&&(config.loader=FetchLoader,config.progressive=!0,config.enableSoftwareAES=!0,logger.log("[config]: Progressive streaming enabled, using FetchLoader"))}(config,logger);const{abrController:_AbrController,bufferController:_BufferController,capLevelController:_CapLevelController,errorController:_ErrorController,fpsController:_FpsController}=config,errorController=new _ErrorController(this),abrController=this.abrController=new _AbrController(this),fragmentTracker=new FragmentTracker(this),_InterstitialsController=config.interstitialsController,interstitialsController=_InterstitialsController?this.interstitialsController=new _InterstitialsController(this,Hls):null,bufferController=this.bufferController=new _BufferController(this,fragmentTracker),capLevelController=this.capLevelController=new _CapLevelController(this),fpsController=new _FpsController(this),playListLoader=new PlaylistLoader(this),_ContentSteeringController=config.contentSteeringController,contentSteering=_ContentSteeringController?new _ContentSteeringController(this):null,levelController=this.levelController=new LevelController(this,contentSteering),id3TrackController=new ID3TrackController(this),keyLoader=new KeyLoader(this.config),streamController=this.streamController=new StreamController(this,fragmentTracker,keyLoader),gapController=this.gapController=new GapController(this,fragmentTracker);capLevelController.setStreamController(streamController),fpsController.setStreamController(streamController);const networkControllers=[playListLoader,levelController,streamController];interstitialsController&&networkControllers.splice(1,0,interstitialsController),contentSteering&&networkControllers.splice(1,0,contentSteering),this.networkControllers=networkControllers;const coreComponents=[abrController,bufferController,gapController,capLevelController,fpsController,id3TrackController,fragmentTracker];this.audioTrackController=this.createController(config.audioTrackController,networkControllers);const AudioStreamControllerClass=config.audioStreamController;AudioStreamControllerClass&&networkControllers.push(this.audioStreamController=new AudioStreamControllerClass(this,fragmentTracker,keyLoader)),this.subtitleTrackController=this.createController(config.subtitleTrackController,networkControllers);const SubtitleStreamControllerClass=config.subtitleStreamController;SubtitleStreamControllerClass&&networkControllers.push(this.subtititleStreamController=new SubtitleStreamControllerClass(this,fragmentTracker,keyLoader)),this.createController(config.timelineController,coreComponents),keyLoader.emeController=this.emeController=this.createController(config.emeController,coreComponents),this.cmcdController=this.createController(config.cmcdController,coreComponents),this.latencyController=this.createController(LatencyController,coreComponents),this.coreComponents=coreComponents,networkControllers.push(errorController);const onErrorOut=errorController.onErrorOut;"function"==typeof onErrorOut&&this.on(Events.ERROR,onErrorOut,errorController),this.on(Events.MANIFEST_LOADED,playListLoader.onManifestLoaded,playListLoader)}createController(ControllerClass,components){if(ControllerClass){const controllerInstance=new ControllerClass(this);return components&&components.push(controllerInstance),controllerInstance}return null}on(event,listener,context=this){this._emitter.on(event,listener,context)}once(event,listener,context=this){this._emitter.once(event,listener,context)}removeAllListeners(event){this._emitter.removeAllListeners(event)}off(event,listener,context=this,once){this._emitter.off(event,listener,context,once)}listeners(event){return this._emitter.listeners(event)}emit(event,name,eventObject){return this._emitter.emit(event,name,eventObject)}trigger(event,eventObject){if(this.config.debug)return this.emit(event,event,eventObject);try{return this.emit(event,event,eventObject)}catch(error){if(this.logger.error("An internal error happened while handling event "+event+'. Error message: "'+error.message+'". Here is a stacktrace:',error),!this.triggeringException){this.triggeringException=!0;const fatal=event===Events.ERROR;this.trigger(Events.ERROR,{type:ErrorTypes.OTHER_ERROR,details:ErrorDetails.INTERNAL_EXCEPTION,fatal,event,error}),this.triggeringException=!1}}return!1}listenerCount(event){return this._emitter.listenerCount(event)}destroy(){this.logger.log("destroy"),this.trigger(Events.DESTROYING,void 0),this.detachMedia(),this.removeAllListeners(),this._autoLevelCapping=-1,this._url=null,this.networkControllers.forEach((component=>component.destroy())),this.networkControllers.length=0,this.coreComponents.forEach((component=>component.destroy())),this.coreComponents.length=0;const config=this.config;config.xhrSetup=config.fetchSetup=void 0,this.userConfig=null}attachMedia(data){if(!data||"media"in data&&!data.media){const error=new Error(`attachMedia failed: invalid argument (${data})`);return void this.trigger(Events.ERROR,{type:ErrorTypes.OTHER_ERROR,details:ErrorDetails.ATTACH_MEDIA_ERROR,fatal:!0,error})}this.logger.log("attachMedia"),this._media&&(this.logger.warn("media must be detached before attaching"),this.detachMedia());const attachMediaSource="media"in data,media=attachMediaSource?data.media:data,attachingData=attachMediaSource?data:{media};this._media=media,this.trigger(Events.MEDIA_ATTACHING,attachingData)}detachMedia(){this.logger.log("detachMedia"),this.trigger(Events.MEDIA_DETACHING,{}),this._media=null}transferMedia(){this._media=null;const transferMedia=this.bufferController.transferMedia();return this.trigger(Events.MEDIA_DETACHING,{transferMedia}),transferMedia}loadSource(url){this.stopLoad();const media=this.media,loadedSource=this._url,loadingSource=this._url=urlToolkitExports.buildAbsoluteURL(self.location.href,url,{alwaysNormalize:!0});this._autoLevelCapping=-1,this._maxHdcpLevel=null,this.logger.log(`loadSource:${loadingSource}`),media&&loadedSource&&(loadedSource!==loadingSource||this.bufferController.hasSourceTypes())&&(this.detachMedia(),this.attachMedia(media)),this.trigger(Events.MANIFEST_LOADING,{url})}get url(){return this._url}get hasEnoughToStart(){return this.streamController.hasEnoughToStart}get startPosition(){return this.streamController.startPositionValue}startLoad(startPosition=-1,skipSeekToStartPosition){this.logger.log(`startLoad(${startPosition+(skipSeekToStartPosition?", <skip seek to start>":"")})`),this.started=!0,this.resumeBuffering();for(let i=0;i<this.networkControllers.length&&(this.networkControllers[i].startLoad(startPosition,skipSeekToStartPosition),this.started&&this.networkControllers);i++);}stopLoad(){this.logger.log("stopLoad"),this.started=!1;for(let i=0;i<this.networkControllers.length&&(this.networkControllers[i].stopLoad(),!this.started&&this.networkControllers);i++);}get loadingEnabled(){return this.started}get bufferingEnabled(){return this.streamController.bufferingEnabled}resumeBuffering(){this.bufferingEnabled||(this.logger.log("resume buffering"),this.networkControllers.forEach((controller=>{controller.resumeBuffering&&controller.resumeBuffering()})))}pauseBuffering(){this.bufferingEnabled&&(this.logger.log("pause buffering"),this.networkControllers.forEach((controller=>{controller.pauseBuffering&&controller.pauseBuffering()})))}get inFlightFragments(){const inFlightData={[PlaylistLevelType.MAIN]:this.streamController.inFlightFrag};return this.audioStreamController&&(inFlightData[PlaylistLevelType.AUDIO]=this.audioStreamController.inFlightFrag),this.subtititleStreamController&&(inFlightData[PlaylistLevelType.SUBTITLE]=this.subtititleStreamController.inFlightFrag),inFlightData}swapAudioCodec(){this.logger.log("swapAudioCodec"),this.streamController.swapAudioCodec()}recoverMediaError(){this.logger.log("recoverMediaError");const media=this._media,time=null==media?void 0:media.currentTime;this.detachMedia(),media&&(this.attachMedia(media),time&&this.startLoad(time))}removeLevel(levelIndex){this.levelController.removeLevel(levelIndex)}get sessionId(){let _sessionId=this._sessionId;return _sessionId||(_sessionId=this._sessionId=function uuid(){try{return crypto.randomUUID()}catch(error){try{const url=URL.createObjectURL(new Blob),uuid=url.toString();return URL.revokeObjectURL(url),uuid.slice(uuid.lastIndexOf("/")+1)}catch(error){let dt=(new Date).getTime();return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(c=>{const r=(dt+16*Math.random())%16|0;return dt=Math.floor(dt/16),("x"==c?r:3&r|8).toString(16)}))}}}()),_sessionId}get levels(){const levels=this.levelController.levels;return levels||[]}get latestLevelDetails(){return this.streamController.getLevelDetails()||null}get loadLevelObj(){return this.levelController.loadLevelObj}get currentLevel(){return this.streamController.currentLevel}set currentLevel(newLevel){this.logger.log(`set currentLevel:${newLevel}`),this.levelController.manualLevel=newLevel,this.streamController.immediateLevelSwitch()}get nextLevel(){return this.streamController.nextLevel}set nextLevel(newLevel){this.logger.log(`set nextLevel:${newLevel}`),this.levelController.manualLevel=newLevel,this.streamController.nextLevelSwitch()}get loadLevel(){return this.levelController.level}set loadLevel(newLevel){this.logger.log(`set loadLevel:${newLevel}`),this.levelController.manualLevel=newLevel}get nextLoadLevel(){return this.levelController.nextLoadLevel}set nextLoadLevel(level){this.levelController.nextLoadLevel=level}get firstLevel(){return Math.max(this.levelController.firstLevel,this.minAutoLevel)}set firstLevel(newLevel){this.logger.log(`set firstLevel:${newLevel}`),this.levelController.firstLevel=newLevel}get startLevel(){const startLevel=this.levelController.startLevel;return-1===startLevel&&this.abrController.forcedAutoLevel>-1?this.abrController.forcedAutoLevel:startLevel}set startLevel(newLevel){this.logger.log(`set startLevel:${newLevel}`),-1!==newLevel&&(newLevel=Math.max(newLevel,this.minAutoLevel)),this.levelController.startLevel=newLevel}get capLevelToPlayerSize(){return this.config.capLevelToPlayerSize}set capLevelToPlayerSize(shouldStartCapping){const newCapLevelToPlayerSize=!!shouldStartCapping;newCapLevelToPlayerSize!==this.config.capLevelToPlayerSize&&(newCapLevelToPlayerSize?this.capLevelController.startCapping():(this.capLevelController.stopCapping(),this.autoLevelCapping=-1,this.streamController.nextLevelSwitch()),this.config.capLevelToPlayerSize=newCapLevelToPlayerSize)}get autoLevelCapping(){return this._autoLevelCapping}get bandwidthEstimate(){const{bwEstimator}=this.abrController;return bwEstimator?bwEstimator.getEstimate():NaN}set bandwidthEstimate(abrEwmaDefaultEstimate){this.abrController.resetEstimator(abrEwmaDefaultEstimate)}get abrEwmaDefaultEstimate(){const{bwEstimator}=this.abrController;return bwEstimator?bwEstimator.defaultEstimate:NaN}get ttfbEstimate(){const{bwEstimator}=this.abrController;return bwEstimator?bwEstimator.getEstimateTTFB():NaN}set autoLevelCapping(newLevel){this._autoLevelCapping!==newLevel&&(this.logger.log(`set autoLevelCapping:${newLevel}`),this._autoLevelCapping=newLevel,this.levelController.checkMaxAutoUpdated())}get maxHdcpLevel(){return this._maxHdcpLevel}set maxHdcpLevel(value){(function isHdcpLevel(value){return HdcpLevels.indexOf(value)>-1})(value)&&this._maxHdcpLevel!==value&&(this._maxHdcpLevel=value,this.levelController.checkMaxAutoUpdated())}get autoLevelEnabled(){return-1===this.levelController.manualLevel}get manualLevel(){return this.levelController.manualLevel}get minAutoLevel(){const{levels,config:{minAutoBitrate}}=this;if(!levels)return 0;const len=levels.length;for(let i=0;i<len;i++)if(levels[i].maxBitrate>=minAutoBitrate)return i;return 0}get maxAutoLevel(){const{levels,autoLevelCapping,maxHdcpLevel}=this;let maxAutoLevel;if(maxAutoLevel=-1===autoLevelCapping&&null!=levels&&levels.length?levels.length-1:autoLevelCapping,maxHdcpLevel)for(let i=maxAutoLevel;i--;){const hdcpLevel=levels[i].attrs["HDCP-LEVEL"];if(hdcpLevel&&hdcpLevel<=maxHdcpLevel)return i}return maxAutoLevel}get firstAutoLevel(){return this.abrController.firstAutoLevel}get nextAutoLevel(){return this.abrController.nextAutoLevel}set nextAutoLevel(nextLevel){this.abrController.nextAutoLevel=nextLevel}get playingDate(){return this.streamController.currentProgramDateTime}get mainForwardBufferInfo(){return this.streamController.getMainFwdBufferInfo()}get maxBufferLength(){return this.streamController.maxBufferLength}setAudioOption(audioOption){var _this$audioTrackContr;return(null==(_this$audioTrackContr=this.audioTrackController)?void 0:_this$audioTrackContr.setAudioOption(audioOption))||null}setSubtitleOption(subtitleOption){var _this$subtitleTrackCo;return(null==(_this$subtitleTrackCo=this.subtitleTrackController)?void 0:_this$subtitleTrackCo.setSubtitleOption(subtitleOption))||null}get allAudioTracks(){const audioTrackController=this.audioTrackController;return audioTrackController?audioTrackController.allAudioTracks:[]}get audioTracks(){const audioTrackController=this.audioTrackController;return audioTrackController?audioTrackController.audioTracks:[]}get audioTrack(){const audioTrackController=this.audioTrackController;return audioTrackController?audioTrackController.audioTrack:-1}set audioTrack(audioTrackId){const audioTrackController=this.audioTrackController;audioTrackController&&(audioTrackController.audioTrack=audioTrackId)}get allSubtitleTracks(){const subtitleTrackController=this.subtitleTrackController;return subtitleTrackController?subtitleTrackController.allSubtitleTracks:[]}get subtitleTracks(){const subtitleTrackController=this.subtitleTrackController;return subtitleTrackController?subtitleTrackController.subtitleTracks:[]}get subtitleTrack(){const subtitleTrackController=this.subtitleTrackController;return subtitleTrackController?subtitleTrackController.subtitleTrack:-1}get media(){return this._media}set subtitleTrack(subtitleTrackId){const subtitleTrackController=this.subtitleTrackController;subtitleTrackController&&(subtitleTrackController.subtitleTrack=subtitleTrackId)}get subtitleDisplay(){const subtitleTrackController=this.subtitleTrackController;return!!subtitleTrackController&&subtitleTrackController.subtitleDisplay}set subtitleDisplay(value){const subtitleTrackController=this.subtitleTrackController;subtitleTrackController&&(subtitleTrackController.subtitleDisplay=value)}get lowLatencyMode(){return this.config.lowLatencyMode}set lowLatencyMode(mode){this.config.lowLatencyMode=mode}get liveSyncPosition(){return this.latencyController.liveSyncPosition}get latency(){return this.latencyController.latency}get maxLatency(){return this.latencyController.maxLatency}get targetLatency(){return this.latencyController.targetLatency}set targetLatency(latency){this.latencyController.targetLatency=latency}get drift(){return this.latencyController.drift}get forceStartLoad(){return this.streamController.forceStartLoad}get pathways(){return this.levelController.pathways}get pathwayPriority(){return this.levelController.pathwayPriority}set pathwayPriority(pathwayPriority){this.levelController.pathwayPriority=pathwayPriority}get bufferedToEnd(){var _this$bufferControlle;return!(null==(_this$bufferControlle=this.bufferController)||!_this$bufferControlle.bufferedToEnd)}get interstitialsManager(){var _this$interstitialsCo;return(null==(_this$interstitialsCo=this.interstitialsController)?void 0:_this$interstitialsCo.interstitialsManager)||null}getMediaDecodingInfo(level,audioTracks=this.allAudioTracks){return getMediaDecodingInfoPromise(level,getAudioTracksByGroup(audioTracks),navigator.mediaCapabilities)}}Hls.defaultConfig=void 0}}]);