(self.webpackChunkstorybook_app=self.webpackChunkstorybook_app||[]).push([[66344],{"../../node_modules/@tamagui/toast/dist/cjs/Toast.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{var mod,__create=Object.create,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},Toast_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(Toast_exports,{Toast:()=>Toast2,ToastProvider:()=>import_ToastProvider.ToastProvider,ToastViewport:()=>import_ToastViewport.ToastViewport,useToast:()=>import_ToastImperative.useToast,useToastController:()=>import_ToastImperative.useToastController,useToastState:()=>import_ToastImperative.useToastState}),module.exports=(mod=Toast_exports,__copyProps(__defProp({},"__esModule",{value:!0}),mod));var import_animate_presence=__webpack_require__("../../node_modules/@tamagui/animate-presence/dist/cjs/index.cjs"),import_core=__webpack_require__("../../node_modules/@tamagui/core/dist/cjs/index.cjs"),import_helpers=__webpack_require__("../../node_modules/@tamagui/helpers/dist/cjs/index.cjs"),import_stacks=__webpack_require__("../../node_modules/@tamagui/stacks/dist/cjs/index.cjs"),import_text=__webpack_require__("../../node_modules/@tamagui/text/dist/cjs/index.cjs"),import_use_controllable_state=__webpack_require__("../../node_modules/@tamagui/use-controllable-state/dist/cjs/index.cjs"),React=((mod,isNodeMode,target)=>(target=null!=mod?__create(__getProtoOf(mod)):{},__copyProps(!isNodeMode&&mod&&mod.__esModule?target:__defProp(target,"default",{value:mod,enumerable:!0}),mod)))(__webpack_require__("../../node_modules/next/dist/compiled/react/index.js")),import_ToastAnnounce=__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/ToastAnnounce.cjs"),import_ToastImperative=__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/ToastImperative.cjs"),import_ToastImpl=__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/ToastImpl.cjs"),import_ToastProvider=__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/ToastProvider.cjs"),import_ToastViewport=__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/ToastViewport.cjs"),import_jsx_runtime=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js");const ToastTitle=(0,import_core.styled)(import_text.SizableText,{name:"ToastTitle",variants:{unstyled:{false:{color:"$color",size:"$4"}}},defaultVariants:{unstyled:"1"==={}.TAMAGUI_HEADLESS}}),ToastDescription=(0,import_core.styled)(import_text.SizableText,{name:"ToastDescription",variants:{unstyled:{false:{color:"$color11",size:"$1"}}},defaultVariants:{unstyled:"1"==={}.TAMAGUI_HEADLESS}}),ToastAction=React.forwardRef((function(props,forwardedRef){const{altText,...actionProps}=props;return altText?(0,import_jsx_runtime.jsx)(import_ToastAnnounce.ToastAnnounceExclude,{altText,asChild:!0,children:(0,import_jsx_runtime.jsx)(ToastClose,{...actionProps,ref:forwardedRef})}):null}));ToastAction.propTypes={altText:props=>props.altText?null:new Error("Missing prop `altText` expected on `ToastAction`")};const ToastCloseFrame=(0,import_core.styled)(import_stacks.ThemeableStack,{name:"ToastClose",tag:"button"}),ToastClose=React.forwardRef((function(props,forwardedRef){const{scope,...closeProps}=props,interactiveContext=(0,import_ToastImpl.useToastInteractiveContext)(scope);return(0,import_jsx_runtime.jsx)(import_ToastAnnounce.ToastAnnounceExclude,{asChild:!0,children:(0,import_jsx_runtime.jsx)(ToastCloseFrame,{accessibilityLabel:"Dialog Close",...closeProps,ref:forwardedRef,onPress:(0,import_helpers.composeEventHandlers)(props.onPress,interactiveContext.onClose)})})})),ToastComponent=import_ToastImpl.ToastImplFrame.styleable((function(props,forwardedRef){const{forceMount,open:openProp,defaultOpen,onOpenChange,...toastProps}=props,[open,setOpen]=(0,import_use_controllable_state.useControllableState)({prop:openProp,defaultProp:defaultOpen??!0,onChange:onOpenChange,strategy:"most-recent-wins"}),currentToast=(0,import_ToastImperative.useToastState)(),{hide}=(0,import_ToastImperative.useToastController)(),id=React.useId(),onPause=(0,import_core.useEvent)(props.onPause),onResume=(0,import_core.useEvent)(props.onResume),isHide=!0===currentToast?.hide;return(0,import_jsx_runtime.jsx)(import_animate_presence.AnimatePresence,{children:!forceMount&&!open||isHide?null:(0,import_jsx_runtime.jsx)(import_ToastImpl.ToastImpl,{id,open,...toastProps,ref:forwardedRef,onClose:()=>{setOpen(!1),hide()},onPause,onResume,onSwipeEnd:(0,import_helpers.composeEventHandlers)(props.onSwipeEnd,(event=>{setOpen(!1)}))})},id)})),Toast2=(0,import_helpers.withStaticProperties)(ToastComponent,{Title:ToastTitle,Description:ToastDescription,Action:ToastAction,Close:ToastClose})},"../../node_modules/@tamagui/toast/dist/cjs/ToastAnnounce.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{var mod,__create=Object.create,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},ToastAnnounce_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(ToastAnnounce_exports,{ToastAnnounce:()=>ToastAnnounce,ToastAnnounceExclude:()=>ToastAnnounceExclude}),module.exports=(mod=ToastAnnounce_exports,__copyProps(__defProp({},"__esModule",{value:!0}),mod));var import_constants=__webpack_require__("../../node_modules/@tamagui/constants/dist/cjs/index.cjs"),import_core=__webpack_require__("../../node_modules/@tamagui/core/dist/cjs/index.cjs"),import_portal=__webpack_require__("../../node_modules/@tamagui/portal/dist/cjs/index.cjs"),import_start_transition=__webpack_require__("../../node_modules/@tamagui/start-transition/dist/cjs/index.cjs"),import_visually_hidden=__webpack_require__("../../node_modules/@tamagui/visually-hidden/dist/cjs/index.cjs"),React=((mod,isNodeMode,target)=>(target=null!=mod?__create(__getProtoOf(mod)):{},__copyProps(!isNodeMode&&mod&&mod.__esModule?target:__defProp(target,"default",{value:mod,enumerable:!0}),mod)))(__webpack_require__("../../node_modules/next/dist/compiled/react/index.js")),import_ToastProvider=__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/ToastProvider.cjs"),import_jsx_runtime=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js");const ToastAnnounceExcludeFrame=(0,import_core.styled)(import_core.Stack,{name:"ToastAnnounceExclude"}),ToastAnnounceExclude=React.forwardRef(((props,forwardedRef)=>{const{altText,...announceExcludeProps}=props;return(0,import_jsx_runtime.jsx)(ToastAnnounceExcludeFrame,{"data-toast-announce-exclude":"","data-toast-announce-alt":altText||void 0,...announceExcludeProps,ref:forwardedRef})})),ToastAnnounce=props=>{const{scope,children,...announceProps}=props,context=(0,import_ToastProvider.useToastProviderContext)(scope),[renderAnnounceText,setRenderAnnounceText]=React.useState(!1),[isAnnounced,setIsAnnounced]=React.useState(!1);return function useNextFrame(callback=(()=>{})){const fn=(0,import_core.useEvent)(callback);(0,import_constants.useIsomorphicLayoutEffect)((()=>{let raf1=0,raf2=0;return raf1=requestAnimationFrame((()=>{raf2=requestAnimationFrame(fn)})),()=>{cancelAnimationFrame(raf1),cancelAnimationFrame(raf2)}}),[fn])}((()=>{(0,import_start_transition.startTransition)((()=>{setRenderAnnounceText(!0)}))})),React.useEffect((()=>{const timer=setTimeout((()=>setIsAnnounced(!0)),1e3);return()=>clearTimeout(timer)}),[]),isAnnounced?null:(0,import_jsx_runtime.jsx)(import_portal.Portal,{children:(0,import_jsx_runtime.jsx)(import_visually_hidden.VisuallyHidden,{...announceProps,children:renderAnnounceText&&(0,import_jsx_runtime.jsxs)(import_core.Text,{children:[context.label," ",children]})})})}},"../../node_modules/@tamagui/toast/dist/cjs/ToastImperative.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{var mod,__create=Object.create,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},ToastImperative_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(ToastImperative_exports,{ToastImperativeProvider:()=>ToastImperativeProvider,useToast:()=>useToast,useToastController:()=>useToastController,useToastState:()=>useToastState}),module.exports=(mod=ToastImperative_exports,__copyProps(__defProp({},"__esModule",{value:!0}),mod));var import_core=__webpack_require__("../../node_modules/@tamagui/core/dist/cjs/index.cjs"),import_react=((mod,isNodeMode,target)=>(target=null!=mod?__create(__getProtoOf(mod)):{},__copyProps(!isNodeMode&&mod&&mod.__esModule?target:__defProp(target,"default",{value:mod,enumerable:!0}),mod)))(__webpack_require__("../../node_modules/next/dist/compiled/react/index.js")),import_createNativeToast=__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/createNativeToast.cjs"),import_jsx_runtime=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js");const ToastContext=import_react.default.createContext({}),ToastCurrentContext=import_react.default.createContext(null),useToastController=()=>import_react.default.useContext(ToastContext),useToastState=()=>import_react.default.useContext(ToastCurrentContext),useToast=()=>({...useToastController(),currentToast:useToastState()}),ToastImperativeProvider=({children,options})=>{const counterRef=import_react.default.useRef(0),[toast,setToast]=import_react.default.useState(null),[lastNativeToastRef,setLastNativeToastRef]=import_react.default.useState(null),show=import_react.default.useCallback(((title,showOptions)=>{const native=showOptions?.native??options.native,isWebNative=Array.isArray(native)?native.includes("web"):"web"===native,isMobileNative=Array.isArray(native)?native.includes("mobile"):"mobile"===native,isAndroidNative=isMobileNative||(Array.isArray(native)?native.includes("android"):"android"===native),isIosNative=isMobileNative||(Array.isArray(native)?native.includes("ios"):"ios"===native),isHandledNatively=!0===native||import_core.isWeb&&isWebNative||!import_core.isWeb&&isMobileNative||import_core.isAndroid&&isAndroidNative||import_core.isIos&&isIosNative;if(isHandledNatively){const nativeToastResult=(0,import_createNativeToast.createNativeToast)(title,showOptions??{});"object"==typeof nativeToastResult&&nativeToastResult.nativeToastRef&&setLastNativeToastRef(nativeToastResult.nativeToastRef)}return counterRef.current++,setToast({...showOptions?.customData,...showOptions,viewportName:showOptions?.viewportName??"default",title,id:counterRef.current.toString(),isHandledNatively}),!0}),[setToast,JSON.stringify(options.native||null)]),hide=import_react.default.useCallback((()=>{lastNativeToastRef?.close(),setToast((prev=>prev?{...prev,hide:!0}:null)),setTimeout((()=>{setToast(null)}),100)}),[setToast,lastNativeToastRef]),contextValue=import_react.default.useMemo((()=>({show,hide,nativeToast:lastNativeToastRef,options})),[show,hide,lastNativeToastRef,JSON.stringify(options||null)]);return(0,import_jsx_runtime.jsx)(ToastContext.Provider,{value:contextValue,children:(0,import_jsx_runtime.jsx)(ToastCurrentContext.Provider,{value:toast,children})})}},"../../node_modules/@tamagui/toast/dist/cjs/ToastImpl.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{var mod,__create=Object.create,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},ToastImpl_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(ToastImpl_exports,{ToastImpl:()=>ToastImpl,ToastImplFrame:()=>ToastImplFrame,useToastInteractiveContext:()=>useToastInteractiveContext}),module.exports=(mod=ToastImpl_exports,__copyProps(__defProp({},"__esModule",{value:!0}),mod));var import_animate_presence=__webpack_require__("../../node_modules/@tamagui/animate-presence/dist/cjs/index.cjs"),import_compose_refs=__webpack_require__("../../node_modules/@tamagui/compose-refs/dist/cjs/index.cjs"),import_constants=__webpack_require__("../../node_modules/@tamagui/constants/dist/cjs/index.cjs"),import_core=__webpack_require__("../../node_modules/@tamagui/core/dist/cjs/index.cjs"),import_dismissable=__webpack_require__("../../node_modules/@tamagui/dismissable/dist/cjs/index.cjs"),import_helpers=__webpack_require__("../../node_modules/@tamagui/helpers/dist/cjs/index.cjs"),import_portal=__webpack_require__("../../node_modules/@tamagui/portal/dist/cjs/index.cjs"),import_stacks=__webpack_require__("../../node_modules/@tamagui/stacks/dist/cjs/index.cjs"),React=((mod,isNodeMode,target)=>(target=null!=mod?__create(__getProtoOf(mod)):{},__copyProps(!isNodeMode&&mod&&mod.__esModule?target:__defProp(target,"default",{value:mod,enumerable:!0}),mod)))(__webpack_require__("../../node_modules/next/dist/compiled/react/index.js")),import_react_native=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),import_constants2=__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/constants.cjs"),import_ToastAnnounce=__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/ToastAnnounce.cjs"),import_ToastProvider=__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/ToastProvider.cjs"),import_ToastViewport=__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/ToastViewport.cjs"),import_jsx_runtime=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js");const ToastImplFrame=(0,import_core.styled)(import_stacks.ThemeableStack,{name:"ToastImpl",focusable:!0,variants:{unstyled:{false:{focusStyle:{outlineStyle:"solid",outlineWidth:2,outlineColor:"$outlineColor"},backgroundColor:"$color6",borderRadius:"$10",paddingHorizontal:"$5",paddingVertical:"$2",marginHorizontal:"auto",marginVertical:"$1"}}},defaultVariants:{unstyled:"1"==={}.TAMAGUI_HEADLESS}}),{Provider:ToastInteractiveProvider,useStyledContext:useToastInteractiveContext}=(0,import_core.createStyledContext)({onClose(){}}),ToastImpl=React.forwardRef(((props,forwardedRef)=>{const{scope,type="foreground",duration:durationProp,open,onClose,onEscapeKeyDown,onPause,onResume,onSwipeStart,onSwipeMove,onSwipeCancel,onSwipeEnd,viewportName="default",...toastProps}=props,isPresent=(0,import_animate_presence.useIsPresent)(),context=(0,import_ToastProvider.useToastProviderContext)(scope),[node,setNode]=React.useState(null),composedRefs=(0,import_compose_refs.useComposedRefs)(forwardedRef,setNode),duration=durationProp||context.duration,closeTimerStartTimeRef=React.useRef(0),closeTimerRemainingTimeRef=React.useRef(duration),closeTimerRef=React.useRef(0),{onToastAdd,onToastRemove}=context,viewport=React.useMemo((()=>context.viewports[viewportName]),[context.viewports,viewportName]),handleClose=(0,import_core.useEvent)((()=>{isPresent&&(import_constants.isWeb&&node?.contains(document.activeElement)&&viewport?.focus(),onClose())})),startTimer=React.useCallback((duration2=>{!duration2||duration2===Number.POSITIVE_INFINITY||(clearTimeout(closeTimerRef.current),closeTimerStartTimeRef.current=(new Date).getTime(),closeTimerRef.current=setTimeout(handleClose,duration2))}),[handleClose]),handleResume=React.useCallback((()=>{startTimer(closeTimerRemainingTimeRef.current),onResume?.()}),[onResume,startTimer]),handlePause=React.useCallback((()=>{const elapsedTime=(new Date).getTime()-closeTimerStartTimeRef.current;closeTimerRemainingTimeRef.current=closeTimerRemainingTimeRef.current-elapsedTime,window.clearTimeout(closeTimerRef.current),onPause?.()}),[onPause]);React.useEffect((()=>{if(import_constants.isWeb&&viewport)return viewport.addEventListener(import_ToastViewport.VIEWPORT_PAUSE,handlePause),viewport.addEventListener(import_ToastViewport.VIEWPORT_RESUME,handleResume),()=>{viewport.removeEventListener(import_ToastViewport.VIEWPORT_PAUSE,handlePause),viewport.removeEventListener(import_ToastViewport.VIEWPORT_RESUME,handleResume)}}),[viewport,duration,onPause,onResume,startTimer]),React.useEffect((()=>{open&&!context.isClosePausedRef.current&&startTimer(duration)}),[open,duration,context.isClosePausedRef,startTimer]),React.useEffect((()=>(onToastAdd(),()=>onToastRemove())),[onToastAdd,onToastRemove]);const announceTextContent=React.useMemo((()=>import_constants.isWeb&&node?getAnnounceTextContent(node):null),[node]),isHorizontalSwipe=["left","right","horizontal"].includes(context.swipeDirection),{animationDriver}=(0,import_core.useConfiguration)();if(!animationDriver)throw new Error("Must set animations in tamagui.config.ts");const{useAnimatedNumber,useAnimatedNumberStyle}=animationDriver,animatedNumber=useAnimatedNumber(0),AnimatedView=animationDriver.NumberView??animationDriver.View??import_core.Stack,animatedStyles=useAnimatedNumberStyle(animatedNumber,(val=>({transform:[isHorizontalSwipe?{translateX:val}:{translateY:val}]}))),panResponder=React.useMemo((()=>import_react_native.PanResponder.create({onMoveShouldSetPanResponder:(e,gesture)=>!!shouldGrantGestureMove(context.swipeDirection,gesture)&&(onSwipeStart?.(e),!0),onPanResponderGrant:e=>{import_constants.isWeb||handlePause?.()},onPanResponderMove:(e,gesture)=>{const{x,y}=getGestureDistance(context.swipeDirection,gesture),delta={x,y};animatedNumber.setValue(isHorizontalSwipe?x:y,{type:"direct"}),isDeltaInDirection(delta,context.swipeDirection,context.swipeThreshold)&&onSwipeEnd?.(e),onSwipeMove?.(e)},onPanResponderEnd:(e,{dx,dy})=>{isDeltaInDirection({x:dx,y:dy},context.swipeDirection,context.swipeThreshold)||(import_constants.isWeb||handleResume?.(),onSwipeCancel?.(e),animatedNumber.setValue(0,{type:"spring"}))}})),[handlePause,handleResume]),themeName=(0,import_core.useThemeName)();return(0,import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment,{children:[announceTextContent&&(0,import_jsx_runtime.jsx)(import_ToastAnnounce.ToastAnnounce,{scope,role:"status","aria-live":"foreground"===type?"assertive":"polite","aria-atomic":!0,children:announceTextContent}),(0,import_jsx_runtime.jsx)(import_portal.PortalItem,{hostName:viewportName??"default",children:(0,import_jsx_runtime.jsx)(ToastInteractiveProvider,{scope,onClose:()=>{handleClose()},children:(0,import_jsx_runtime.jsx)(import_dismissable.Dismissable,{onEscapeKeyDown:(0,import_helpers.composeEventHandlers)(onEscapeKeyDown,(()=>{context.isFocusedToastEscapeKeyDownRef.current||handleClose(),context.isFocusedToastEscapeKeyDownRef.current=!1})),children:(0,import_jsx_runtime.jsx)(import_core.Theme,{contain:!0,forceClassName:!0,name:themeName,children:(0,import_jsx_runtime.jsx)(AnimatedView,{...panResponder?.panHandlers,style:[{margin:"auto"},animatedStyles],children:(0,import_jsx_runtime.jsx)(import_ToastProvider.Collection.ItemSlot,{scope:context.toastScope,children:(0,import_jsx_runtime.jsx)(ToastImplFrame,{role:"status","aria-live":"off","aria-atomic":!0,"data-state":open?"open":"closed","data-swipe-direction":context.swipeDirection,pointerEvents:"auto",touchAction:"none",userSelect:"none",...toastProps,ref:composedRefs,...import_constants.isWeb&&{onKeyDown:(0,import_helpers.composeEventHandlers)(props.onKeyDown,(event=>{"Escape"===event.key&&(onEscapeKeyDown?.(event),onEscapeKeyDown?.(event),event.defaultPrevented||(context.isFocusedToastEscapeKeyDownRef.current=!0,handleClose()))}))}})})})})})},props.id)})]})}));ToastImpl.propTypes={type(props){if(props.type&&!["foreground","background"].includes(props.type)){const error=`Invalid prop \`type\` supplied to \`${import_constants2.TOAST_NAME}\`. Expected \`foreground | background\`.`;return new Error(error)}return null}};const isDeltaInDirection=(delta,direction,threshold=0)=>{const deltaX=Math.abs(delta.x),deltaY=Math.abs(delta.y),isDeltaX=deltaX>deltaY;return"left"===direction||"right"===direction||"horizontal"===direction?isDeltaX&&deltaX>threshold:!isDeltaX&&deltaY>threshold};function getAnnounceTextContent(container){if(!import_constants.isWeb)return"";const textContent=[];return Array.from(container.childNodes).forEach((node=>{if(node.nodeType===node.TEXT_NODE&&node.textContent&&textContent.push(node.textContent),function isHTMLElement(node){return node.nodeType===node.ELEMENT_NODE}(node)){const isHidden=node.ariaHidden||node.hidden||"none"===node.style.display,isExcluded=""===node.dataset.toastAnnounceExclude;if(!isHidden)if(isExcluded){const altText=node.dataset.toastAnnounceAlt;altText&&textContent.push(altText)}else textContent.push(...getAnnounceTextContent(node))}})),textContent}const shouldGrantGestureMove=(dir,{dx,dy})=>("horizontal"===dir||"left"===dir)&&dx<-10||("horizontal"===dir||"right"===dir)&&dx>10||("vertical"===dir||"up"===dir)&&dy>-10||("vertical"===dir||"down"===dir)&&dy<10,getGestureDistance=(dir,{dx,dy})=>{let y=0,x=0;return"horizontal"===dir?x=dx:"left"===dir?x=Math.min(0,dx):"right"===dir?x=Math.max(0,dx):"vertical"===dir?y=dy:"up"===dir?y=Math.min(0,dy):"down"===dir&&(y=Math.max(0,dy)),{x,y}}},"../../node_modules/@tamagui/toast/dist/cjs/ToastPortal.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{var mod,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,ToastPortal_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(ToastPortal_exports,{ToastPortal:()=>ToastPortal}),module.exports=(mod=ToastPortal_exports,((to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to})(__defProp({},"__esModule",{value:!0}),mod));var import_portal=__webpack_require__("../../node_modules/@tamagui/portal/dist/cjs/index.cjs"),import_react_native=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),import_ToastProvider=__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/ToastProvider.cjs"),import_jsx_runtime=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js");function ToastPortal(props){const{context,children,zIndex}=props;let content=children;return("android"===import_react_native.Platform.OS||"ios"===import_react_native.Platform.OS)&&(content=(0,import_jsx_runtime.jsx)(import_ToastProvider.ReprogapateToastProvider,{context,children})),(0,import_jsx_runtime.jsx)(import_portal.Portal,{zIndex:zIndex||Number.MAX_SAFE_INTEGER,children:content})}},"../../node_modules/@tamagui/toast/dist/cjs/ToastProvider.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{var mod,__create=Object.create,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},ToastProvider_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(ToastProvider_exports,{Collection:()=>Collection,ReprogapateToastProvider:()=>ReprogapateToastProvider,ToastProvider:()=>ToastProvider,useCollection:()=>useCollection,useToastProviderContext:()=>useToastProviderContext}),module.exports=(mod=ToastProvider_exports,__copyProps(__defProp({},"__esModule",{value:!0}),mod));var import_collection=__webpack_require__("../../node_modules/@tamagui/collection/dist/cjs/index.cjs"),import_core=__webpack_require__("../../node_modules/@tamagui/core/dist/cjs/index.cjs"),import_start_transition=__webpack_require__("../../node_modules/@tamagui/start-transition/dist/cjs/index.cjs"),React=((mod,isNodeMode,target)=>(target=null!=mod?__create(__getProtoOf(mod)):{},__copyProps(!isNodeMode&&mod&&mod.__esModule?target:__defProp(target,"default",{value:mod,enumerable:!0}),mod)))(__webpack_require__("../../node_modules/next/dist/compiled/react/index.js")),import_constants=__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/constants.cjs"),import_ToastImperative=__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/ToastImperative.cjs"),import_jsx_runtime=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js");const[Collection,useCollection]=(0,import_collection.createCollection)("Toast"),{Provider:ToastProviderProvider,useStyledContext:useToastProviderContext}=(0,import_core.createStyledContext)({},"Toast__"),ToastProvider=props=>{const{scope=import_constants.TOAST_CONTEXT,id:providedId,burntOptions,native,notificationOptions,label="Notification",duration=5e3,swipeDirection="right",swipeThreshold=50,children}=props,backupId=React.useId(),id=providedId??backupId,[viewports,setViewports]=React.useState({}),[toastCount,setToastCount]=React.useState(0),isFocusedToastEscapeKeyDownRef=React.useRef(!1),isClosePausedRef=React.useRef(!1),handleViewportChange=React.useCallback(((name,viewport)=>{(0,import_start_transition.startTransition)((()=>{setViewports((prev=>({...prev,[name]:viewport})))}))}),[]),options=React.useMemo((()=>({duration,burntOptions,native,notificationOptions})),[JSON.stringify([duration,burntOptions,native,notificationOptions])]);return(0,import_jsx_runtime.jsx)(Collection.Provider,{scope,children:(0,import_jsx_runtime.jsx)(ToastProviderProvider,{scope,id,label,duration,swipeDirection,swipeThreshold,toastCount,viewports,onViewportChange:handleViewportChange,onToastAdd:React.useCallback((()=>{(0,import_start_transition.startTransition)((()=>{setToastCount((prevCount=>prevCount+1))}))}),[]),onToastRemove:React.useCallback((()=>{(0,import_start_transition.startTransition)((()=>{setToastCount((prevCount=>prevCount-1))}))}),[]),isFocusedToastEscapeKeyDownRef,isClosePausedRef,options,children:(0,import_jsx_runtime.jsx)(import_ToastImperative.ToastImperativeProvider,{options,children})})})};function ReprogapateToastProvider(props){const{children,context}=props;return(0,import_jsx_runtime.jsx)(Collection.Provider,{scope:context.toastScope,children:(0,import_jsx_runtime.jsx)(ToastProviderProvider,{...context,children:(0,import_jsx_runtime.jsx)(import_ToastImperative.ToastImperativeProvider,{options:context.options,children})})})}ToastProvider.propTypes={label(props){if(props.label&&"string"==typeof props.label&&!props.label.trim()){return new Error("Invalid prop `label` supplied to `ToastProvider`. Expected non-empty `string`.")}return null}},ToastProvider.displayName="ToastProvider"},"../../node_modules/@tamagui/toast/dist/cjs/ToastViewport.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{var mod,__create=Object.create,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},ToastViewport_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(ToastViewport_exports,{ToastViewport:()=>ToastViewport,VIEWPORT_DEFAULT_HOTKEY:()=>VIEWPORT_DEFAULT_HOTKEY,VIEWPORT_PAUSE:()=>VIEWPORT_PAUSE,VIEWPORT_RESUME:()=>VIEWPORT_RESUME}),module.exports=(mod=ToastViewport_exports,__copyProps(__defProp({},"__esModule",{value:!0}),mod));var import_animate_presence=__webpack_require__("../../node_modules/@tamagui/animate-presence/dist/cjs/index.cjs"),import_compose_refs=__webpack_require__("../../node_modules/@tamagui/compose-refs/dist/cjs/index.cjs"),import_constants=__webpack_require__("../../node_modules/@tamagui/constants/dist/cjs/index.cjs"),import_core=__webpack_require__("../../node_modules/@tamagui/core/dist/cjs/index.cjs"),import_portal=__webpack_require__("../../node_modules/@tamagui/portal/dist/cjs/index.cjs"),import_stacks=__webpack_require__("../../node_modules/@tamagui/stacks/dist/cjs/index.cjs"),import_visually_hidden=__webpack_require__("../../node_modules/@tamagui/visually-hidden/dist/cjs/index.cjs"),React=((mod,isNodeMode,target)=>(target=null!=mod?__create(__getProtoOf(mod)):{},__copyProps(!isNodeMode&&mod&&mod.__esModule?target:__defProp(target,"default",{value:mod,enumerable:!0}),mod)))(__webpack_require__("../../node_modules/next/dist/compiled/react/index.js")),import_constants2=__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/constants.cjs"),import_ToastPortal=__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/ToastPortal.cjs"),import_ToastProvider=__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/ToastProvider.cjs"),import_jsx_runtime=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js");const VIEWPORT_DEFAULT_HOTKEY=["F8"],VIEWPORT_PAUSE="toast.viewportPause",VIEWPORT_RESUME="toast.viewportResume",ToastViewportWrapperFrame=(0,import_core.styled)(import_stacks.YStack,{name:"ViewportWrapper",variants:{unstyled:{false:{pointerEvents:"box-none",top:0,bottom:0,left:0,right:0,position:import_constants.isWeb?"fixed":"absolute",maxWidth:"100%",tabIndex:0,zIndex:1e5}}},defaultVariants:{unstyled:"1"==={}.TAMAGUI_HEADLESS}}),ToastViewportFrame=(0,import_core.styled)(import_stacks.YStack,{name:"ToastViewport",variants:{unstyled:{false:{pointerEvents:"box-none",position:import_constants.isWeb?"fixed":"absolute",maxWidth:"100%"}}},defaultVariants:{unstyled:"1"==={}.TAMAGUI_HEADLESS}}),ToastViewport=React.memo(React.forwardRef(((props,forwardedRef)=>{const{scope,hotkey=VIEWPORT_DEFAULT_HOTKEY,label="Notifications ({hotkey})",name="default",multipleToasts,zIndex,portalToRoot,...viewportProps}=props,context=(0,import_ToastProvider.useToastProviderContext)(scope),getItems=(0,import_ToastProvider.useCollection)(scope||import_constants2.TOAST_CONTEXT),headFocusProxyRef=React.useRef(null),tailFocusProxyRef=React.useRef(null),wrapperRef=React.useRef(null),ref=React.useRef(null),onViewportChange=React.useCallback((el=>{context.viewports[name]!==el&&context.onViewportChange(name,el)}),[name,context.viewports]),composedRefs=(0,import_compose_refs.useComposedRefs)(forwardedRef,ref,onViewportChange),hotkeyLabel=hotkey.join("+").replace(/Key/g,"").replace(/Digit/g,""),hasToasts=context.toastCount>0;React.useEffect((()=>{if(!import_constants.isWeb||0===context.toastCount)return;const handleKeyDown=event=>{hotkey.every((key=>event[key]||event.code===key))&&ref.current?.focus()};return document.addEventListener("keydown",handleKeyDown),()=>{document.removeEventListener("keydown",handleKeyDown)}}),[hotkey,context.toastCount]),React.useEffect((()=>{if(!import_constants.isWeb||0===context.toastCount)return;const wrapper=wrapperRef.current,viewport=ref.current;if(hasToasts&&wrapper&&viewport){const handlePause=()=>{if(!context.isClosePausedRef.current){const pauseEvent=new CustomEvent(VIEWPORT_PAUSE);viewport.dispatchEvent(pauseEvent),context.isClosePausedRef.current=!0}},handleResume=()=>{if(context.isClosePausedRef.current){const resumeEvent=new CustomEvent(VIEWPORT_RESUME);viewport.dispatchEvent(resumeEvent),context.isClosePausedRef.current=!1}},handleFocusOutResume=event=>{!wrapper.contains(event.relatedTarget)&&handleResume()},handlePointerLeaveResume=()=>{wrapper.contains(document.activeElement)||handleResume()};return wrapper.addEventListener("focusin",handlePause),wrapper.addEventListener("focusout",handleFocusOutResume),wrapper.addEventListener("pointermove",handlePause),wrapper.addEventListener("pointerleave",handlePointerLeaveResume),window.addEventListener("blur",handlePause),window.addEventListener("focus",handleResume),()=>{wrapper.removeEventListener("focusin",handlePause),wrapper.removeEventListener("focusout",handleFocusOutResume),wrapper.removeEventListener("pointermove",handlePause),wrapper.removeEventListener("pointerleave",handlePointerLeaveResume),window.removeEventListener("blur",handlePause),window.removeEventListener("focus",handleResume)}}}),[hasToasts,context.isClosePausedRef,context.toastCount]);const getSortedTabbableCandidates=React.useCallback((({tabbingDirection})=>{const tabbableCandidates=getItems().map((toastItem=>{const toastNode=toastItem.ref.current,toastTabbableCandidates=[toastNode,...getTabbableCandidates(toastNode)];return"forwards"===tabbingDirection?toastTabbableCandidates:toastTabbableCandidates.reverse()}));return("forwards"===tabbingDirection?tabbableCandidates.reverse():tabbableCandidates).flat()}),[getItems]);React.useEffect((()=>{if(!import_constants.isWeb||0===context.toastCount)return;const viewport=ref.current;if(viewport){const handleKeyDown=event=>{const isMetaKey=event.altKey||event.ctrlKey||event.metaKey;if("Tab"===event.key&&!isMetaKey){const focusedElement=document.activeElement,isTabbingBackwards=event.shiftKey;if(event.target===viewport&&isTabbingBackwards)return void headFocusProxyRef.current?.focus();const sortedCandidates=getSortedTabbableCandidates({tabbingDirection:isTabbingBackwards?"backwards":"forwards"}),index=sortedCandidates.findIndex((candidate=>candidate===focusedElement));focusFirst(sortedCandidates.slice(index+1))?event.preventDefault():isTabbingBackwards?headFocusProxyRef.current?.focus():tailFocusProxyRef.current?.focus()}};return viewport.addEventListener("keydown",handleKeyDown),()=>viewport.removeEventListener("keydown",handleKeyDown)}}),[getItems,getSortedTabbableCandidates,context.toastCount]);const contents=(0,import_jsx_runtime.jsxs)(ToastViewportWrapperFrame,{ref:wrapperRef,role:"region","aria-label":label.replace("{hotkey}",hotkeyLabel),tabIndex:-1,children:[hasToasts&&(0,import_jsx_runtime.jsx)(FocusProxy,{context,viewportName:name,ref:headFocusProxyRef,onFocusFromOutsideViewport:()=>{focusFirst(getSortedTabbableCandidates({tabbingDirection:"forwards"}))}}),(0,import_jsx_runtime.jsx)(import_ToastProvider.Collection.Slot,{scope:context.toastScope,children:(0,import_jsx_runtime.jsx)(ToastViewportFrame,{focusable:context.toastCount>0,ref:composedRefs,...viewportProps,children:(0,import_jsx_runtime.jsx)(import_portal.PortalHost,{render:children=>(0,import_jsx_runtime.jsx)(import_animate_presence.AnimatePresence,{exitBeforeEnter:!multipleToasts,children}),name:name??"default"})})}),hasToasts&&(0,import_jsx_runtime.jsx)(FocusProxy,{context,viewportName:name,ref:tailFocusProxyRef,onFocusFromOutsideViewport:()=>{focusFirst(getSortedTabbableCandidates({tabbingDirection:"backwards"}))}})]});return portalToRoot?(0,import_jsx_runtime.jsx)(import_ToastPortal.ToastPortal,{context,..."number"==typeof zIndex?{zIndex}:{},children:contents}):contents})));ToastViewport.displayName="ToastViewport";const FocusProxy=React.forwardRef(((props,forwardedRef)=>{const{onFocusFromOutsideViewport,viewportName,context,...proxyProps}=props,viewport=context.viewports[viewportName];return(0,import_jsx_runtime.jsx)(import_visually_hidden.VisuallyHidden,{"aria-hidden":!0,tabIndex:0,...proxyProps,ref:forwardedRef,position:import_constants.isWeb?"fixed":"absolute",onFocus:event=>{if(!import_constants.isWeb)return;const prevFocusedElement=event.relatedTarget;!viewport?.contains(prevFocusedElement)&&onFocusFromOutsideViewport()}})}));function focusFirst(candidates){if(!import_constants.isWeb)return;const previouslyFocusedElement=document.activeElement;return candidates.some((candidate=>candidate===previouslyFocusedElement||(candidate.focus(),document.activeElement!==previouslyFocusedElement)))}function getTabbableCandidates(container){if(!import_constants.isWeb)return[];const containerHtml=container,nodes=[],walker=document.createTreeWalker(containerHtml,NodeFilter.SHOW_ELEMENT,{acceptNode:node=>{const isHiddenInput="INPUT"===node.tagName&&"hidden"===node.type;return node.disabled||node.hidden||isHiddenInput?NodeFilter.FILTER_SKIP:node.tabIndex>=0?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP}});for(;walker.nextNode();)nodes.push(walker.currentNode);return nodes}FocusProxy.displayName="ToastFocusProxy"},"../../node_modules/@tamagui/toast/dist/cjs/constants.cjs":module=>{var mod,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,constants_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(constants_exports,{TOAST_CONTEXT:()=>TOAST_CONTEXT,TOAST_NAME:()=>TOAST_NAME}),module.exports=(mod=constants_exports,((to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to})(__defProp({},"__esModule",{value:!0}),mod));const TOAST_NAME="Toast",TOAST_CONTEXT="Toast"},"../../node_modules/@tamagui/toast/dist/cjs/createNativeToast.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{var mod,console=__webpack_require__("../../node_modules/console-browserify/index.js"),__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,createNativeToast_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(createNativeToast_exports,{createNativeToast:()=>createNativeToast,hideNativeToast:()=>hideNativeToast}),module.exports=(mod=createNativeToast_exports,((to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to})(__defProp({},"__esModule",{value:!0}),mod));const createNativeToast=(title,{message,notificationOptions})=>{if(!("Notification"in window))return console.error("This browser does not support notifications"),!1;Notification.permission;const showNotification=()=>new Notification(title,{body:message,...notificationOptions});return"granted"===Notification.permission?{nativeToastRef:showNotification()}:(Notification.requestPermission().then((permission=>{if("granted"===permission)return{nativeToastRef:showNotification()}})),!0)},hideNativeToast=ref=>{"Notification"in window?ref&&ref.close():console.error("This browser does not support notifications")}},"../../node_modules/@tamagui/toast/dist/cjs/index.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{var mod,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},index_exports={};module.exports=(mod=index_exports,__copyProps(__defProp({},"__esModule",{value:!0}),mod)),((target,mod,secondTarget)=>{__copyProps(target,mod,"default"),secondTarget&&__copyProps(secondTarget,mod,"default")})(index_exports,__webpack_require__("../../node_modules/@tamagui/toast/dist/cjs/Toast.cjs"),module.exports)}}]);