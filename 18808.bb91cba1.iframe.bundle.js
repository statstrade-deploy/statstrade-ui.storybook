"use strict";(self.webpackChunkstorybook_app=self.webpackChunkstorybook_app||[]).push([[18808],{"../../packages/ui/dist/cjs/stories/components/FocusScope.stories.native.js":(module,__unused_webpack_exports,__webpack_require__)=>{var mod,__create=Object.create,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},FocusScope_stories_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(FocusScope_stories_exports,{Default:()=>Default,Loop:()=>Loop,NoTrap:()=>NoTrap,Programmatic:()=>Programmatic,default:()=>FocusScope_stories_default}),module.exports=(mod=FocusScope_stories_exports,__copyProps(__defProp({},"__esModule",{value:!0}),mod));var import_jsx_runtime=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js"),import_tamagui=__webpack_require__("../../node_modules/tamagui/dist/cjs/index.cjs"),import_react=((mod,isNodeMode,target)=>(target=null!=mod?__create(__getProtoOf(mod)):{},__copyProps(!isNodeMode&&mod&&mod.__esModule?target:__defProp(target,"default",{value:mod,enumerable:!0}),mod)))(__webpack_require__("../../node_modules/next/dist/compiled/react/index.js")),FocusScope_stories_default={title:"tamagui/ui/FocusScope",component:import_tamagui.FocusScope,parameters:{layout:"centered",docs:{description:{component:"A component to manage focus within a designated area, trapping it and looping it by default."}}},argTypes:{trapFocus:{control:"boolean",description:"Whether to trap focus within the scope."},loop:{control:"boolean",description:"Whether to loop focus from the last to the first item and vice-versa."}},args:{trapFocus:!0,loop:!0}},FocusScopeContent=function(){return(0,import_jsx_runtime.jsxs)(import_tamagui.YStack,{space:"$3",padding:"$4",borderWidth:1,borderColor:"$borderColor",borderRadius:"$4",children:[(0,import_jsx_runtime.jsx)(import_tamagui.Input,{placeholder:"First input"}),(0,import_jsx_runtime.jsx)(import_tamagui.Button,{children:"Middle button"}),(0,import_jsx_runtime.jsx)(import_tamagui.Input,{placeholder:"Last input"})]})},Template=function(args){return(0,import_jsx_runtime.jsx)(import_tamagui.FocusScope,{...args,children:(0,import_jsx_runtime.jsx)(FocusScopeContent,{})})},Default=Template.bind({}),NoTrap=Template.bind({});NoTrap.args={trapFocus:!1},NoTrap.parameters={docs:{description:{story:"Focus is not trapped, allowing navigation outside the scope."}}};var Loop=Template.bind({});Loop.args={loop:!0},Loop.parameters={docs:{description:{story:"Focus loops from the last item to the first and vice-versa."}}};var Programmatic=function(){var[scope,setScope]=import_react.default.useState();return(0,import_jsx_runtime.jsxs)(import_tamagui.YStack,{space:"$3",children:[(0,import_jsx_runtime.jsxs)(import_tamagui.XStack,{space:"$3",children:[(0,import_jsx_runtime.jsx)(import_tamagui.Button,{onPress:function(){return null==scope?void 0:scope.focusFirst()},children:"Focus First"}),(0,import_jsx_runtime.jsx)(import_tamagui.Button,{onPress:function(){return null==scope?void 0:scope.focusLast()},children:"Focus Last"})]}),(0,import_jsx_runtime.jsx)(import_tamagui.FocusScope,{ref:setScope,children:(0,import_jsx_runtime.jsx)(FocusScopeContent,{})})]})};Programmatic.parameters={docs:{description:{story:"Focus can be programmatically controlled using a ref."}}}}}]);