"use strict";(self.webpackChunkstorybook_app=self.webpackChunkstorybook_app||[]).push([[55971],{"../../packages/ui/src/stories/base/UseMedia.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicMediaQuery:()=>BasicMediaQuery,DynamicStyling:()=>DynamicStyling,ResponsiveComponents:()=>ResponsiveComponents,ResponsiveLayout:()=>ResponsiveLayout,ResponsiveTypography:()=>ResponsiveTypography,StyledWithMedia:()=>StyledWithMedia,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/next/dist/compiled/react/index.js"),tamagui__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@tamagui/core/dist/esm/index.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@tamagui/web/dist/esm/hooks/useMedia.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/@tamagui/stacks/dist/esm/Stacks.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/tamagui/dist/esm/views/Text.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../../node_modules/@tamagui/button/dist/esm/Button.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("../../node_modules/@tamagui/web/dist/esm/styled.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"base/useMedia",component:tamagui__WEBPACK_IMPORTED_MODULE_2__.View,parameters:{layout:"centered",docs:{description:{component:"Demonstration of Tamagui useMedia hook for responsive design"}}}},BasicMediaQuery=()=>{const media=(0,tamagui__WEBPACK_IMPORTED_MODULE_3__.Qf)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$4",padding:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$6",fontWeight:"bold",children:"Basic Media Query"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{children:["Current breakpoint: ",media.xl?"xl":media.lg?"lg":media.md?"md":media.sm?"sm":"xs"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{children:"Breakpoint detection:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{space:"$2",flexWrap:"wrap",children:Object.entries(media).map((([key,value])=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{padding:"$2",backgroundColor:value?"$blue8":"$gray5",borderRadius:"$2",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{color:value?"white":"$color",children:[key,": ",value?"✓":"✗"]})},key)))})]})]})},ResponsiveLayout=()=>{const media=(0,tamagui__WEBPACK_IMPORTED_MODULE_3__.Qf)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$4",padding:"$4",width:"100%",maxWidth:800,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$6",fontWeight:"bold",children:"Responsive Layout"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{children:"This layout changes based on the viewport size:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{flexDirection:media.sm?"row":"column",space:media.sm?"$4":"$2",backgroundColor:"$gray3",padding:"$4",borderRadius:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{flex:1,minHeight:100,backgroundColor:"$blue8",borderRadius:"$4",justifyContent:"center",alignItems:"center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{color:"white",fontWeight:"bold",children:media.sm?"Sidebar":"Header"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{flex:2,minHeight:200,backgroundColor:"$green8",borderRadius:"$4",justifyContent:"center",alignItems:"center",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{color:"white",fontWeight:"bold",children:media.sm?"Main Content":"Content"}),media.md&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{space:"$2",marginTop:"$4",flexWrap:"wrap",children:["A","B","C","D"].map((item=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{width:80,height:80,backgroundColor:"rgba(255, 255, 255, 0.2)",borderRadius:"$4",justifyContent:"center",alignItems:"center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{color:"white",fontSize:"$8",children:item})},item)))})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$3",color:"$gray10",textAlign:"center",children:media.sm?"Desktop Layout":"Mobile Layout"})]})},ResponsiveTypography=()=>{const media=(0,tamagui__WEBPACK_IMPORTED_MODULE_3__.Qf)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$4",padding:"$4",width:"100%",maxWidth:800,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$6",fontWeight:"bold",children:"Responsive Typography"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:media.xl?"$10":media.lg?"$9":media.md?"$8":media.sm?"$7":"$6",lineHeight:"$5",textAlign:media.sm?"left":"center",padding:media.xl?"$8":media.lg?"$6":media.md?"$4":media.sm?"$3":"$2",backgroundColor:"$gray3",borderRadius:"$4",children:["This text size and layout adjusts based on the viewport size.",media.md&&" On larger screens, you see more content and larger text."]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{space:"$2",flexWrap:"wrap",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$3",color:"$gray10",children:"Current breakpoint:"}),["xs","sm","md","lg","xl"].map((bp=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$3",color:media[bp]?"$blue10":"$gray8",fontWeight:media[bp]?"bold":"normal",children:bp},bp)))]})]})},ResponsiveComponents=()=>{const media=(0,tamagui__WEBPACK_IMPORTED_MODULE_3__.Qf)(),Card=({title,content})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{padding:"$4",backgroundColor:"$gray3",borderRadius:"$4",flex:1,minWidth:media.sm?200:"100%",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontWeight:"bold",marginBottom:"$2",children:title}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$3",children:content})]});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$4",padding:"$4",width:"100%",maxWidth:1e3,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$6",fontWeight:"bold",children:"Responsive Components"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{children:"These cards adjust their layout based on the viewport size."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{space:"$4",flexWrap:media.sm?"nowrap":"wrap",flexDirection:media.sm?"row":"column",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Card,{title:"Responsive Design",content:"Create layouts that adapt to different screen sizes and orientations."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Card,{title:"Media Queries",content:"Use the useMedia hook to conditionally render components and styles."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Card,{title:"Performance",content:"Only the components needed for the current viewport are rendered."})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{space:"$2",flexWrap:"wrap",marginTop:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$3",color:"$gray10",children:"Current layout:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$3",color:"$blue10",children:media.sm?"Desktop (horizontal layout)":"Mobile (vertical layout)"})]})]})},DynamicStyling=()=>{var _tabs_find;const media=(0,tamagui__WEBPACK_IMPORTED_MODULE_3__.Qf)(),[activeTab,setActiveTab]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("home"),tabs=[{id:"home",label:"Home"},{id:"about",label:"About"},{id:"services",label:"Services"},{id:"contact",label:"Contact"}];return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$4",padding:"$4",width:"100%",maxWidth:800,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$6",fontWeight:"bold",children:"Dynamic Styling with useMedia"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{backgroundColor:"$gray3",borderRadius:"$4",padding:"$2",flexDirection:media.sm?"row":"column",space:media.sm?"$2":"$1",children:tabs.map((tab=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_6__.$n,{flex:media.sm?1:void 0,backgroundColor:activeTab===tab.id?"$blue8":"transparent",color:activeTab===tab.id?"white":"$color",onPress:()=>setActiveTab(tab.id),hoverStyle:{backgroundColor:activeTab===tab.id?"$blue9":"$gray5"},pressStyle:{backgroundColor:activeTab===tab.id?"$blue10":"$gray6"},children:tab.label},tab.id)))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{backgroundColor:"$gray2",borderRadius:"$4",padding:"$4",minHeight:200,justifyContent:"center",alignItems:"center",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$5",fontWeight:"bold",marginBottom:"$2",children:[null===(_tabs_find=tabs.find((t=>t.id===activeTab)))||void 0===_tabs_find?void 0:_tabs_find.label," Content"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{textAlign:"center",children:["This is the content for the ",activeTab," tab. The layout and styling adapt based on the viewport size."]}),media.md&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{space:"$4",marginTop:"$4",children:[1,2,3].map((item=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{padding:"$4",backgroundColor:"$blue3",borderRadius:"$3",flex:1,justifyContent:"center",alignItems:"center",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontWeight:"bold",children:["Feature ",item]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$2",textAlign:"center",marginTop:"$1",children:"Only visible on medium screens and up"})]},item)))})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{space:"$2",justifyContent:"space-between",alignItems:"center",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$3",color:"$gray10",children:["Active tab: ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{color:"$blue10",children:activeTab})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$2",color:"$gray8",children:[media.sm?"Desktop":"Mobile"," view • ",media.md?"Wide":"Narrow"," layout"]})]})]})},StyledWithMedia=()=>{const ResponsiveBox=(0,tamagui__WEBPACK_IMPORTED_MODULE_7__.I)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Stack,{backgroundColor:"$blue8",justifyContent:"center",alignItems:"center",variants:{size:{small:{width:100,height:100},medium:{width:150,height:150},large:{width:200,height:200}}}}),ResponsiveComponent=()=>{const media=(0,tamagui__WEBPACK_IMPORTED_MODULE_3__.Qf)();let size="small";return media.lg?size="large":media.md&&(size="medium"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$4",alignItems:"center",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ResponsiveBox,{size,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{color:"white",fontWeight:"bold",children:size.toUpperCase()})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{children:["Current size: ",size]})]})};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$4",padding:"$4",width:"100%",maxWidth:800,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$6",fontWeight:"bold",children:"useMedia with Styled Components"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{children:"This example shows how to use useMedia with styled components to create responsive designs."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{space:"$4",flexWrap:"wrap",justifyContent:"center",backgroundColor:"$gray2",padding:"$4",borderRadius:"$4",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ResponsiveComponent,{})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{space:"$2",justifyContent:"center",marginTop:"$2",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$3",color:"$gray10",children:"Resize the browser window to see the component adjust its size."})})]})},__namedExportsOrder=["BasicMediaQuery","ResponsiveLayout","ResponsiveTypography","ResponsiveComponents","DynamicStyling","StyledWithMedia"];BasicMediaQuery.parameters={...BasicMediaQuery.parameters,docs:{...BasicMediaQuery.parameters?.docs,source:{originalSource:"() => {\n  const media = useMedia();\n  return <YStack space=\"$4\" padding=\"$4\">\n      <Text fontSize=\"$6\" fontWeight=\"bold\">Basic Media Query</Text>\n      \n      <Text>Current breakpoint: {media.xl ? 'xl' : media.lg ? 'lg' : media.md ? 'md' : media.sm ? 'sm' : 'xs'}</Text>\n      \n      <YStack space=\"$2\">\n        <Text>Breakpoint detection:</Text>\n        <XStack space=\"$2\" flexWrap=\"wrap\">\n          {Object.entries(media).map(([key, value]) => <View key={key} padding=\"$2\" backgroundColor={value ? '$blue8' : '$gray5'} borderRadius=\"$2\">\n              <Text color={value ? 'white' : '$color'}>{key}: {value ? '✓' : '✗'}</Text>\n            </View>)}\n        </XStack>\n      </YStack>\n    </YStack>;\n}",...BasicMediaQuery.parameters?.docs?.source}}},ResponsiveLayout.parameters={...ResponsiveLayout.parameters,docs:{...ResponsiveLayout.parameters?.docs,source:{originalSource:'() => {\n  const media = useMedia();\n  return <YStack space="$4" padding="$4" width="100%" maxWidth={800}>\n      <Text fontSize="$6" fontWeight="bold">Responsive Layout</Text>\n      \n      <Text>This layout changes based on the viewport size:</Text>\n      \n      <XStack flexDirection={media.sm ? \'row\' : \'column\'} space={media.sm ? \'$4\' : \'$2\'} backgroundColor="$gray3" padding="$4" borderRadius="$4">\n        <View flex={1} minHeight={100} backgroundColor="$blue8" borderRadius="$4" justifyContent="center" alignItems="center">\n          <Text color="white" fontWeight="bold">\n            {media.sm ? \'Sidebar\' : \'Header\'}\n          </Text>\n        </View>\n        \n        <View flex={2} minHeight={200} backgroundColor="$green8" borderRadius="$4" justifyContent="center" alignItems="center">\n          <Text color="white" fontWeight="bold">\n            {media.sm ? \'Main Content\' : \'Content\'}\n          </Text>\n          \n          {media.md && <XStack space="$2" marginTop="$4" flexWrap="wrap">\n              {[\'A\', \'B\', \'C\', \'D\'].map(item => <View key={item} width={80} height={80} backgroundColor="rgba(255, 255, 255, 0.2)" borderRadius="$4" justifyContent="center" alignItems="center">\n                  <Text color="white" fontSize="$8">{item}</Text>\n                </View>)}\n            </XStack>}\n        </View>\n      </XStack>\n      \n      <Text fontSize="$3" color="$gray10" textAlign="center">\n        {media.sm ? \'Desktop Layout\' : \'Mobile Layout\'}\n      </Text>\n    </YStack>;\n}',...ResponsiveLayout.parameters?.docs?.source}}},ResponsiveTypography.parameters={...ResponsiveTypography.parameters,docs:{...ResponsiveTypography.parameters?.docs,source:{originalSource:"() => {\n  const media = useMedia();\n  const getFontSize = () => {\n    if (media.xl) return '$10';\n    if (media.lg) return '$9';\n    if (media.md) return '$8';\n    if (media.sm) return '$7';\n    return '$6';\n  };\n  const getPadding = () => {\n    if (media.xl) return '$8';\n    if (media.lg) return '$6';\n    if (media.md) return '$4';\n    if (media.sm) return '$3';\n    return '$2';\n  };\n  return <YStack space=\"$4\" padding=\"$4\" width=\"100%\" maxWidth={800}>\n      <Text fontSize=\"$6\" fontWeight=\"bold\">Responsive Typography</Text>\n      \n      <Text fontSize={getFontSize()} lineHeight=\"$5\" textAlign={media.sm ? 'left' : 'center'} padding={getPadding()} backgroundColor=\"$gray3\" borderRadius=\"$4\">\n        This text size and layout adjusts based on the viewport size.\n        {media.md && ' On larger screens, you see more content and larger text.'}\n      </Text>\n      \n      <XStack space=\"$2\" flexWrap=\"wrap\">\n        <Text fontSize=\"$3\" color=\"$gray10\">Current breakpoint:</Text>\n        {['xs', 'sm', 'md', 'lg', 'xl'].map(bp => <Text key={bp} fontSize=\"$3\" color={media[bp as keyof typeof media] ? '$blue10' : '$gray8'} fontWeight={media[bp as keyof typeof media] ? 'bold' : 'normal'}>\n            {bp}\n          </Text>)}\n      </XStack>\n    </YStack>;\n}",...ResponsiveTypography.parameters?.docs?.source}}},ResponsiveComponents.parameters={...ResponsiveComponents.parameters,docs:{...ResponsiveComponents.parameters?.docs,source:{originalSource:'() => {\n  const media = useMedia();\n  const Card = ({\n    title,\n    content\n  }: {\n    title: string;\n    content: string;\n  }) => <View padding="$4" backgroundColor="$gray3" borderRadius="$4" flex={1} minWidth={media.sm ? 200 : \'100%\'}>\n      <Text fontWeight="bold" marginBottom="$2">{title}</Text>\n      <Text fontSize="$3">{content}</Text>\n    </View>;\n  return <YStack space="$4" padding="$4" width="100%" maxWidth={1000}>\n      <Text fontSize="$6" fontWeight="bold">Responsive Components</Text>\n      \n      <Text>These cards adjust their layout based on the viewport size.</Text>\n      \n      <XStack space="$4" flexWrap={media.sm ? \'nowrap\' : \'wrap\'} flexDirection={media.sm ? \'row\' : \'column\'}>\n        <Card title="Responsive Design" content="Create layouts that adapt to different screen sizes and orientations." />\n        <Card title="Media Queries" content="Use the useMedia hook to conditionally render components and styles." />\n        <Card title="Performance" content="Only the components needed for the current viewport are rendered." />\n      </XStack>\n      \n      <XStack space="$2" flexWrap="wrap" marginTop="$4">\n        <Text fontSize="$3" color="$gray10">Current layout:</Text>\n        <Text fontSize="$3" color="$blue10">\n          {media.sm ? \'Desktop (horizontal layout)\' : \'Mobile (vertical layout)\'}\n        </Text>\n      </XStack>\n    </YStack>;\n}',...ResponsiveComponents.parameters?.docs?.source}}},DynamicStyling.parameters={...DynamicStyling.parameters,docs:{...DynamicStyling.parameters?.docs,source:{originalSource:'() => {\n  const media = useMedia();\n  const [activeTab, setActiveTab] = useState(\'home\');\n  const tabs = [{\n    id: \'home\',\n    label: \'Home\'\n  }, {\n    id: \'about\',\n    label: \'About\'\n  }, {\n    id: \'services\',\n    label: \'Services\'\n  }, {\n    id: \'contact\',\n    label: \'Contact\'\n  }];\n  return <YStack space="$4" padding="$4" width="100%" maxWidth={800}>\n      <Text fontSize="$6" fontWeight="bold">Dynamic Styling with useMedia</Text>\n      \n      <XStack backgroundColor="$gray3" borderRadius="$4" padding="$2" flexDirection={media.sm ? \'row\' : \'column\'} space={media.sm ? \'$2\' : \'$1\'}>\n        {tabs.map(tab => <Button key={tab.id} flex={media.sm ? 1 : undefined} backgroundColor={activeTab === tab.id ? \'$blue8\' : \'transparent\'} color={activeTab === tab.id ? \'white\' : \'$color\'} onPress={() => setActiveTab(tab.id)} hoverStyle={{\n        backgroundColor: activeTab === tab.id ? \'$blue9\' : \'$gray5\'\n      }} pressStyle={{\n        backgroundColor: activeTab === tab.id ? \'$blue10\' : \'$gray6\'\n      }}>\n            {tab.label}\n          </Button>)}\n      </XStack>\n      \n      <View backgroundColor="$gray2" borderRadius="$4" padding="$4" minHeight={200} justifyContent="center" alignItems="center">\n        <Text fontSize="$5" fontWeight="bold" marginBottom="$2">\n          {tabs.find(t => t.id === activeTab)?.label} Content\n        </Text>\n        <Text textAlign="center">\n          This is the content for the {activeTab} tab. The layout and styling adapt based on the viewport size.\n        </Text>\n        \n        {media.md && <XStack space="$4" marginTop="$4">\n            {[1, 2, 3].map(item => <View key={item} padding="$4" backgroundColor="$blue3" borderRadius="$3" flex={1} justifyContent="center" alignItems="center">\n                <Text fontWeight="bold">Feature {item}</Text>\n                <Text fontSize="$2" textAlign="center" marginTop="$1">\n                  Only visible on medium screens and up\n                </Text>\n              </View>)}\n          </XStack>}\n      </View>\n      \n      <XStack space="$2" justifyContent="space-between" alignItems="center">\n        <Text fontSize="$3" color="$gray10">\n          Active tab: <Text color="$blue10">{activeTab}</Text>\n        </Text>\n        <Text fontSize="$2" color="$gray8">\n          {media.sm ? \'Desktop\' : \'Mobile\'} view • {media.md ? \'Wide\' : \'Narrow\'} layout\n        </Text>\n      </XStack>\n    </YStack>;\n}',...DynamicStyling.parameters?.docs?.source}}},StyledWithMedia.parameters={...StyledWithMedia.parameters,docs:{...StyledWithMedia.parameters?.docs,source:{originalSource:'() => {\n  const ResponsiveBox = styled(Stack, {\n    backgroundColor: \'$blue8\',\n    justifyContent: \'center\',\n    alignItems: \'center\',\n    variants: {\n      size: {\n        small: {\n          width: 100,\n          height: 100\n        },\n        medium: {\n          width: 150,\n          height: 150\n        },\n        large: {\n          width: 200,\n          height: 200\n        }\n      }\n    } as const\n  });\n  const ResponsiveComponent = () => {\n    const media = useMedia();\n    let size: \'small\' | \'medium\' | \'large\' = \'small\';\n    if (media.lg) size = \'large\';else if (media.md) size = \'medium\';\n    return <YStack space="$4" alignItems="center">\n        <ResponsiveBox size={size}>\n          <Text color="white" fontWeight="bold">\n            {size.toUpperCase()}\n          </Text>\n        </ResponsiveBox>\n        <Text>Current size: {size}</Text>\n      </YStack>;\n  };\n  return <YStack space="$4" padding="$4" width="100%" maxWidth={800}>\n      <Text fontSize="$6" fontWeight="bold">useMedia with Styled Components</Text>\n      \n      <Text>\n        This example shows how to use useMedia with styled components to create responsive designs.\n      </Text>\n      \n      <XStack space="$4" flexWrap="wrap" justifyContent="center" backgroundColor="$gray2" padding="$4" borderRadius="$4">\n        <ResponsiveComponent />\n      </XStack>\n      \n      <XStack space="$2" justifyContent="center" marginTop="$2">\n        <Text fontSize="$3" color="$gray10">\n          Resize the browser window to see the component adjust its size.\n        </Text>\n      </XStack>\n    </YStack>;\n}',...StyledWithMedia.parameters?.docs?.source}}}}}]);