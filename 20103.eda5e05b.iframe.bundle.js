"use strict";(self.webpackChunkstorybook_app=self.webpackChunkstorybook_app||[]).push([[20103],{"../../node_modules/moti/build/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AnimatePresence:()=>AnimatePresence.N,Image:()=>Image,MotiImage:()=>Image,MotiProgressBar:()=>MotiProgressBar,MotiSafeAreaView:()=>SafeAreaView,MotiScrollView:()=>ScrollView,MotiText:()=>Text,MotiView:()=>view.S,PackageName:()=>package_name.g,SafeAreaView:()=>SafeAreaView,ScrollView:()=>ScrollView,Text:()=>Text,View:()=>view.S,colorKeys:()=>colorKeys,motify:()=>motify.A,useAnimationState:()=>useAnimationState,useDynamicAnimation:()=>useDynamicAnimation,useMotify:()=>use_motify.m});var motify=__webpack_require__("../../node_modules/moti/build/core/motify.js"),AnimatePresence=__webpack_require__("../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs"),react=__webpack_require__("../../node_modules/next/dist/compiled/react/index.js"),lib_module=__webpack_require__("../../node_modules/react-native-reanimated/lib/module/index.js"),package_name=__webpack_require__("../../node_modules/moti/build/core/constants/package-name.js"),console=__webpack_require__("../../node_modules/console-browserify/index.js");function useAnimationState(_variants,{from="from",to="to"}={}){const controller=(0,react.useRef)(null),__state=(0,lib_module.useSharedValue)(from?_variants[from]:0),selectedVariant=(0,react.useRef)(from),variants=(0,react.useRef)(_variants);return(0,react.useEffect)((function updateVariantsRef(){variants.current=_variants}),[_variants]),null==controller.current&&(controller.current={__state,transitionTo(nextStateOrFunction){const runTransition=nextStateKey=>{selectedVariant.current=nextStateKey;const value=variants.current[nextStateKey];value&&(__state.value=value)};runTransition("function"==typeof nextStateOrFunction?nextStateOrFunction(this.current):nextStateOrFunction)},get current(){return selectedVariant.current}}),(0,react.useEffect)((function maybeTransitionOnMount(){variants.current[to]&&(variants.current[from]?controller.current?.transitionTo(to):console.error(`🐼 [${package_name.g}]: Called useAnimationState with a "to" variant, but you are missing a "from" variant. A "from" variant is required if you are using "to". Instead, you passed these variants: "${Object.keys(variants.current).join(", ")}". If you want to just use the "to" value without "from", you shouldn't use this hook. Instead, just pass your values to a ${package_name.g} component's "animate" prop.`))}),[from,to]),controller.current}const fallback=()=>({});function useDynamicAnimation(initialState=fallback){const initializer=(0,react.useRef)(null);null===initializer.current&&(initializer.current={value:initialState()});const __state=(0,lib_module.useSharedValue)(initializer.current.value),controller=(0,react.useRef)(null);return null==controller.current&&(controller.current={__state,get current(){return __state.value},animateTo(nextStateOrFunction){const nextStyle="function"==typeof nextStateOrFunction?nextStateOrFunction(__state.value):nextStateOrFunction;__state.value=nextStyle}}),controller.current}var use_motify=__webpack_require__("../../node_modules/moti/build/core/use-motify.js");const colorKeys=["backgroundColor","borderBottomColor","borderColor","borderEndColor","borderLeftColor","borderRightColor","borderStartColor","borderTopColor","color"];var dist=__webpack_require__("../../node_modules/react-native-web/dist/index.js");const Image=(0,motify.A)(dist.Image)(),SafeAreaView=(0,motify.A)(dist.SafeAreaView)(),ScrollView=(0,motify.A)(dist.ScrollView)(),Text=(0,motify.A)(dist.Text)();var view=__webpack_require__("../../node_modules/moti/build/components/view.js"),jsx_runtime=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js"),progress_console=__webpack_require__("../../node_modules/console-browserify/index.js");const MotiView=(0,motify.A)(dist.View)();function MotiProgressBar({height=12,progress=0,borderRadius=height/2,style,colorMode="dark",containerColor="dark"===colorMode?"#333":"#eee",containerStyle,color="#00C806",transition={type:"timing",duration:200},silenceRenderWarnings=!1}){const barState=useDynamicAnimation((()=>({translateX:"-100%"})));transition||progress_console.error(`[moti] <ProgressBar /> "transition" prop must be undefined or a Moti transition object, but it got this type instead: ${typeof transition}.`,transition);const transitionString=JSON.stringify(transition),_transition=(0,react.useMemo)((()=>JSON.parse(transitionString)),[transitionString]),outerStyle=(0,react.useMemo)((()=>[styles.container,containerStyle,{height,borderRadius,backgroundColor:containerColor}]),[borderRadius,containerColor,containerStyle,height]),progressStyle=(0,react.useMemo)((()=>[style,styles.bar,{borderRadius,backgroundColor:color}]),[borderRadius,color,style]);(0,react.useEffect)((function animateOnProgressChange(){const translateX=Math.round(100*progress)-100+"%";barState.current?.translateX!==translateX&&barState.animateTo((current=>({...current,translateX})))}),[barState,progress]);const unnecessaryRerenders=(0,react.useRef)({containerStyle:{previousValue:containerStyle,changes:0},style:{previousValue:style,changes:0}});return(0,react.useEffect)((function checkUnnecessaryRerenders(){if(silenceRenderWarnings)return;containerStyle!==unnecessaryRerenders.current.containerStyle.previousValue&&(unnecessaryRerenders.current.containerStyle.changes+=1),style!==unnecessaryRerenders.current.style.previousValue&&(unnecessaryRerenders.current.style.changes+=1);const warningProps=[];Object.entries(unnecessaryRerenders.current).forEach((([prop,{changes}])=>{changes>5&&warningProps.push({prop,changes})})),warningProps.length&&progress_console.warn(`[moti] <MotiProgress /> is re-rendering often due to these props: ${warningProps.map((warning=>`"${warning.prop}: ${warning.changes} re-renders"`)).join(", ")}. This can reduce animation performance. Please memoize these props with useMemo, or create them outside of render code.`,"If you are intentionally re-rendering this often, for some reason, pass silenceRenderWarnings={true} on this component.")}),[containerStyle,silenceRenderWarnings,style]),(0,react.useMemo)((()=>(0,jsx_runtime.jsx)(dist.View,{style:outerStyle,children:(0,jsx_runtime.jsx)(MotiView,{transition:_transition,state:barState,style:progressStyle})})),[_transition,barState,outerStyle,progressStyle])}const styles=dist.StyleSheet.create({container:{width:"100%",overflow:"hidden"},bar:{width:"100%",height:"100%"}})},"../../packages/ui/dist/cjs/stories/base/AnimationsMoti.stories.js":(module,__unused_webpack_exports,__webpack_require__)=>{var mod,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,AnimationsMoti_stories_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(AnimationsMoti_stories_exports,{FadeInOut:()=>FadeInOut,ScaleAnimation:()=>ScaleAnimation,SequenceAnimation:()=>SequenceAnimation,default:()=>AnimationsMoti_stories_default}),module.exports=(mod=AnimationsMoti_stories_exports,((to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to})(__defProp({},"__esModule",{value:!0}),mod));var import_react=__webpack_require__("../../node_modules/next/dist/compiled/react/index.js"),import_tamagui=__webpack_require__("../../node_modules/tamagui/dist/cjs/index.cjs"),import_moti=__webpack_require__("../../node_modules/moti/build/index.js"),import_jsx_runtime=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js"),AnimationsMoti_stories_default={title:"tamagui/base/AnimationsMoti",component:import_moti.MotiView};const FadeInOut=()=>{const[show,setShow]=(0,import_react.useState)(!0);return(0,import_jsx_runtime.jsxs)(import_tamagui.YStack,{space:"$4",padding:"$4",alignItems:"center",children:[(0,import_jsx_runtime.jsx)(import_tamagui.Text,{children:"Fade In/Out Animation"}),(0,import_jsx_runtime.jsx)(import_tamagui.Button,{onPress:()=>setShow(!show),children:show?"Hide":"Show"}),(0,import_jsx_runtime.jsx)(import_moti.AnimatePresence,{children:show&&(0,import_jsx_runtime.jsx)(import_moti.MotiView,{from:{opacity:0,scale:.8},animate:{opacity:1,scale:1},exit:{opacity:0,scale:.8},transition:{type:"timing",duration:300},style:{width:100,height:100,backgroundColor:"#6366f1",borderRadius:16}})})]})},ScaleAnimation=()=>{const[scale,setScale]=(0,import_react.useState)(1);return(0,import_jsx_runtime.jsxs)(import_tamagui.YStack,{space:"$4",padding:"$4",alignItems:"center",children:[(0,import_jsx_runtime.jsx)(import_tamagui.Text,{children:"Scale Animation"}),(0,import_jsx_runtime.jsxs)(import_tamagui.XStack,{space:"$2",children:[(0,import_jsx_runtime.jsx)(import_tamagui.Button,{onPress:()=>setScale(scale+.2),children:"+"}),(0,import_jsx_runtime.jsx)(import_tamagui.Button,{onPress:()=>setScale(scale-.2),children:"-"})]}),(0,import_jsx_runtime.jsx)(import_moti.MotiView,{animate:{scale},transition:{type:"spring",damping:10},style:{width:100,height:100,backgroundColor:"#8b5cf6",borderRadius:16}})]})},SequenceAnimation=()=>{const[animate,setAnimate]=(0,import_react.useState)(!1);return(0,import_jsx_runtime.jsxs)(import_tamagui.YStack,{space:"$4",padding:"$4",alignItems:"center",children:[(0,import_jsx_runtime.jsx)(import_tamagui.Text,{children:"Sequence Animation"}),(0,import_jsx_runtime.jsx)(import_tamagui.Button,{onPress:()=>setAnimate(!animate),children:animate?"Reset":"Animate"}),(0,import_jsx_runtime.jsx)(import_moti.MotiView,{animate:{translateY:animate?[0,-20,0]:0,rotate:animate?"360deg":"0deg"},transition:{type:"timing",duration:1e3,loop:animate},style:{width:100,height:100,backgroundColor:"#10b981",borderRadius:16}})]})}}}]);