"use strict";(self.webpackChunkstorybook_app=self.webpackChunkstorybook_app||[]).push([[22665],{"../../packages/ui/dist/cjs/layout/mockups/DashboardPage.stories.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{var mod,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,DashboardPage_stories_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(DashboardPage_stories_exports,{CollapsedSidebar:()=>CollapsedSidebar,DarkMode:()=>DarkMode,Default:()=>Default,MobileView:()=>MobileView,TabletView:()=>TabletView,default:()=>DashboardPage_stories_default}),module.exports=(mod=DashboardPage_stories_exports,((to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to})(__defProp({},"__esModule",{value:!0}),mod));var import_react=__webpack_require__("../../node_modules/next/dist/compiled/react/index.js"),import_tamagui=__webpack_require__("../../node_modules/tamagui/dist/cjs/index.cjs"),import_lucide_icons=__webpack_require__("../../node_modules/@tamagui/lucide-icons/dist/cjs/index.cjs"),import_DashboardPage=__webpack_require__("../../packages/ui/dist/cjs/layout/mockups/DashboardPage.cjs"),import_jsx_runtime=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js");var DashboardPage_stories_default={title:"layout/mockups/DashboardPage",component:import_DashboardPage.DashboardPage,parameters:{layout:"fullscreen",docs:{description:{component:"A complete dashboard page layout with responsive sidebar, header, and content areas."}}},argTypes:{theme:{control:{type:"select"},options:["light","dark"],description:"Color theme for the dashboard"},sidebarOpen:{control:"boolean",description:"Whether the sidebar is initially open"}},args:{theme:"light",sidebarOpen:!0}};const Template={render:function(args){const[theme,setTheme]=(0,import_react.useState)(args.theme);return(0,import_jsx_runtime.jsxs)(import_tamagui.YStack,{bc:"dark"===theme?"$gray1":"white",minHeight:"100vh",children:[(0,import_jsx_runtime.jsx)(import_tamagui.XStack,{p:"$4",jc:"flex-end",gap:"$2",children:(0,import_jsx_runtime.jsx)(import_tamagui.Button,{size:"$2",icon:"dark"===theme?(0,import_jsx_runtime.jsx)(import_lucide_icons.Sun,{size:16}):(0,import_jsx_runtime.jsx)(import_lucide_icons.Moon,{size:16}),onPress:()=>setTheme("dark"===theme?"light":"dark"),chromeless:!0,children:"dark"===theme?"Light Mode":"Dark Mode"})}),(0,import_jsx_runtime.jsx)(import_DashboardPage.DashboardPage,{})]})}},Default={...Template,args:{theme:"light",sidebarOpen:!0}},DarkMode={...Template,args:{theme:"dark",sidebarOpen:!0},parameters:{backgrounds:{default:"dark"}}},CollapsedSidebar={...Template,args:{theme:"light",sidebarOpen:!1}},MobileView={...Template,args:{theme:"light",sidebarOpen:!1},parameters:{viewport:{defaultViewport:"mobile1"}}},TabletView={...Template,args:{theme:"light",sidebarOpen:!0},parameters:{viewport:{defaultViewport:"tablet"}}}}}]);