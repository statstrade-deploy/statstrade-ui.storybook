"use strict";(self.webpackChunkstorybook_app=self.webpackChunkstorybook_app||[]).push([[87700],{"../../packages/ui/src/stories/AlertDialog.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,DestructiveAction:()=>DestructiveAction,Types:()=>Types,WithForm:()=>WithForm,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/next/dist/compiled/react/index.js"),tamagui__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@tamagui/alert-dialog/dist/esm/AlertDialog.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@tamagui/web/dist/esm/styled.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/@tamagui/button/dist/esm/Button.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/@tamagui/stacks/dist/esm/Stacks.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../../node_modules/tamagui/dist/esm/index.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("../../node_modules/@tamagui/label/dist/esm/Label.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("../../node_modules/tamagui/dist/esm/views/Input.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("../../node_modules/tamagui/dist/esm/views/Spinner.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("../../node_modules/tamagui/dist/esm/views/Text.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/AlertDialog",component:tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt,parameters:{layout:"centered"},argTypes:{type:{options:["default","destructive","success","warning","info"],control:{type:"select"}}}},StyledButton=(0,tamagui__WEBPACK_IMPORTED_MODULE_3__.I)(tamagui__WEBPACK_IMPORTED_MODULE_4__.$n,{variants:{type:{default:{},destructive:{backgroundColor:"$red9",color:"white",hoverStyle:{backgroundColor:"$red10"},pressStyle:{backgroundColor:"$red11"}},success:{backgroundColor:"$green9",color:"white",hoverStyle:{backgroundColor:"$green10"}},warning:{backgroundColor:"$orange9",color:"white",hoverStyle:{backgroundColor:"$orange10"}},info:{backgroundColor:"$blue9",color:"white",hoverStyle:{backgroundColor:"$blue10"}}}},defaultVariants:{type:"default"}}),StyledContent=(0,tamagui__WEBPACK_IMPORTED_MODULE_3__.I)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Content,{width:"90%",maxWidth:500,borderRadius:12,borderWidth:1,borderColor:"$gray6",backgroundColor:"$background",shadowColor:"#000",shadowOpacity:.1,shadowRadius:10,shadowOffset:{width:0,height:4},padding:0,overflow:"hidden",variants:{type:{default:{},destructive:{borderColor:"$red6"},success:{borderColor:"$green6"},warning:{borderColor:"$orange6"},info:{borderColor:"$blue6"}}}}),IconWrapper=(0,tamagui__WEBPACK_IMPORTED_MODULE_3__.I)(tamagui__WEBPACK_IMPORTED_MODULE_5__.Se,{padding:16,alignItems:"center",justifyContent:"center",variants:{type:{default:{backgroundColor:"$gray3"},destructive:{backgroundColor:"$red3"},success:{backgroundColor:"$green3"},warning:{backgroundColor:"$orange3"},info:{backgroundColor:"$blue3"}}}}),getIcon=(type="default",size=24)=>{const iconProps={size,color:"white"};switch(type){case"destructive":return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_6__.XCircle,{...iconProps});case"success":return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_6__.CheckCircle2,{...iconProps});case"warning":return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_6__.AlertTriangle,{...iconProps});default:return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_6__.Info,{...iconProps})}},Template=args=>{const[open,setOpen]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt,{open,onOpenChange:setOpen,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Trigger,{asChild:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledButton,{type:args.type||"default",children:args.type?args.type.charAt(0).toUpperCase()+args.type.slice(1):"Open Dialog"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Portal,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Overlay,{animation:"quick",opacity:.5,enterStyle:{opacity:0},exitStyle:{opacity:0}},"overlay"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledContent,{type:args.type,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.lW,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconWrapper,{type:args.type,children:getIcon(args.type,24)}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.Se,{flex:1,padding:"$4",space:"$3",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Title,{fontSize:"$6",fontWeight:"600",children:args.title||"Are you sure?"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Description,{color:"$gray11",children:args.description||"This action cannot be undone. This will permanently delete your account and remove your data from our servers."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.lW,{space:"$3",justifyContent:"flex-end",marginTop:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Cancel,{asChild:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.$n,{variant:"outlined",children:"Cancel"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Action,{asChild:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.$n,{theme:"default"===args.type?"active":void 0,type:args.type,children:"Confirm"})})]})]})]})},"content")]})]})},Default=Template.bind({});Default.args={type:"default",title:"Confirm Action",description:"Are you sure you want to perform this action?"};const Types=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.Se,{space:"$4",padding:"$4",maxWidth:600,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_6__.H2,{children:"Alert Dialog Types"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.lW,{flexWrap:"wrap",gap:"$3",children:["default","destructive","success","warning","info"].map((type=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Template,{type,title:`${type.charAt(0).toUpperCase()+type.slice(1)} Action`,description:`This is a ${type} alert dialog. Please confirm your action.`},type)))})]}),WithForm=()=>{const[open,setOpen]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[isLoading,setIsLoading]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[email,setEmail]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(""),[isSubmitted,setIsSubmitted]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt,{open,onOpenChange:setOpen,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Trigger,{asChild:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.$n,{children:"Subscribe to Newsletter"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Portal,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Overlay,{animation:"quick",opacity:.5,enterStyle:{opacity:0},exitStyle:{opacity:0}},"overlay"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Content,{width:"90%",maxWidth:400,borderRadius:12,padding:"$4",space:"$4",children:isSubmitted?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.Se,{space:"$4",alignItems:"center",padding:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_6__.CheckCircle2,{size:48,color:"$green9"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Title,{textAlign:"center",children:"Successfully Subscribed!"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Description,{textAlign:"center",children:["Thank you for subscribing to our newsletter. You'll receive updates at ",email,"."]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.$n,{marginTop:"$4",onPress:()=>setOpen(!1),children:"Close"})]}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Title,{children:"Subscribe to Newsletter"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Description,{children:"Enter your email to receive the latest updates and news."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.Se,{space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_7__.JU,{htmlFor:"email",children:"Email"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.pd,{id:"email",placeholder:"your@email.com",value:email,onChangeText:setEmail,autoCapitalize:"none",keyboardType:"email-address",disabled:isLoading})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.lW,{space:"$3",justifyContent:"flex-end",marginTop:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Cancel,{asChild:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.$n,{variant:"outlined",disabled:isLoading,children:"Cancel"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.$n,{theme:"active",onPress:()=>{setIsLoading(!0),setTimeout((()=>{setIsLoading(!1),setIsSubmitted(!0),setTimeout((()=>{setOpen(!1),setTimeout((()=>{setIsSubmitted(!1),setEmail("")}),300)}),1500)}),1e3)},disabled:!email||isLoading,iconAfter:isLoading?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_9__.y,{}):null,children:isLoading?"Subscribing...":"Subscribe"})]})]})},"content")]})]})},DestructiveAction=()=>{const[open,setOpen]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[isDeleting,setIsDeleting]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt,{open,onOpenChange:setOpen,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Trigger,{asChild:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.$n,{theme:"red",children:"Delete Account"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Portal,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Overlay,{animation:"quick",opacity:.5,enterStyle:{opacity:0},exitStyle:{opacity:0}},"overlay"),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StyledContent,{type:"destructive",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.lW,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IconWrapper,{type:"destructive",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_6__.XCircle,{size:24,color:"white"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.Se,{flex:1,padding:"$4",space:"$3",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Title,{fontSize:"$6",fontWeight:"600",children:"Delete Account"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Description,{color:"$gray11",children:"Are you sure you want to delete your account? This action cannot be undone. All your data will be permanently removed from our servers."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.Se,{space:"$2",marginTop:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_10__.E,{fontSize:"$3",color:"$gray10",children:'Type "DELETE" to confirm'}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.pd,{placeholder:"Type DELETE to confirm",borderColor:"$red8",focusStyle:{borderColor:"$red9"}})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.lW,{space:"$3",justifyContent:"flex-end",marginTop:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Cancel,{asChild:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.$n,{variant:"outlined",disabled:isDeleting,children:"Cancel"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Lt.Action,{asChild:!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.$n,{theme:"red",onPress:()=>{setIsDeleting(!0),setTimeout((()=>{setIsDeleting(!1),setOpen(!1)}),1500)},disabled:isDeleting,iconAfter:isDeleting?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_9__.y,{}):null,children:isDeleting?"Deleting...":"Delete Account"})})]})]})]})},"content")]})]})},__namedExportsOrder=["Default","Types","WithForm","DestructiveAction"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => {\n  const [open, setOpen] = useState(false);\n  return <AlertDialog open={open} onOpenChange={setOpen}>\n      <AlertDialog.Trigger asChild>\n        <StyledButton type={args.type || \'default\'}>\n          {args.type ? args.type.charAt(0).toUpperCase() + args.type.slice(1) : \'Open Dialog\'}\n        </StyledButton>\n      </AlertDialog.Trigger>\n\n      <AlertDialog.Portal>\n        <AlertDialog.Overlay key="overlay" animation="quick" opacity={0.5} enterStyle={{\n        opacity: 0\n      }} exitStyle={{\n        opacity: 0\n      }} />\n        <StyledContent key="content" type={args.type}>\n          <XStack>\n            <IconWrapper type={args.type}>\n              {getIcon(args.type, 24)}\n            </IconWrapper>\n            <YStack flex={1} padding="$4" space="$3">\n              <AlertDialog.Title fontSize="$6" fontWeight="600">\n                {args.title || \'Are you sure?\'}\n              </AlertDialog.Title>\n              <AlertDialog.Description color="$gray11">\n                {args.description || \'This action cannot be undone. This will permanently delete your account and remove your data from our servers.\'}\n              </AlertDialog.Description>\n              \n              <XStack space="$3" justifyContent="flex-end" marginTop="$4">\n                <AlertDialog.Cancel asChild>\n                  <Button variant="outlined">Cancel</Button>\n                </AlertDialog.Cancel>\n                <AlertDialog.Action asChild>\n                  <Button theme={args.type === \'default\' ? \'active\' : undefined} type={args.type}>\n                    Confirm\n                  </Button>\n                </AlertDialog.Action>\n              </XStack>\n            </YStack>\n          </XStack>\n        </StyledContent>\n      </AlertDialog.Portal>\n    </AlertDialog>;\n}',...Default.parameters?.docs?.source}}},Types.parameters={...Types.parameters,docs:{...Types.parameters?.docs,source:{originalSource:"() => {\n  const types = ['default', 'destructive', 'success', 'warning', 'info'];\n  return <YStack space=\"$4\" padding=\"$4\" maxWidth={600}>\n      <H2>Alert Dialog Types</H2>\n      <XStack flexWrap=\"wrap\" gap=\"$3\">\n        {types.map(type => <Template key={type} type={type} title={`${type.charAt(0).toUpperCase() + type.slice(1)} Action`} description={`This is a ${type} alert dialog. Please confirm your action.`} />)}\n      </XStack>\n    </YStack>;\n}",...Types.parameters?.docs?.source}}},WithForm.parameters={...WithForm.parameters,docs:{...WithForm.parameters?.docs,source:{originalSource:'() => {\n  const [open, setOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [email, setEmail] = useState(\'\');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const handleSubmit = () => {\n    setIsLoading(true);\n    // Simulate API call\n    setTimeout(() => {\n      setIsLoading(false);\n      setIsSubmitted(true);\n      setTimeout(() => {\n        setOpen(false);\n        // Reset form after dialog closes\n        setTimeout(() => {\n          setIsSubmitted(false);\n          setEmail(\'\');\n        }, 300);\n      }, 1500);\n    }, 1000);\n  };\n  return <AlertDialog open={open} onOpenChange={setOpen}>\n      <AlertDialog.Trigger asChild>\n        <Button>Subscribe to Newsletter</Button>\n      </AlertDialog.Trigger>\n\n      <AlertDialog.Portal>\n        <AlertDialog.Overlay key="overlay" animation="quick" opacity={0.5} enterStyle={{\n        opacity: 0\n      }} exitStyle={{\n        opacity: 0\n      }} />\n        <AlertDialog.Content key="content" width="90%" maxWidth={400} borderRadius={12} padding="$4" space="$4">\n          {isSubmitted ? <YStack space="$4" alignItems="center" padding="$4">\n              <CheckCircle2 size={48} color="$green9" />\n              <AlertDialog.Title textAlign="center">Successfully Subscribed!</AlertDialog.Title>\n              <AlertDialog.Description textAlign="center">\n                Thank you for subscribing to our newsletter. You\'ll receive updates at {email}.\n              </AlertDialog.Description>\n              <Button marginTop="$4" onPress={() => setOpen(false)}>\n                Close\n              </Button>\n            </YStack> : <>\n              <AlertDialog.Title>Subscribe to Newsletter</AlertDialog.Title>\n              <AlertDialog.Description>\n                Enter your email to receive the latest updates and news.\n              </AlertDialog.Description>\n              \n              <YStack space="$2">\n                <Label htmlFor="email">Email</Label>\n                <Input id="email" placeholder="your@email.com" value={email} onChangeText={setEmail} autoCapitalize="none" keyboardType="email-address" disabled={isLoading} />\n              </YStack>\n              \n              <XStack space="$3" justifyContent="flex-end" marginTop="$4">\n                <AlertDialog.Cancel asChild>\n                  <Button variant="outlined" disabled={isLoading}>\n                    Cancel\n                  </Button>\n                </AlertDialog.Cancel>\n                <Button theme="active" onPress={handleSubmit} disabled={!email || isLoading} iconAfter={isLoading ? <Spinner /> : null}>\n                  {isLoading ? \'Subscribing...\' : \'Subscribe\'}\n                </Button>\n              </XStack>\n            </>}\n        </AlertDialog.Content>\n      </AlertDialog.Portal>\n    </AlertDialog>;\n}',...WithForm.parameters?.docs?.source}}},DestructiveAction.parameters={...DestructiveAction.parameters,docs:{...DestructiveAction.parameters?.docs,source:{originalSource:'() => {\n  const [open, setOpen] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const handleDelete = () => {\n    setIsDeleting(true);\n    // Simulate API call\n    setTimeout(() => {\n      setIsDeleting(false);\n      setOpen(false);\n      // Show success message or redirect\n    }, 1500);\n  };\n  return <AlertDialog open={open} onOpenChange={setOpen}>\n      <AlertDialog.Trigger asChild>\n        <Button theme="red">Delete Account</Button>\n      </AlertDialog.Trigger>\n\n      <AlertDialog.Portal>\n        <AlertDialog.Overlay key="overlay" animation="quick" opacity={0.5} enterStyle={{\n        opacity: 0\n      }} exitStyle={{\n        opacity: 0\n      }} />\n        <StyledContent key="content" type="destructive">\n          <XStack>\n            <IconWrapper type="destructive">\n              <XCircle size={24} color="white" />\n            </IconWrapper>\n            <YStack flex={1} padding="$4" space="$3">\n              <AlertDialog.Title fontSize="$6" fontWeight="600">\n                Delete Account\n              </AlertDialog.Title>\n              <AlertDialog.Description color="$gray11">\n                Are you sure you want to delete your account? This action cannot be undone. All your data will be permanently removed from our servers.\n              </AlertDialog.Description>\n              \n              <YStack space="$2" marginTop="$2">\n                <Text fontSize="$3" color="$gray10">Type "DELETE" to confirm</Text>\n                <Input placeholder="Type DELETE to confirm" borderColor="$red8" focusStyle={{\n                borderColor: \'$red9\'\n              }} />\n              </YStack>\n              \n              <XStack space="$3" justifyContent="flex-end" marginTop="$4">\n                <AlertDialog.Cancel asChild>\n                  <Button variant="outlined" disabled={isDeleting}>\n                    Cancel\n                  </Button>\n                </AlertDialog.Cancel>\n                <AlertDialog.Action asChild>\n                  <Button theme="red" onPress={handleDelete} disabled={isDeleting} iconAfter={isDeleting ? <Spinner /> : null}>\n                    {isDeleting ? \'Deleting...\' : \'Delete Account\'}\n                  </Button>\n                </AlertDialog.Action>\n              </XStack>\n            </YStack>\n          </XStack>\n        </StyledContent>\n      </AlertDialog.Portal>\n    </AlertDialog>;\n}',...DestructiveAction.parameters?.docs?.source}}}}}]);