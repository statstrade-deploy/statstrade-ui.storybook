"use strict";(self.webpackChunkstorybook_app=self.webpackChunkstorybook_app||[]).push([[245],{"../../packages/ui/src/stories/base/FontLanguage.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AdvancedTypography:()=>AdvancedTypography,FontFamilyShowcase:()=>FontFamilyShowcase,FontWeightAndStyle:()=>FontWeightAndStyle,LanguageAndLocale:()=>LanguageAndLocale,TextHierarchy:()=>TextHierarchy,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/next/dist/compiled/react/index.js"),tamagui__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/tamagui/dist/esm/views/Text.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@tamagui/stacks/dist/esm/Stacks.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/tamagui/dist/esm/index.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/@tamagui/web/dist/esm/views/FontLanguage.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../../node_modules/@tamagui/label/dist/esm/Label.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("../../node_modules/tamagui/dist/esm/views/TextArea.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("../../node_modules/@tamagui/select/dist/esm/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"base/FontLanguage",component:tamagui__WEBPACK_IMPORTED_MODULE_2__.E,parameters:{layout:"centered",docs:{description:{component:"Demonstration of Tamagui font and language features"}}}},FontFamilyShowcase=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$4",padding:"$4",maxWidth:800,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.H1,{children:"Font Family Showcase"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$3",children:[{name:"System",value:"$body"},{name:"Mono",value:"$mono"},{name:"Heading",value:"$heading"},{name:"Serif",value:"$serif"},{name:"Sans",value:"$sans"}].map((({name,value})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$1",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontSize:"$5",fontWeight:"bold",color:"$gray12",children:name}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.w,{fontFamily:value,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{padding:"$4",backgroundColor:"$gray3",borderRadius:"$4",borderWidth:1,borderColor:"$borderColor",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontFamily:value,fontSize:"$6",children:"The quick brown fox jumps over the lazy dog"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontFamily:value,fontSize:"$3",color:"$gray11",children:[value," â€¢ 1234567890 !@#$%^&*()"]})]})})]},name)))})]}),TextHierarchy=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$4",padding:"$4",maxWidth:800,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.H1,{children:"Text Hierarchy"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{children:"Demonstrating the different text hierarchy components in Tamagui."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$6",marginTop:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{color:"$gray11",fontSize:"$3",children:"Headings"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.H1,{children:"Heading 1 (H1)"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.H2,{children:"Heading 2 (H2)"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.H3,{children:"Heading 3 (H3)"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.H4,{children:"Heading 4 (H4)"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.H5,{children:"Heading 5 (H5)"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.H6,{children:"Heading 6 (H6)"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{color:"$gray11",fontSize:"$3",children:"Paragraphs"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Paragraph,{children:"This is a standard paragraph. It demonstrates the default text styling for body copy. You can use it for longer blocks of text that form the main content of your page."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Paragraph,{size:"$2",color:"$gray11",children:"This is a smaller paragraph with muted color, useful for secondary information or captions."})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{color:"$gray11",fontSize:"$3",children:"Sizable Text"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.lW,{space:"$4",flexWrap:"wrap",gap:"$2",children:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15].map((size=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{alignItems:"center",minWidth:60,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.SizableText,{size:`$${size}`,children:"Aa"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontSize:"$1",color:"$gray10",children:["$",size]})]},size)))})]})]})]}),FontWeightAndStyle=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$4",padding:"$4",maxWidth:800,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.H1,{children:"Font Weight & Style"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$6",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.H3,{children:"Font Weights"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$2",children:["100","200","300","400","500","600","700","800","900","bold"].map((weight=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.lW,{alignItems:"center",space:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{width:60,color:"$gray11",fontSize:"$3",children:weight}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontWeight:weight,fontSize:"$5",children:"The quick brown fox jumps over the lazy dog"})]},weight)))})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.H3,{children:"Font Styles"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$2",children:["normal","italic"].map((style=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.lW,{alignItems:"center",space:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{width:60,color:"$gray11",fontSize:"$3",textTransform:"capitalize",children:style}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontStyle:style,fontSize:"$5",children:"The quick brown fox jumps over the lazy dog"})]},style)))})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.H3,{children:"Text Transforms"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$2",children:["none","capitalize","uppercase","lowercase"].map((transform=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.lW,{alignItems:"center",space:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{width:100,color:"$gray11",fontSize:"$3",children:transform}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{textTransform:transform,fontSize:"$5",children:"the quick brown fox"})]},transform)))})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.H3,{children:"Text Decoration"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$2",children:[{value:"none",label:"None"},{value:"underline",label:"Underline"},{value:"line-through",label:"Line Through"},{value:"underline line-through",label:"Both"}].map((({value,label})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.lW,{alignItems:"center",space:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{width:100,color:"$gray11",fontSize:"$3",children:label}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{textDecoration:value,fontSize:"$5",children:"The quick brown fox"})]},value)))})]})]})]}),AdvancedTypography=()=>{const[text,setText]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("The quick brown fox jumps over the lazy dog"),[fontSize,setFontSize]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("$5"),[lineHeight,setLineHeight]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("$1"),[letterSpacing,setLetterSpacing]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("$0"),[fontVariant,setFontVariant]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("normal");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$4",padding:"$4",maxWidth:800,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.H1,{children:"Advanced Typography"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_6__.JU,{htmlFor:"text-input",children:"Sample Text"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_7__.f,{id:"text-input",value:text,onChangeText:setText,minHeight:80})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.lW,{space:"$4",flexWrap:"wrap",gap:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{flex:1,minWidth:200,space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_6__.JU,{htmlFor:"font-size",children:"Font Size"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.l6,{id:"font-size",value:fontSize,onValueChange:val=>setFontSize(val),children:[{label:"XS ($2)",value:"$2"},{label:"SM ($3)",value:"$3"},{label:"MD ($4)",value:"$4"},{label:"LG ($5)",value:"$5"},{label:"XL ($6)",value:"$6"},{label:"2XL ($8)",value:"$8"},{label:"3XL ($10)",value:"$10"}].map((({label,value})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.l6.Item,{value,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.l6.ItemText,{children:label})},value)))})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{flex:1,minWidth:200,space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_6__.JU,{htmlFor:"line-height",children:"Line Height"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.l6,{id:"line-height",value:lineHeight,onValueChange:val=>setLineHeight(val),children:[{label:"Tight ($0.75)",value:"$0.75"},{label:"Normal ($1)",value:"$1"},{label:"Relaxed ($1.5)",value:"$1.5"},{label:"Loose ($2)",value:"$2"}].map((({label,value})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.l6.Item,{value,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.l6.ItemText,{children:label})},value)))})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{flex:1,minWidth:200,space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_6__.JU,{htmlFor:"letter-spacing",children:"Letter Spacing"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.l6,{id:"letter-spacing",value:letterSpacing,onValueChange:val=>setLetterSpacing(val),children:[{label:"Tighter ($-1)",value:"$-1"},{label:"Tight ($-0.5)",value:"$-0.5"},{label:"Normal ($0)",value:"$0"},{label:"Wide ($0.5)",value:"$0.5"},{label:"Wider ($1)",value:"$1"}].map((({label,value})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.l6.Item,{value,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.l6.ItemText,{children:label})},value)))})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{flex:1,minWidth:200,space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_6__.JU,{htmlFor:"font-variant",children:"Font Variant"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.l6,{id:"font-variant",value:fontVariant,onValueChange:val=>setFontVariant(val),children:[{label:"Normal",value:"normal"},{label:"Small Caps",value:"small-caps"},{label:"All Small Caps",value:"all-small-caps"},{label:"Petite Caps",value:"petite-caps"},{label:"All Petite Caps",value:"all-petite-caps"},{label:"Unicase",value:"unicase"},{label:"Titling Caps",value:"titling-caps"}].map((({label,value})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.l6.Item,{value,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.l6.ItemText,{children:label})},value)))})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{marginTop:"$4",padding:"$4",backgroundColor:"$gray2",borderRadius:"$4",borderWidth:1,borderColor:"$borderColor",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontSize,lineHeight,letterSpacing,fontVariant,textAlign:"center",children:text||"Enter some text above..."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.lW,{marginTop:"$4",paddingTop:"$4",borderTopWidth:1,borderTopColor:"$borderColor",justifyContent:"space-between",alignItems:"center",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontSize:"$2",color:"$gray11",children:[text.length," characters â€¢ ",text.split(/\s+/).filter(Boolean).length," words"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontSize:"$2",color:"$gray11",children:["Font: ",fontSize," â€¢ Line: ",lineHeight," â€¢ Spacing: ",letterSpacing]})]})]})]})]})},LanguageAndLocale=()=>{const[locale,setLocale]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("en-US"),[number,setNumber]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1234.56),[date,setDate]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Date),[text,setText]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("The quick brown fox jumps over the lazy dog"),formatNumber=(value,locale)=>{try{return new Intl.NumberFormat(locale).format(value)}catch(e){return value.toString()}},formatDate=(date,locale)=>{try{return new Intl.DateTimeFormat(locale,{year:"numeric",month:"long",day:"numeric",weekday:"long",hour:"2-digit",minute:"2-digit",second:"2-digit",timeZoneName:"short"}).format(date)}catch(e){return date.toString()}},getLanguageName=locale=>{try{return new Intl.DisplayNames([locale],{type:"language"}).of(locale.split("-")[0])}catch(e){return locale}},localeInfo=(locale=>{try{var _parts_find,_parts_find1,_textInfo,_this;const parts=new Intl.NumberFormat(locale).formatToParts(1234.56),decimal=(null===(_parts_find=parts.find((part=>"decimal"===part.type)))||void 0===_parts_find?void 0:_parts_find.value)||".";return{decimal,group:(null===(_parts_find1=parts.find((part=>"group"===part.type)))||void 0===_parts_find1?void 0:_parts_find1.value)||",",example:formatNumber(1234.56,locale),date:formatDate(new Date,locale),direction:(null===(_this=new Intl.Locale(locale))||void 0===_this||null===(_textInfo=_this.textInfo)||void 0===_textInfo?void 0:_textInfo.direction)||"ltr"}}catch(e){return{decimal:".",group:",",example:"1,234.56",date:(new Date).toString(),direction:"ltr"}}})(locale);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$4",padding:"$4",maxWidth:1e3,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.H1,{children:"Language & Locale"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$6",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_6__.JU,{htmlFor:"locale-select",children:"Select Locale"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.l6,{id:"locale-select",value:locale,onValueChange:setLocale,children:[{value:"en-US",label:"English (US)"},{value:"en-GB",label:"English (UK)"},{value:"es-ES",label:"Spanish (Spain)"},{value:"fr-FR",label:"French"},{value:"de-DE",label:"German"},{value:"ja-JP",label:"Japanese"},{value:"zh-CN",label:"Chinese (Simplified)"},{value:"ar-EG",label:"Arabic (Egypt)"},{value:"hi-IN",label:"Hindi"},{value:"ru-RU",label:"Russian"}].map((({value,label})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.l6.Item,{value,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.l6.ItemText,{children:label})},value)))})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{dir:localeInfo.direction,padding:"$4",backgroundColor:"$gray2",borderRadius:"$4",borderWidth:1,borderColor:"$borderColor",space:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontSize:"$3",color:"$gray11",children:"Language"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontSize:"$5",fontWeight:"bold",children:[getLanguageName(locale)," (",locale,")"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontSize:"$2",color:"$gray10",children:["Text direction: ",localeInfo.direction.toUpperCase()]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontSize:"$3",color:"$gray11",children:"Number Format"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontSize:"$5",children:formatNumber(number,locale)}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontSize:"$2",color:"$gray10",children:['Decimal: "',localeInfo.decimal,'" â€¢ Group: "',localeInfo.group,'" â€¢ Example: ',localeInfo.example]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontSize:"$3",color:"$gray11",children:"Date & Time"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontSize:"$5",children:formatDate(date,locale)})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontSize:"$3",color:"$gray11",children:"Sample Text"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontSize:"$5",textAlign:"rtl"===localeInfo.direction?"right":"left",children:text})]}),"rtl"===localeInfo.direction&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{marginTop:"$4",padding:"$4",backgroundColor:"$blue2",borderRadius:"$4",borderLeftWidth:4,borderLeftColor:"$blue8",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontSize:"$3",color:"$blue11",children:"Right-to-Left (RTL) text direction is active for this locale. Text alignment and layout will automatically adjust for RTL languages."})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.H3,{children:"Using with FontLanguage"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{children:["The ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontFamily:"$mono",fontSize:"$3",children:"FontLanguage"})," component can be used to apply language-specific typography settings:"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{marginTop:"$4",padding:"$4",backgroundColor:"$gray2",borderRadius:"$4",borderWidth:1,borderColor:"$borderColor",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.w,{language:locale,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{fontSize:"$5",fontWeight:"bold",children:[getLanguageName(locale)," (",locale,")"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{children:text}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{children:["Number: ",formatNumber(number,locale)]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{children:["Date: ",formatDate(date,locale)]})]})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.E,{marginTop:"$4",fontSize:"$2",color:"$gray11",children:"Note: For full language support, ensure you have the appropriate fonts installed that include glyphs for the selected language."})]})]})]})},__namedExportsOrder=["FontFamilyShowcase","TextHierarchy","FontWeightAndStyle","AdvancedTypography","LanguageAndLocale"];FontFamilyShowcase.parameters={...FontFamilyShowcase.parameters,docs:{...FontFamilyShowcase.parameters?.docs,source:{originalSource:'() => {\n  const fontFamilies: {\n    name: string;\n    value: FontFamilyTokens;\n  }[] = [{\n    name: \'System\',\n    value: \'$body\'\n  }, {\n    name: \'Mono\',\n    value: \'$mono\'\n  }, {\n    name: \'Heading\',\n    value: \'$heading\'\n  }, {\n    name: \'Serif\',\n    value: \'$serif\'\n  }, {\n    name: \'Sans\',\n    value: \'$sans\'\n  }];\n  return <YStack space="$4" padding="$4" maxWidth={800}>\n      <H1>Font Family Showcase</H1>\n      \n      <YStack space="$3">\n        {fontFamilies.map(({\n        name,\n        value\n      }) => <YStack key={name} space="$1">\n            <Text fontSize="$5" fontWeight="bold" color="$gray12">{name}</Text>\n            <FontLanguage fontFamily={value}>\n              <YStack padding="$4" backgroundColor="$gray3" borderRadius="$4" borderWidth={1} borderColor="$borderColor">\n                <Text fontFamily={value} fontSize="$6">\n                  The quick brown fox jumps over the lazy dog\n                </Text>\n                <Text fontFamily={value} fontSize="$3" color="$gray11">\n                  {value} â€¢ 1234567890 !@#$%^&*()\n                </Text>\n              </YStack>\n            </FontLanguage>\n          </YStack>)}\n      </YStack>\n    </YStack>;\n}',...FontFamilyShowcase.parameters?.docs?.source}}},TextHierarchy.parameters={...TextHierarchy.parameters,docs:{...TextHierarchy.parameters?.docs,source:{originalSource:'() => {\n  return <YStack space="$4" padding="$4" maxWidth={800}>\n      <H1>Text Hierarchy</H1>\n      <Text>Demonstrating the different text hierarchy components in Tamagui.</Text>\n      \n      <YStack space="$6" marginTop="$4">\n        <YStack>\n          <Text color="$gray11" fontSize="$3">Headings</Text>\n          <H1>Heading 1 (H1)</H1>\n          <H2>Heading 2 (H2)</H2>\n          <H3>Heading 3 (H3)</H3>\n          <H4>Heading 4 (H4)</H4>\n          <H5>Heading 5 (H5)</H5>\n          <H6>Heading 6 (H6)</H6>\n        </YStack>\n        \n        <YStack>\n          <Text color="$gray11" fontSize="$3">Paragraphs</Text>\n          <Paragraph>\n            This is a standard paragraph. It demonstrates the default text styling for body copy. \n            You can use it for longer blocks of text that form the main content of your page.\n          </Paragraph>\n          <Paragraph size="$2" color="$gray11">\n            This is a smaller paragraph with muted color, useful for secondary information or captions.\n          </Paragraph>\n        </YStack>\n        \n        <YStack>\n          <Text color="$gray11" fontSize="$3">Sizable Text</Text>\n          <XStack space="$4" flexWrap="wrap" gap="$2">\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15].map(size => <YStack key={size} alignItems="center" minWidth={60}>\n                <SizableText size={`$${size}` as FontSizeTokens}>\n                  Aa\n                </SizableText>\n                <Text fontSize="$1" color="$gray10">${size}</Text>\n              </YStack>)}\n          </XStack>\n        </YStack>\n      </YStack>\n    </YStack>;\n}',...TextHierarchy.parameters?.docs?.source}}},FontWeightAndStyle.parameters={...FontWeightAndStyle.parameters,docs:{...FontWeightAndStyle.parameters?.docs,source:{originalSource:'() => {\n  const weights: FontWeightTokens[] = [\'100\', \'200\', \'300\', \'400\', \'500\', \'600\', \'700\', \'800\', \'900\', \'bold\'];\n  const styles: FontStyleTokens[] = [\'normal\', \'italic\'];\n  return <YStack space="$4" padding="$4" maxWidth={800}>\n      <H1>Font Weight & Style</H1>\n      \n      <YStack space="$6">\n        <YStack>\n          <H3>Font Weights</H3>\n          <YStack space="$2">\n            {weights.map(weight => <XStack key={weight} alignItems="center" space="$4">\n                <Text width={60} color="$gray11" fontSize="$3">{weight}</Text>\n                <Text fontWeight={weight} fontSize="$5">\n                  The quick brown fox jumps over the lazy dog\n                </Text>\n              </XStack>)}\n          </YStack>\n        </YStack>\n        \n        <YStack>\n          <H3>Font Styles</H3>\n          <YStack space="$2">\n            {styles.map(style => <XStack key={style} alignItems="center" space="$4">\n                <Text width={60} color="$gray11" fontSize="$3" textTransform="capitalize">\n                  {style}\n                </Text>\n                <Text fontStyle={style} fontSize="$5">\n                  The quick brown fox jumps over the lazy dog\n                </Text>\n              </XStack>)}\n          </YStack>\n        </YStack>\n        \n        <YStack>\n          <H3>Text Transforms</H3>\n          <YStack space="$2">\n            {[\'none\', \'capitalize\', \'uppercase\', \'lowercase\'].map(transform => <XStack key={transform} alignItems="center" space="$4">\n                <Text width={100} color="$gray11" fontSize="$3">\n                  {transform}\n                </Text>\n                <Text textTransform={transform as any} fontSize="$5">\n                  the quick brown fox\n                </Text>\n              </XStack>)}\n          </YStack>\n        </YStack>\n        \n        <YStack>\n          <H3>Text Decoration</H3>\n          <YStack space="$2">\n            {[{\n            value: \'none\',\n            label: \'None\'\n          }, {\n            value: \'underline\',\n            label: \'Underline\'\n          }, {\n            value: \'line-through\',\n            label: \'Line Through\'\n          }, {\n            value: \'underline line-through\',\n            label: \'Both\'\n          }].map(({\n            value,\n            label\n          }) => <XStack key={value} alignItems="center" space="$4">\n                <Text width={100} color="$gray11" fontSize="$3">\n                  {label}\n                </Text>\n                <Text textDecoration={value as any} fontSize="$5">\n                  The quick brown fox\n                </Text>\n              </XStack>)}\n          </YStack>\n        </YStack>\n      </YStack>\n    </YStack>;\n}',...FontWeightAndStyle.parameters?.docs?.source}}},AdvancedTypography.parameters={...AdvancedTypography.parameters,docs:{...AdvancedTypography.parameters?.docs,source:{originalSource:"() => {\n  const [text, setText] = useState('The quick brown fox jumps over the lazy dog');\n  const [fontSize, setFontSize] = useState<FontSizeTokens>('$5');\n  const [lineHeight, setLineHeight] = useState<FontLineHeightTokens>('$1');\n  const [letterSpacing, setLetterSpacing] = useState<FontLetterSpacingTokens>('$0');\n  const [fontVariant, setFontVariant] = useState<FontVariantTokens>('normal');\n  const fontSizes: {\n    label: string;\n    value: FontSizeTokens;\n  }[] = [{\n    label: 'XS ($2)',\n    value: '$2'\n  }, {\n    label: 'SM ($3)',\n    value: '$3'\n  }, {\n    label: 'MD ($4)',\n    value: '$4'\n  }, {\n    label: 'LG ($5)',\n    value: '$5'\n  }, {\n    label: 'XL ($6)',\n    value: '$6'\n  }, {\n    label: '2XL ($8)',\n    value: '$8'\n  }, {\n    label: '3XL ($10)',\n    value: '$10'\n  }];\n  const lineHeights: {\n    label: string;\n    value: FontLineHeightTokens;\n  }[] = [{\n    label: 'Tight ($0.75)',\n    value: '$0.75'\n  }, {\n    label: 'Normal ($1)',\n    value: '$1'\n  }, {\n    label: 'Relaxed ($1.5)',\n    value: '$1.5'\n  }, {\n    label: 'Loose ($2)',\n    value: '$2'\n  }];\n  const letterSpacings: {\n    label: string;\n    value: FontLetterSpacingTokens;\n  }[] = [{\n    label: 'Tighter ($-1)',\n    value: '$-1'\n  }, {\n    label: 'Tight ($-0.5)',\n    value: '$-0.5'\n  }, {\n    label: 'Normal ($0)',\n    value: '$0'\n  }, {\n    label: 'Wide ($0.5)',\n    value: '$0.5'\n  }, {\n    label: 'Wider ($1)',\n    value: '$1'\n  }];\n  const fontVariants: {\n    label: string;\n    value: FontVariantTokens;\n  }[] = [{\n    label: 'Normal',\n    value: 'normal'\n  }, {\n    label: 'Small Caps',\n    value: 'small-caps'\n  }, {\n    label: 'All Small Caps',\n    value: 'all-small-caps'\n  }, {\n    label: 'Petite Caps',\n    value: 'petite-caps'\n  }, {\n    label: 'All Petite Caps',\n    value: 'all-petite-caps'\n  }, {\n    label: 'Unicase',\n    value: 'unicase'\n  }, {\n    label: 'Titling Caps',\n    value: 'titling-caps'\n  }];\n  return <YStack space=\"$4\" padding=\"$4\" maxWidth={800}>\n      <H1>Advanced Typography</H1>\n      \n      <YStack space=\"$4\">\n        <YStack space=\"$2\">\n          <Label htmlFor=\"text-input\">Sample Text</Label>\n          <TextArea id=\"text-input\" value={text} onChangeText={setText} minHeight={80} />\n        </YStack>\n        \n        <XStack space=\"$4\" flexWrap=\"wrap\" gap=\"$4\">\n          <YStack flex={1} minWidth={200} space=\"$2\">\n            <Label htmlFor=\"font-size\">Font Size</Label>\n            <Select id=\"font-size\" value={fontSize} onValueChange={val => setFontSize(val as FontSizeTokens)}>\n              {fontSizes.map(({\n              label,\n              value\n            }) => <Select.Item key={value} value={value}>\n                  <Select.ItemText>{label}</Select.ItemText>\n                </Select.Item>)}\n            </Select>\n          </YStack>\n          \n          <YStack flex={1} minWidth={200} space=\"$2\">\n            <Label htmlFor=\"line-height\">Line Height</Label>\n            <Select id=\"line-height\" value={lineHeight} onValueChange={val => setLineHeight(val as FontLineHeightTokens)}>\n              {lineHeights.map(({\n              label,\n              value\n            }) => <Select.Item key={value} value={value}>\n                  <Select.ItemText>{label}</Select.ItemText>\n                </Select.Item>)}\n            </Select>\n          </YStack>\n          \n          <YStack flex={1} minWidth={200} space=\"$2\">\n            <Label htmlFor=\"letter-spacing\">Letter Spacing</Label>\n            <Select id=\"letter-spacing\" value={letterSpacing} onValueChange={val => setLetterSpacing(val as FontLetterSpacingTokens)}>\n              {letterSpacings.map(({\n              label,\n              value\n            }) => <Select.Item key={value} value={value}>\n                  <Select.ItemText>{label}</Select.ItemText>\n                </Select.Item>)}\n            </Select>\n          </YStack>\n          \n          <YStack flex={1} minWidth={200} space=\"$2\">\n            <Label htmlFor=\"font-variant\">Font Variant</Label>\n            <Select id=\"font-variant\" value={fontVariant} onValueChange={val => setFontVariant(val as FontVariantTokens)}>\n              {fontVariants.map(({\n              label,\n              value\n            }) => <Select.Item key={value} value={value}>\n                  <Select.ItemText>{label}</Select.ItemText>\n                </Select.Item>)}\n            </Select>\n          </YStack>\n        </XStack>\n        \n        <YStack marginTop=\"$4\" padding=\"$4\" backgroundColor=\"$gray2\" borderRadius=\"$4\" borderWidth={1} borderColor=\"$borderColor\">\n          <Text fontSize={fontSize} lineHeight={lineHeight} letterSpacing={letterSpacing} fontVariant={fontVariant} textAlign=\"center\">\n            {text || 'Enter some text above...'}\n          </Text>\n          \n          <XStack marginTop=\"$4\" paddingTop=\"$4\" borderTopWidth={1} borderTopColor=\"$borderColor\" justifyContent=\"space-between\" alignItems=\"center\">\n            <Text fontSize=\"$2\" color=\"$gray11\">\n              {text.length} characters â€¢ {text.split(/\\s+/).filter(Boolean).length} words\n            </Text>\n            <Text fontSize=\"$2\" color=\"$gray11\">\n              Font: {fontSize} â€¢ Line: {lineHeight} â€¢ Spacing: {letterSpacing}\n            </Text>\n          </XStack>\n        </YStack>\n      </YStack>\n    </YStack>;\n}",...AdvancedTypography.parameters?.docs?.source}}},LanguageAndLocale.parameters={...LanguageAndLocale.parameters,docs:{...LanguageAndLocale.parameters?.docs,source:{originalSource:'() => {\n  const [locale, setLocale] = useState(\'en-US\');\n  const [number, setNumber] = useState(1234.56);\n  const [date, setDate] = useState(new Date());\n  const [text, setText] = useState(\'The quick brown fox jumps over the lazy dog\');\n  const locales = [{\n    value: \'en-US\',\n    label: \'English (US)\'\n  }, {\n    value: \'en-GB\',\n    label: \'English (UK)\'\n  }, {\n    value: \'es-ES\',\n    label: \'Spanish (Spain)\'\n  }, {\n    value: \'fr-FR\',\n    label: \'French\'\n  }, {\n    value: \'de-DE\',\n    label: \'German\'\n  }, {\n    value: \'ja-JP\',\n    label: \'Japanese\'\n  }, {\n    value: \'zh-CN\',\n    label: \'Chinese (Simplified)\'\n  }, {\n    value: \'ar-EG\',\n    label: \'Arabic (Egypt)\'\n  }, {\n    value: \'hi-IN\',\n    label: \'Hindi\'\n  }, {\n    value: \'ru-RU\',\n    label: \'Russian\'\n  }];\n  const formatNumber = (value: number, locale: string) => {\n    try {\n      return new Intl.NumberFormat(locale).format(value);\n    } catch (e) {\n      return value.toString();\n    }\n  };\n  const formatDate = (date: Date, locale: string) => {\n    try {\n      return new Intl.DateTimeFormat(locale, {\n        year: \'numeric\',\n        month: \'long\',\n        day: \'numeric\',\n        weekday: \'long\',\n        hour: \'2-digit\',\n        minute: \'2-digit\',\n        second: \'2-digit\',\n        timeZoneName: \'short\'\n      }).format(date);\n    } catch (e) {\n      return date.toString();\n    }\n  };\n  const getLanguageName = (locale: string) => {\n    try {\n      return new Intl.DisplayNames([locale], {\n        type: \'language\'\n      }).of(locale.split(\'-\')[0]);\n    } catch (e) {\n      return locale;\n    }\n  };\n  const getLocaleInfo = (locale: string) => {\n    try {\n      const formatter = new Intl.NumberFormat(locale);\n      const parts = formatter.formatToParts(1234.56);\n      const decimal = parts.find(part => part.type === \'decimal\')?.value || \'.\';\n      const group = parts.find(part => part.type === \'group\')?.value || \',\';\n      return {\n        decimal,\n        group,\n        example: formatNumber(1234.56, locale),\n        date: formatDate(new Date(), locale),\n        direction: new Intl.Locale(locale)?.textInfo?.direction || \'ltr\'\n      };\n    } catch (e) {\n      return {\n        decimal: \'.\',\n        group: \',\',\n        example: \'1,234.56\',\n        date: new Date().toString(),\n        direction: \'ltr\'\n      };\n    }\n  };\n  const localeInfo = getLocaleInfo(locale);\n  return <YStack space="$4" padding="$4" maxWidth={1000}>\n      <H1>Language & Locale</H1>\n      \n      <YStack space="$6">\n        <YStack space="$2">\n          <Label htmlFor="locale-select">Select Locale</Label>\n          <Select id="locale-select" value={locale} onValueChange={setLocale}>\n            {locales.map(({\n            value,\n            label\n          }) => <Select.Item key={value} value={value}>\n                <Select.ItemText>{label}</Select.ItemText>\n              </Select.Item>)}\n          </Select>\n        </YStack>\n        \n        <YStack dir={localeInfo.direction} padding="$4" backgroundColor="$gray2" borderRadius="$4" borderWidth={1} borderColor="$borderColor" space="$4">\n          <YStack>\n            <Text fontSize="$3" color="$gray11">Language</Text>\n            <Text fontSize="$5" fontWeight="bold">\n              {getLanguageName(locale)} ({locale})\n            </Text>\n            <Text fontSize="$2" color="$gray10">\n              Text direction: {localeInfo.direction.toUpperCase()}\n            </Text>\n          </YStack>\n          \n          <YStack>\n            <Text fontSize="$3" color="$gray11">Number Format</Text>\n            <Text fontSize="$5">\n              {formatNumber(number, locale)}\n            </Text>\n            <Text fontSize="$2" color="$gray10">\n              Decimal: "{localeInfo.decimal}" â€¢ Group: "{localeInfo.group}" â€¢ Example: {localeInfo.example}\n            </Text>\n          </YStack>\n          \n          <YStack>\n            <Text fontSize="$3" color="$gray11">Date & Time</Text>\n            <Text fontSize="$5">\n              {formatDate(date, locale)}\n            </Text>\n          </YStack>\n          \n          <YStack>\n            <Text fontSize="$3" color="$gray11">Sample Text</Text>\n            <Text fontSize="$5" textAlign={localeInfo.direction === \'rtl\' ? \'right\' : \'left\'}>\n              {text}\n            </Text>\n          </YStack>\n          \n          {localeInfo.direction === \'rtl\' && <YStack marginTop="$4" padding="$4" backgroundColor="$blue2" borderRadius="$4" borderLeftWidth={4} borderLeftColor="$blue8">\n              <Text fontSize="$3" color="$blue11">\n                Right-to-Left (RTL) text direction is active for this locale. \n                Text alignment and layout will automatically adjust for RTL languages.\n              </Text>\n            </YStack>}\n        </YStack>\n        \n        <YStack>\n          <H3>Using with FontLanguage</H3>\n          <Text>\n            The <Text fontFamily="$mono" fontSize="$3">FontLanguage</Text> component can be used to apply \n            language-specific typography settings:\n          </Text>\n          \n          <YStack marginTop="$4" padding="$4" backgroundColor="$gray2" borderRadius="$4" borderWidth={1} borderColor="$borderColor">\n            <FontLanguage language={locale}>\n              <YStack space="$4">\n                <Text fontSize="$5" fontWeight="bold">\n                  {getLanguageName(locale)} ({locale})\n                </Text>\n                <Text>\n                  {text}\n                </Text>\n                <Text>\n                  Number: {formatNumber(number, locale)}\n                </Text>\n                <Text>\n                  Date: {formatDate(date, locale)}\n                </Text>\n              </YStack>\n            </FontLanguage>\n          </YStack>\n          \n          <Text marginTop="$4" fontSize="$2" color="$gray11">\n            Note: For full language support, ensure you have the appropriate fonts installed \n            that include glyphs for the selected language.\n          </Text>\n        </YStack>\n      </YStack>\n    </YStack>;\n}',...LanguageAndLocale.parameters?.docs?.source}}}}}]);