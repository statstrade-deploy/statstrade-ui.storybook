"use strict";(self.webpackChunkstorybook_app=self.webpackChunkstorybook_app||[]).push([[24465],{"../../packages/ui/src/stories/base/TamaguiExports.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CoreExportsShowcase:()=>CoreExportsShowcase,ResponsiveExample:()=>ResponsiveExample,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/next/dist/compiled/react/index.js"),tamagui__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@tamagui/core/dist/esm/index.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/tamagui/dist/esm/views/Text.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/@tamagui/web/dist/esm/styled.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/@tamagui/web/dist/esm/hooks/useTheme.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../../node_modules/@tamagui/web/dist/esm/config.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("../../node_modules/@tamagui/web/dist/esm/hooks/useProps.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("../../node_modules/tamagui/dist/esm/index.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("../../node_modules/@tamagui/web/dist/esm/helpers/isTamaguiComponent.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("../../node_modules/@tamagui/button/dist/esm/Button.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__("../../node_modules/@tamagui/stacks/dist/esm/Stacks.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__("../../node_modules/@tamagui/separator/dist/esm/Separator.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__("../../node_modules/tamagui/dist/esm/views/Input.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"base/TamaguiExports",component:tamagui__WEBPACK_IMPORTED_MODULE_2__.View,parameters:{layout:"centered",docs:{description:{component:"Demonstration of Tamagui core exports including helpers, hooks, and type utilities"}}}},CodeBlock=({children})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{backgroundColor:"$gray3",padding:"$3",borderRadius:"$2",marginVertical:"$2",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{fontFamily:"$mono",fontSize:"$2",children})}),ThemedBox=(0,tamagui__WEBPACK_IMPORTED_MODULE_4__.I)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Stack,{padding:"$4",borderRadius:"$4",backgroundColor:"$background",borderWidth:1,borderColor:"$borderColor",alignItems:"center",justifyContent:"center",minWidth:100,minHeight:60}),CoreExportsShowcase=()=>{(0,tamagui__WEBPACK_IMPORTED_MODULE_5__.D)();const[tokenName,setTokenName]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("$color.blue10"),[expandedProps,setExpandedProps]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({}),[styleProps,setStyleProps]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({}),exampleProps={backgroundColor:"$red9",p:"$2",$sm:{backgroundColor:"$blue9",p:"$4"},$md:{backgroundColor:"$green9",p:"$6"}},config=(0,tamagui__WEBPACK_IMPORTED_MODULE_6__.zj)(),tokens=(0,tamagui__WEBPACK_IMPORTED_MODULE_6__.RQ)(),tokenValue=(0,tamagui__WEBPACK_IMPORTED_MODULE_6__.N8)(tokenName),tokenVar=(0,tamagui__WEBPACK_IMPORTED_MODULE_6__.gf)(tokenName),activeProps=(0,tamagui__WEBPACK_IMPORTED_MODULE_7__.YY)(exampleProps),activeStyle=(0,tamagui__WEBPACK_IMPORTED_MODULE_7__.X3)(exampleProps),expandedShorthands=(0,tamagui__WEBPACK_IMPORTED_MODULE_8__.getExpandedShorthands)({p:"$2",m:"$4",bg:"$red9",$sm:{p:"$4",m:"$6"}}),isTamaguiView=(0,tamagui__WEBPACK_IMPORTED_MODULE_9__.S)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View),isTamaguiButton=(0,tamagui__WEBPACK_IMPORTED_MODULE_9__.S)(tamagui__WEBPACK_IMPORTED_MODULE_10__.$n),isTamaguiElement=isTamaguiElement((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{}),"View");return(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{setExpandedProps(activeProps),setStyleProps(activeStyle)}),[activeProps,activeStyle]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_11__.Se,{space:"$4",padding:"$4",maxWidth:800,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.H2,{children:"Tamagui Core Exports"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_12__.w,{marginVertical:"$4"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.H3,{children:"1. Config and Tokens"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_11__.Se,{space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{children:"Get Tamagui config and tokens:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CodeBlock,{children:"const config = getConfig();\nconst tokens = getTokens();"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{children:["Theme keys: ",Object.keys(config.themes||{}).join(", ")]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{children:["Token categories: ",Object.keys(tokens).join(", ")]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_11__.Se,{space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.H4,{children:"Token Lookup"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_11__.lW,{space:"$2",alignItems:"center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_13__.pd,{value:tokenName,onChangeText:setTokenName,placeholder:"Enter token name (e.g., $color.blue10)",flex:1})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_11__.Se,{space:"$1",marginTop:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{children:["Token value: ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{fontWeight:"bold",children:tokenValue})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{children:["Token variable: ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{fontFamily:"$mono",children:tokenVar})]}),tokenValue&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{width:40,height:40,backgroundColor:tokenName,borderRadius:"$2",borderWidth:1,borderColor:"$borderColor",marginTop:"$2"})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_12__.w,{marginVertical:"$4"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.H3,{children:"2. useProps and useStyle"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_11__.Se,{space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{children:"Example props with media queries and shorthands:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CodeBlock,{children:"const exampleProps = {\n  backgroundColor: '$red9',\n  p: '$2',\n  $sm: { \n    backgroundColor: '$blue9',\n    p: '$4'\n  },\n  $md: {\n    backgroundColor: '$green9',\n    p: '$6'\n  }\n};"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{children:"Active props (resolved for current breakpoint):"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CodeBlock,{children:JSON.stringify(expandedProps,null,2)}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{children:"Active style (with resolved values):"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CodeBlock,{children:JSON.stringify(styleProps,null,2)}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemedBox,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{color:"white",children:"Styled with exampleProps"})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_12__.w,{marginVertical:"$4"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.H3,{children:"3. Shorthand Expansion"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_11__.Se,{space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{children:"Expanded shorthands example:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CodeBlock,{children:"const expanded = getExpandedShorthands({\n  p: '$2',\n  m: '$4',\n  bg: '$red9',\n  $sm: { p: '$4', m: '$6' }\n});"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{children:"Expanded result:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CodeBlock,{children:JSON.stringify(expandedShorthands,null,2)})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_12__.w,{marginVertical:"$4"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.H3,{children:"4. Type Checking"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_11__.Se,{space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{children:"Component type checking:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CodeBlock,{children:`isTamaguiComponent(View): ${isTamaguiView}\nisTamaguiComponent(Button): ${isTamaguiButton}\nisTamaguiElement(<View />, 'View'): ${isTamaguiElement}`})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_12__.w,{marginVertical:"$4"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.H3,{children:"5. Themeable Component"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_11__.Se,{space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{children:"Example of a themeable component using styled():"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CodeBlock,{children:"const ThemedBox = styled(Stack, {\n  padding: '$4',\n  borderRadius: '$4',\n  backgroundColor: '$background',\n  borderWidth: 1,\n  borderColor: '$borderColor',\n  alignItems: 'center',\n  justifyContent: 'center',\n  minWidth: 100,\n  minHeight: 60,\n});"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_11__.lW,{space:"$4",marginTop:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemedBox,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{children:"Default"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemedBox,{theme:"red",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{children:"Red Theme"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ThemedBox,{theme:"blue",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{children:"Blue Theme"})})]})]})]})},ResponsiveExample=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_11__.Se,{space:"$4",padding:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.H3,{children:"Responsive Example"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{children:"Resize your browser to see the responsive styles in action."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{padding:"$2",$sm:{padding:"$4",backgroundColor:"$blue4"},$md:{padding:"$6",backgroundColor:"$green4"},$lg:{padding:"$8",backgroundColor:"$red4"},borderWidth:1,borderColor:"$borderColor",borderRadius:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{children:"This box changes padding and background color based on viewport size."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{marginTop:"$2",fontSize:"$2",children:["Current breakpoint: ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.E,{fontWeight:"bold",children:window.innerWidth<600?"sm":window.innerWidth<900?"md":"lg"})]})]})]}),__namedExportsOrder=["CoreExportsShowcase","ResponsiveExample"];CoreExportsShowcase.parameters={...CoreExportsShowcase.parameters,docs:{...CoreExportsShowcase.parameters?.docs,source:{originalSource:"() => {\n  const theme = useTheme();\n  const [tokenName, setTokenName] = useState('$color.blue10');\n  const [expandedProps, setExpandedProps] = useState<Record<string, any>>({});\n  const [styleProps, setStyleProps] = useState<Record<string, any>>({});\n\n  // Example props with media queries and shorthands\n  const exampleProps = {\n    backgroundColor: '$red9',\n    p: '$2',\n    $sm: {\n      backgroundColor: '$blue9',\n      p: '$4'\n    },\n    $md: {\n      backgroundColor: '$green9',\n      p: '$6'\n    }\n  };\n\n  // Get config and tokens\n  const config = getConfig();\n  const tokens = getTokens();\n  const tokenValue = getTokenValue(tokenName);\n  const tokenVar = getToken(tokenName);\n\n  // Example of using useProps and useStyle\n  const activeProps = useProps(exampleProps);\n  const activeStyle = useStyle(exampleProps);\n\n  // Example of expanding shorthands\n  const expandedShorthands = getExpandedShorthands({\n    p: '$2',\n    m: '$4',\n    bg: '$red9',\n    $sm: {\n      p: '$4',\n      m: '$6'\n    }\n  });\n\n  // Check if components are Tamagui components\n  const isTamaguiView = isTamaguiComponent(View);\n  const isTamaguiButton = isTamaguiComponent(Button);\n  const isTamaguiElement = isTamaguiElement(<View />, 'View');\n\n  // Update state when props change\n  useEffect(() => {\n    setExpandedProps(activeProps);\n    setStyleProps(activeStyle);\n  }, [activeProps, activeStyle]);\n  return <YStack space=\"$4\" padding=\"$4\" maxWidth={800}>\n      <H2>Tamagui Core Exports</H2>\n      \n      <Separator marginVertical=\"$4\" />\n      \n      <H3>1. Config and Tokens</H3>\n      \n      <YStack space=\"$2\">\n        <Text>Get Tamagui config and tokens:</Text>\n        <CodeBlock>{`const config = getConfig();\nconst tokens = getTokens();`}</CodeBlock>\n        \n        <Text>Theme keys: {Object.keys(config.themes || {}).join(', ')}</Text>\n        <Text>Token categories: {Object.keys(tokens).join(', ')}</Text>\n      </YStack>\n      \n      <YStack space=\"$2\">\n        <H4>Token Lookup</H4>\n        <XStack space=\"$2\" alignItems=\"center\">\n          <Input value={tokenName} onChangeText={setTokenName} placeholder=\"Enter token name (e.g., $color.blue10)\" flex={1} />\n        </XStack>\n        \n        <YStack space=\"$1\" marginTop=\"$2\">\n          <Text>Token value: <Text fontWeight=\"bold\">{tokenValue}</Text></Text>\n          <Text>Token variable: <Text fontFamily=\"$mono\">{tokenVar}</Text></Text>\n          {tokenValue && <View width={40} height={40} backgroundColor={tokenName} borderRadius=\"$2\" borderWidth={1} borderColor=\"$borderColor\" marginTop=\"$2\" />}\n        </YStack>\n      </YStack>\n      \n      <Separator marginVertical=\"$4\" />\n      \n      <H3>2. useProps and useStyle</H3>\n      \n      <YStack space=\"$2\">\n        <Text>Example props with media queries and shorthands:</Text>\n        <CodeBlock>{`const exampleProps = {\n  backgroundColor: '$red9',\n  p: '$2',\n  $sm: { \n    backgroundColor: '$blue9',\n    p: '$4'\n  },\n  $md: {\n    backgroundColor: '$green9',\n    p: '$6'\n  }\n};`}</CodeBlock>\n        \n        <Text>Active props (resolved for current breakpoint):</Text>\n        <CodeBlock>{JSON.stringify(expandedProps, null, 2)}</CodeBlock>\n        \n        <Text>Active style (with resolved values):</Text>\n        <CodeBlock>{JSON.stringify(styleProps, null, 2)}</CodeBlock>\n        \n        <ThemedBox>\n          <Text color=\"white\">Styled with exampleProps</Text>\n        </ThemedBox>\n      </YStack>\n      \n      <Separator marginVertical=\"$4\" />\n      \n      <H3>3. Shorthand Expansion</H3>\n      \n      <YStack space=\"$2\">\n        <Text>Expanded shorthands example:</Text>\n        <CodeBlock>{`const expanded = getExpandedShorthands({\n  p: '$2',\n  m: '$4',\n  bg: '$red9',\n  $sm: { p: '$4', m: '$6' }\n});`}</CodeBlock>\n        \n        <Text>Expanded result:</Text>\n        <CodeBlock>{JSON.stringify(expandedShorthands, null, 2)}</CodeBlock>\n      </YStack>\n      \n      <Separator marginVertical=\"$4\" />\n      \n      <H3>4. Type Checking</H3>\n      \n      <YStack space=\"$2\">\n        <Text>Component type checking:</Text>\n        <CodeBlock>{`isTamaguiComponent(View): ${isTamaguiView}\nisTamaguiComponent(Button): ${isTamaguiButton}\nisTamaguiElement(<View />, 'View'): ${isTamaguiElement}`}</CodeBlock>\n      </YStack>\n      \n      <Separator marginVertical=\"$4\" />\n      \n      <H3>5. Themeable Component</H3>\n      \n      <YStack space=\"$2\">\n        <Text>Example of a themeable component using styled():</Text>\n        <CodeBlock>{`const ThemedBox = styled(Stack, {\n  padding: '$4',\n  borderRadius: '$4',\n  backgroundColor: '$background',\n  borderWidth: 1,\n  borderColor: '$borderColor',\n  alignItems: 'center',\n  justifyContent: 'center',\n  minWidth: 100,\n  minHeight: 60,\n});`}</CodeBlock>\n        \n        <XStack space=\"$4\" marginTop=\"$2\">\n          <ThemedBox>\n            <Text>Default</Text>\n          </ThemedBox>\n          <ThemedBox theme=\"red\">\n            <Text>Red Theme</Text>\n          </ThemedBox>\n          <ThemedBox theme=\"blue\">\n            <Text>Blue Theme</Text>\n          </ThemedBox>\n        </XStack>\n      </YStack>\n    </YStack>;\n}",...CoreExportsShowcase.parameters?.docs?.source}}},ResponsiveExample.parameters={...ResponsiveExample.parameters,docs:{...ResponsiveExample.parameters?.docs,source:{originalSource:"() => {\n  return <YStack space=\"$4\" padding=\"$4\">\n      <H3>Responsive Example</H3>\n      <Text>Resize your browser to see the responsive styles in action.</Text>\n      \n      <View padding=\"$2\" $sm={{\n      padding: '$4',\n      backgroundColor: '$blue4'\n    }} $md={{\n      padding: '$6',\n      backgroundColor: '$green4'\n    }} $lg={{\n      padding: '$8',\n      backgroundColor: '$red4'\n    }} borderWidth={1} borderColor=\"$borderColor\" borderRadius=\"$4\">\n        <Text>This box changes padding and background color based on viewport size.</Text>\n        <Text marginTop=\"$2\" fontSize=\"$2\">\n          Current breakpoint: <Text fontWeight=\"bold\">\n            {typeof window !== 'undefined' ? window.innerWidth < 600 ? 'sm' : window.innerWidth < 900 ? 'md' : 'lg' : 'unknown'}\n          </Text>\n        </Text>\n      </View>\n    </YStack>;\n}",...ResponsiveExample.parameters?.docs?.source}}}}}]);