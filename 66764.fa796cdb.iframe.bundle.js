"use strict";(self.webpackChunkstorybook_app=self.webpackChunkstorybook_app||[]).push([[66764],{"../../packages/ui/src/stories/base/UseTheme.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BasicThemeUsage:()=>BasicThemeUsage,DynamicTheming:()=>DynamicTheming,ThemeAwareComponents:()=>ThemeAwareComponents,ThemeSwitching:()=>ThemeSwitching,ThemeWithCssVariables:()=>ThemeWithCssVariables,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/next/dist/compiled/react/index.js"),tamagui__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@tamagui/core/dist/esm/index.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@tamagui/web/dist/esm/hooks/useTheme.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/@tamagui/stacks/dist/esm/Stacks.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/tamagui/dist/esm/views/Text.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../../node_modules/@tamagui/web/dist/esm/views/Theme.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("../../node_modules/@tamagui/button/dist/esm/Button.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("../../node_modules/tamagui/dist/esm/views/Input.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__("../../node_modules/@tamagui/scroll-view/dist/esm/ScrollView.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__("../../node_modules/@tamagui/web/dist/esm/styled.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"tamagui/base/useTheme",component:tamagui__WEBPACK_IMPORTED_MODULE_2__.View,parameters:{layout:"centered",docs:{description:{component:"Demonstration of Tamagui useTheme hook for accessing and manipulating theme values"}}}},BasicThemeUsage=()=>{const theme=(0,tamagui__WEBPACK_IMPORTED_MODULE_3__.D)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$4",padding:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$6",fontWeight:"bold",children:"Basic Theme Usage"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{children:"Access theme values directly from the useTheme hook:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$2",padding:"$4",backgroundColor:"$gray3",borderRadius:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{width:150,color:"$gray11",children:"Background:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{alignItems:"center",space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{width:20,height:20,backgroundColor:theme.background.val,borderRadius:"$2",borderWidth:1,borderColor:"$borderColor"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontFamily:"$",children:theme.background.val})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{width:150,color:"$gray11",children:"Color:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{alignItems:"center",space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{width:20,height:20,backgroundColor:theme.color.val,borderRadius:"$2",borderWidth:1,borderColor:"$borderColor"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontFamily:"$",children:theme.color.val})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{width:150,color:"$gray11",children:"Border Color:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{alignItems:"center",space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{width:20,height:20,backgroundColor:theme.borderColor.val,borderRadius:"$2",borderWidth:1,borderColor:"$borderColor"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontFamily:"$",children:theme.borderColor.val})]})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$2",marginTop:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{children:"Use theme values in style objects:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{space:"$2",flexWrap:"wrap",gap:"$2",children:["blue","red","green","yellow","orange","purple"].map((color=>{var _theme_colorKey;const colorValue=(null===(_theme_colorKey=theme[`${color}8`])||void 0===_theme_colorKey?void 0:_theme_colorKey.val)||"#000";return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{padding:"$2",backgroundColor:colorValue,borderRadius:"$2",minWidth:100,alignItems:"center",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{color:colorValue,style:{filter:"invert(1) grayscale(1) contrast(9)",mixBlendMode:"difference",fontWeight:"bold"},children:color}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$1",color:colorValue,style:{filter:"invert(1) grayscale(1) contrast(9)",mixBlendMode:"difference",fontFamily:"monospace"},children:colorValue})]},color)}))})]})]})},ThemeSwitching=()=>{var _theme_background,_theme_color,_theme_borderColor;const[currentTheme,setCurrentTheme]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("light"),theme=(0,tamagui__WEBPACK_IMPORTED_MODULE_3__.D)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_6__.S,{name:currentTheme,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$4",padding:"$4",minWidth:300,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$6",fontWeight:"bold",children:"Theme Switching"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{space:"$2",flexWrap:"wrap",gap:"$2",children:["light","dark","blue","green","red"].map((themeName=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_7__.$n,{size:"$3",onPress:()=>setCurrentTheme(themeName),backgroundColor:currentTheme===themeName?"$blue8":"$gray5",color:currentTheme===themeName?"white":"$color",children:themeName},themeName)))}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$2",marginTop:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{children:["Current Theme: ",currentTheme]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$1",padding:"$3",backgroundColor:"$backgroundHover",borderRadius:"$3",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{width:120,color:"$colorHover",children:"Background:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontFamily:"monospace",children:null===(_theme_background=theme.background)||void 0===_theme_background?void 0:_theme_background.val})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{width:120,color:"$colorHover",children:"Text Color:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontFamily:"monospace",children:null===(_theme_color=theme.color)||void 0===_theme_color?void 0:_theme_color.val})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{width:120,color:"$colorHover",children:"Border Color:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontFamily:"monospace",children:null===(_theme_borderColor=theme.borderColor)||void 0===_theme_borderColor?void 0:_theme_borderColor.val})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{space:"$2",marginTop:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{flex:1,height:40,backgroundColor:"$backgroundPress",borderRadius:"$2",justifyContent:"center",paddingHorizontal:"$2",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$3",color:"$colorPress",children:"Press"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{flex:1,height:40,backgroundColor:"$backgroundHover",borderRadius:"$2",justifyContent:"center",paddingHorizontal:"$2",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$3",color:"$colorHover",children:"Hover"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{flex:1,height:40,backgroundColor:"$backgroundFocus",borderRadius:"$2",justifyContent:"center",paddingHorizontal:"$2",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$3",color:"$colorFocus",children:"Focus"})})]})]})]})})},DynamicTheming=()=>{const[customColor,setCustomColor]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("#6e56cf"),[themeName,setThemeName]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("custom"),customTheme=(baseColor=>{const adjustColor=(color,amount)=>{const{r,g,b}=(hex=color,{r:parseInt(hex.slice(1,3),16),g:parseInt(hex.slice(3,5),16),b:parseInt(hex.slice(5,7),16)});var hex;const adjust=c=>Math.max(0,Math.min(255,c+amount));return((r,g,b)=>`#${((1<<24)+(r<<16)+(g<<8)+b).toString(16).slice(1)}`)(adjust(r),adjust(g),adjust(b))};return{background:customColor,backgroundHover:adjustColor(customColor,15),backgroundPress:adjustColor(customColor,30),backgroundFocus:adjustColor(customColor,-10),color:"#ffffff",colorHover:"#ffffff",colorPress:"#ffffff",colorFocus:"#ffffff",borderColor:adjustColor(customColor,20),borderColorHover:adjustColor(customColor,40),borderColorPress:adjustColor(customColor,50),borderColorFocus:adjustColor(customColor,10)}})();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_6__.S,{name:themeName,theme:customTheme,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$4",padding:"$4",minWidth:300,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$6",fontWeight:"bold",children:"Dynamic Theming"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{children:"Select a base color:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{alignItems:"center",space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_8__.pd,{type:"color",value:customColor,onChangeText:setCustomColor,padding:0,borderWidth:0,width:50,height:40,cursor:"pointer"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontFamily:"monospace",children:customColor})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$2",marginTop:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{children:"Preview:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{padding:"$4",backgroundColor:"$background",borderRadius:"$4",borderWidth:1,borderColor:"$borderColor",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{color:"$color",fontWeight:"bold",marginBottom:"$2",children:"This is a preview of your custom theme"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{space:"$2",marginTop:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_7__.$n,{flex:1,size:"$3",children:"Primary"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_7__.$n,{flex:1,size:"$3",backgroundColor:"$backgroundHover",color:"$color",children:"Secondary"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$2",marginTop:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$3",children:"Theme Values:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_9__.B,{maxHeight:120,showsVerticalScrollIndicator:!1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$1",children:Object.entries(customTheme).map((([key,value])=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{width:140,fontSize:"$2",color:"$colorHover",children:[key,":"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$2",fontFamily:"monospace",children:value})]},key)))})})]})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{space:"$2",marginTop:"$2",flexWrap:"wrap",gap:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_7__.$n,{size:"$2",onPress:()=>setCustomColor("#6e56cf"),theme:"blue",children:"Purple"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_7__.$n,{size:"$2",onPress:()=>setCustomColor("#0090ff"),theme:"blue",children:"Blue"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_7__.$n,{size:"$2",onPress:()=>setCustomColor("#00b894"),theme:"green",children:"Green"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_7__.$n,{size:"$2",onPress:()=>setCustomColor("#ff6b6b"),theme:"red",children:"Red"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_7__.$n,{size:"$2",onPress:()=>setCustomColor("#ff9f43"),theme:"orange",children:"Orange"})]})]})})},ThemeAwareComponents=()=>{const theme=(0,tamagui__WEBPACK_IMPORTED_MODULE_3__.D)(),ThemeInfoCard=(0,tamagui__WEBPACK_IMPORTED_MODULE_10__.I)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{padding:"$4",borderRadius:"$4",backgroundColor:"$backgroundHover",borderWidth:1,borderColor:"$borderColor",flex:1,minWidth:200,variants:{highlight:{true:{backgroundColor:"$backgroundPress",borderColor:"$borderColorHover"}}}});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$4",padding:"$4",width:"100%",maxWidth:800,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$6",fontWeight:"bold",children:"Theme-Aware Components"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{children:"These components use the current theme values to style themselves dynamically."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(ThemeInfoCard,{highlight:!0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontWeight:"bold",marginBottom:"$2",children:"Current Theme Colors"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$3",marginTop:"$2",children:[{name:"Background",key:"background"},{name:"Text",key:"color"},{name:"Border",key:"borderColor"},{name:"Primary",key:"blue8"},{name:"Success",key:"green8"},{name:"Warning",key:"yellow8"},{name:"Danger",key:"red8"}].map((({name,key})=>{var _theme_key;const color=(null===(_theme_key=theme[key])||void 0===_theme_key?void 0:_theme_key.val)||"#000000",textColor=(hexColor=color,(.299*parseInt(hexColor.slice(1,3),16)+.587*parseInt(hexColor.slice(3,5),16)+.114*parseInt(hexColor.slice(5,7),16))/255>.5?"#000000":"#ffffff");var hexColor;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$1",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{justifyContent:"space-between",alignItems:"center",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$3",children:name}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$2",fontFamily:"monospace",children:color})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{height:20,backgroundColor:color,borderRadius:"$2",justifyContent:"center",paddingHorizontal:"$2",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$1",color:textColor,textAlign:"center",fontWeight:"bold",children:[name," Sample"]})})]},key)}))})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{space:"$4",marginTop:"$4",flexWrap:"wrap",gap:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(ThemeInfoCard,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontWeight:"bold",marginBottom:"$2",children:"Primary Button"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_7__.$n,{children:"Click Me"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$2",marginTop:"$2",color:"$colorHover",children:"Uses theme colors for all states"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(ThemeInfoCard,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontWeight:"bold",marginBottom:"$2",children:"Custom Component"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{padding:"$3",backgroundColor:"$backgroundPress",borderRadius:"$3",borderWidth:1,borderColor:"$borderColor",alignItems:"center",space:"$2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{width:12,height:12,backgroundColor:"$blue8",borderRadius:"$12"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{children:"Connected"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$2",marginTop:"$2",color:"$colorHover",children:"Adapts to theme changes"})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$2",marginTop:"$4",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{children:"Try changing the theme in the ThemeSwitching example to see these components update."})})]})},ThemeWithCssVariables=()=>{var _theme_blue8,_theme_blue9,_theme_color,_theme_background,_theme_borderColor;const theme=(0,tamagui__WEBPACK_IMPORTED_MODULE_3__.D)(),cssVars={"--primary":(null===(_theme_blue8=theme.blue8)||void 0===_theme_blue8?void 0:_theme_blue8.val)||"#0066cc","--primary-hover":(null===(_theme_blue9=theme.blue9)||void 0===_theme_blue9?void 0:_theme_blue9.val)||"#0052a3","--text":(null===(_theme_color=theme.color)||void 0===_theme_color?void 0:_theme_color.val)||"#000000","--bg":(null===(_theme_background=theme.background)||void 0===_theme_background?void 0:_theme_background.val)||"#ffffff","--border":(null===(_theme_borderColor=theme.borderColor)||void 0===_theme_borderColor?void 0:_theme_borderColor.val)||"#e0e0e0"},CssButton=(0,tamagui__WEBPACK_IMPORTED_MODULE_10__.I)(tamagui__WEBPACK_IMPORTED_MODULE_7__.$n,{backgroundColor:"var(--primary)",color:"white",hoverStyle:{backgroundColor:"var(--primary-hover)"}});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$4",padding:"$4",style:cssVars,backgroundColor:"var(--bg)",color:"var(--text)",borderRadius:"$4",borderWidth:1,borderColor:"var(--border)",maxWidth:600,width:"100%",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontSize:"$6",fontWeight:"bold",children:"Theme with CSS Variables"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{children:"This example shows how to use CSS variables with Tamagui themes. The variables are derived from the current theme and can be used in both Tamagui styles and raw CSS."}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{space:"$4",marginTop:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CssButton,{children:"Primary Button"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_7__.$n,{theme:"gray",children:"Secondary Button"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.Se,{space:"$2",marginTop:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{fontWeight:"bold",children:"CSS Variables in Use:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{style:{backgroundColor:"rgba(0,0,0,0.05)",padding:16,borderRadius:8,margin:0,overflowX:"auto",fontSize:13,lineHeight:1.5},children:Object.entries(cssVars).map((([key,value])=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{fontFamily:"monospace"},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{style:{color:"#0066cc"},children:key}),": ",value,";"]},key)))})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.lW,{marginTop:"$4",padding:"$4",backgroundColor:"color-mix(in srgb, var(--primary) 10%, transparent)",borderRadius:"$4",borderLeftWidth:4,borderLeftColor:"var(--primary)",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_5__.E,{children:["This alert uses ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("code",{children:"color-mix()"})," with CSS variables to create a semi-transparent background based on the primary color."]})})]})},__namedExportsOrder=["BasicThemeUsage","ThemeSwitching","DynamicTheming","ThemeAwareComponents","ThemeWithCssVariables"];BasicThemeUsage.parameters={...BasicThemeUsage.parameters,docs:{...BasicThemeUsage.parameters?.docs,source:{originalSource:'() => {\n  const theme = useTheme();\n  return <YStack space="$4" padding="$4">\n      <Text fontSize="$6" fontWeight="bold">Basic Theme Usage</Text>\n      \n      <Text>Access theme values directly from the useTheme hook:</Text>\n      \n      <YStack space="$2" padding="$4" backgroundColor="$gray3" borderRadius="$4">\n        <XStack>\n          <Text width={150} color="$gray11">Background:</Text>\n          <XStack alignItems="center" space="$2">\n            <View width={20} height={20} backgroundColor={theme.background.val} borderRadius="$2" borderWidth={1} borderColor="$borderColor" />\n            <Text fontFamily="$">{theme.background.val}</Text>\n          </XStack>\n        </XStack>\n        \n        <XStack>\n          <Text width={150} color="$gray11">Color:</Text>\n          <XStack alignItems="center" space="$2">\n            <View width={20} height={20} backgroundColor={theme.color.val} borderRadius="$2" borderWidth={1} borderColor="$borderColor" />\n            <Text fontFamily="$">{theme.color.val}</Text>\n          </XStack>\n        </XStack>\n        \n        <XStack>\n          <Text width={150} color="$gray11">Border Color:</Text>\n          <XStack alignItems="center" space="$2">\n            <View width={20} height={20} backgroundColor={theme.borderColor.val} borderRadius="$2" borderWidth={1} borderColor="$borderColor" />\n            <Text fontFamily="$">{theme.borderColor.val}</Text>\n          </XStack>\n        </XStack>\n      </YStack>\n      \n      <YStack space="$2" marginTop="$4">\n        <Text>Use theme values in style objects:</Text>\n        <XStack space="$2" flexWrap="wrap" gap="$2">\n          {[\'blue\', \'red\', \'green\', \'yellow\', \'orange\', \'purple\'].map(color => {\n          const colorKey = `${color}8` as keyof typeof theme;\n          const colorValue = theme[colorKey]?.val || \'#000\';\n          return <View key={color} padding="$2" backgroundColor={colorValue} borderRadius="$2" minWidth={100} alignItems="center">\n                <Text color={colorValue} style={{\n              filter: \'invert(1) grayscale(1) contrast(9)\',\n              mixBlendMode: \'difference\',\n              fontWeight: \'bold\'\n            }}>\n                  {color}\n                </Text>\n                <Text fontSize="$1" color={colorValue} style={{\n              filter: \'invert(1) grayscale(1) contrast(9)\',\n              mixBlendMode: \'difference\',\n              fontFamily: \'monospace\'\n            }}>\n                  {colorValue}\n                </Text>\n              </View>;\n        })}\n        </XStack>\n      </YStack>\n    </YStack>;\n}',...BasicThemeUsage.parameters?.docs?.source}}},ThemeSwitching.parameters={...ThemeSwitching.parameters,docs:{...ThemeSwitching.parameters?.docs,source:{originalSource:'() => {\n  const [currentTheme, setCurrentTheme] = useState<ThemeName>(\'light\');\n  const theme = useTheme();\n  const themes: ThemeName[] = [\'light\', \'dark\', \'blue\', \'green\', \'red\'];\n  return <Theme name={currentTheme}>\n      <YStack space="$4" padding="$4" minWidth={300}>\n        <Text fontSize="$6" fontWeight="bold">Theme Switching</Text>\n        \n        <XStack space="$2" flexWrap="wrap" gap="$2">\n          {themes.map(themeName => <Button key={themeName} size="$3" onPress={() => setCurrentTheme(themeName)} backgroundColor={currentTheme === themeName ? \'$blue8\' : \'$gray5\'} color={currentTheme === themeName ? \'white\' : \'$color\'}>\n              {themeName}\n            </Button>)}\n        </XStack>\n        \n        <YStack space="$2" marginTop="$4">\n          <Text>Current Theme: {currentTheme}</Text>\n          \n          <YStack space="$1" padding="$3" backgroundColor="$backgroundHover" borderRadius="$3">\n            <XStack>\n              <Text width={120} color="$colorHover">Background:</Text>\n              <Text fontFamily="monospace">{theme.background?.val}</Text>\n            </XStack>\n            <XStack>\n              <Text width={120} color="$colorHover">Text Color:</Text>\n              <Text fontFamily="monospace">{theme.color?.val}</Text>\n            </XStack>\n            <XStack>\n              <Text width={120} color="$colorHover">Border Color:</Text>\n              <Text fontFamily="monospace">{theme.borderColor?.val}</Text>\n            </XStack>\n          </YStack>\n          \n          <XStack space="$2" marginTop="$2">\n            <View flex={1} height={40} backgroundColor="$backgroundPress" borderRadius="$2" justifyContent="center" paddingHorizontal="$2">\n              <Text fontSize="$3" color="$colorPress">Press</Text>\n            </View>\n            <View flex={1} height={40} backgroundColor="$backgroundHover" borderRadius="$2" justifyContent="center" paddingHorizontal="$2">\n              <Text fontSize="$3" color="$colorHover">Hover</Text>\n            </View>\n            <View flex={1} height={40} backgroundColor="$backgroundFocus" borderRadius="$2" justifyContent="center" paddingHorizontal="$2">\n              <Text fontSize="$3" color="$colorFocus">Focus</Text>\n            </View>\n          </XStack>\n        </YStack>\n      </YStack>\n    </Theme>;\n}',...ThemeSwitching.parameters?.docs?.source}}},DynamicTheming.parameters={...DynamicTheming.parameters,docs:{...DynamicTheming.parameters?.docs,source:{originalSource:'() => {\n  const [customColor, setCustomColor] = useState(\'#6e56cf\');\n  const [themeName, setThemeName] = useState(\'custom\');\n\n  // Generate a custom theme based on the selected color\n  const generateCustomTheme = (baseColor: string) => {\n    const hexToRgb = (hex: string) => {\n      const r = parseInt(hex.slice(1, 3), 16);\n      const g = parseInt(hex.slice(3, 5), 16);\n      const b = parseInt(hex.slice(5, 7), 16);\n      return {\n        r,\n        g,\n        b\n      };\n    };\n    const rgbToHex = (r: number, g: number, b: number) => {\n      return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n    };\n    const adjustColor = (color: string, amount: number) => {\n      const {\n        r,\n        g,\n        b\n      } = hexToRgb(color);\n      const adjust = (c: number) => Math.max(0, Math.min(255, c + amount));\n      return rgbToHex(adjust(r), adjust(g), adjust(b));\n    };\n    return {\n      background: customColor,\n      backgroundHover: adjustColor(customColor, 15),\n      backgroundPress: adjustColor(customColor, 30),\n      backgroundFocus: adjustColor(customColor, -10),\n      color: \'#ffffff\',\n      colorHover: \'#ffffff\',\n      colorPress: \'#ffffff\',\n      colorFocus: \'#ffffff\',\n      borderColor: adjustColor(customColor, 20),\n      borderColorHover: adjustColor(customColor, 40),\n      borderColorPress: adjustColor(customColor, 50),\n      borderColorFocus: adjustColor(customColor, 10)\n    };\n  };\n  const customTheme = generateCustomTheme(customColor);\n  return <Theme name={themeName} theme={customTheme}>\n      <YStack space="$4" padding="$4" minWidth={300}>\n        <Text fontSize="$6" fontWeight="bold">Dynamic Theming</Text>\n        \n        <YStack space="$2">\n          <Text>Select a base color:</Text>\n          <XStack alignItems="center" space="$2">\n            <Input type="color" value={customColor} onChangeText={setCustomColor} padding={0} borderWidth={0} width={50} height={40} cursor="pointer" />\n            <Text fontFamily="monospace">{customColor}</Text>\n          </XStack>\n        </YStack>\n        \n        <YStack space="$2" marginTop="$4">\n          <Text>Preview:</Text>\n          <YStack padding="$4" backgroundColor="$background" borderRadius="$4" borderWidth={1} borderColor="$borderColor">\n            <Text color="$color" fontWeight="bold" marginBottom="$2">\n              This is a preview of your custom theme\n            </Text>\n            \n            <XStack space="$2" marginTop="$2">\n              <Button flex={1} size="$3">Primary</Button>\n              <Button flex={1} size="$3" backgroundColor="$backgroundHover" color="$color">\n                Secondary\n              </Button>\n            </XStack>\n            \n            <YStack space="$2" marginTop="$4">\n              <Text fontSize="$3">Theme Values:</Text>\n              <ScrollView maxHeight={120} showsVerticalScrollIndicator={false}>\n                <YStack space="$1">\n                  {Object.entries(customTheme).map(([key, value]) => <XStack key={key}>\n                      <Text width={140} fontSize="$2" color="$colorHover">{key}:</Text>\n                      <Text fontSize="$2" fontFamily="monospace">{value}</Text>\n                    </XStack>)}\n                </YStack>\n              </ScrollView>\n            </YStack>\n          </YStack>\n        </YStack>\n        \n        <XStack space="$2" marginTop="$2" flexWrap="wrap" gap="$2">\n          <Button size="$2" onPress={() => setCustomColor(\'#6e56cf\')} theme="blue">\n            Purple\n          </Button>\n          <Button size="$2" onPress={() => setCustomColor(\'#0090ff\')} theme="blue">\n            Blue\n          </Button>\n          <Button size="$2" onPress={() => setCustomColor(\'#00b894\')} theme="green">\n            Green\n          </Button>\n          <Button size="$2" onPress={() => setCustomColor(\'#ff6b6b\')} theme="red">\n            Red\n          </Button>\n          <Button size="$2" onPress={() => setCustomColor(\'#ff9f43\')} theme="orange">\n            Orange\n          </Button>\n        </XStack>\n      </YStack>\n    </Theme>;\n}',...DynamicTheming.parameters?.docs?.source}}},ThemeAwareComponents.parameters={...ThemeAwareComponents.parameters,docs:{...ThemeAwareComponents.parameters?.docs,source:{originalSource:'() => {\n  const theme = useTheme();\n  const ThemeInfoCard = styled(YStack, {\n    padding: \'$4\',\n    borderRadius: \'$4\',\n    backgroundColor: \'$backgroundHover\',\n    borderWidth: 1,\n    borderColor: \'$borderColor\',\n    flex: 1,\n    minWidth: 200,\n    variants: {\n      highlight: {\n        true: {\n          backgroundColor: \'$backgroundPress\',\n          borderColor: \'$borderColorHover\'\n        }\n      }\n    } as const\n  });\n  const getContrastColor = (hexColor: string) => {\n    // Convert hex to RGB\n    const r = parseInt(hexColor.slice(1, 3), 16);\n    const g = parseInt(hexColor.slice(3, 5), 16);\n    const b = parseInt(hexColor.slice(5, 7), 16);\n\n    // Calculate luminance (perceived brightness)\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n\n    // Return black for light colors, white for dark colors\n    return luminance > 0.5 ? \'#000000\' : \'#ffffff\';\n  };\n  const themeColors = [{\n    name: \'Background\',\n    key: \'background\'\n  }, {\n    name: \'Text\',\n    key: \'color\'\n  }, {\n    name: \'Border\',\n    key: \'borderColor\'\n  }, {\n    name: \'Primary\',\n    key: \'blue8\'\n  }, {\n    name: \'Success\',\n    key: \'green8\'\n  }, {\n    name: \'Warning\',\n    key: \'yellow8\'\n  }, {\n    name: \'Danger\',\n    key: \'red8\'\n  }];\n  return <YStack space="$4" padding="$4" width="100%" maxWidth={800}>\n      <Text fontSize="$6" fontWeight="bold">Theme-Aware Components</Text>\n      \n      <Text>\n        These components use the current theme values to style themselves dynamically.\n      </Text>\n      \n      <ThemeInfoCard highlight>\n        <Text fontWeight="bold" marginBottom="$2">Current Theme Colors</Text>\n        \n        <YStack space="$3" marginTop="$2">\n          {themeColors.map(({\n          name,\n          key\n        }) => {\n          const color = theme[key as keyof typeof theme]?.val || \'#000000\';\n          const textColor = getContrastColor(color);\n          return <YStack key={key} space="$1">\n                <XStack justifyContent="space-between" alignItems="center">\n                  <Text fontSize="$3">{name}</Text>\n                  <Text fontSize="$2" fontFamily="monospace">{color}</Text>\n                </XStack>\n                <View height={20} backgroundColor={color} borderRadius="$2" justifyContent="center" paddingHorizontal="$2">\n                  <Text fontSize="$1" color={textColor} textAlign="center" fontWeight="bold">\n                    {name} Sample\n                  </Text>\n                </View>\n              </YStack>;\n        })}\n        </YStack>\n      </ThemeInfoCard>\n      \n      <XStack space="$4" marginTop="$4" flexWrap="wrap" gap="$4">\n        <ThemeInfoCard>\n          <Text fontWeight="bold" marginBottom="$2">Primary Button</Text>\n          <Button>Click Me</Button>\n          <Text fontSize="$2" marginTop="$2" color="$colorHover">\n            Uses theme colors for all states\n          </Text>\n        </ThemeInfoCard>\n        \n        <ThemeInfoCard>\n          <Text fontWeight="bold" marginBottom="$2">Custom Component</Text>\n          <XStack padding="$3" backgroundColor="$backgroundPress" borderRadius="$3" borderWidth={1} borderColor="$borderColor" alignItems="center" space="$2">\n            <View width={12} height={12} backgroundColor="$blue8" borderRadius="$12" />\n            <Text>Connected</Text>\n          </XStack>\n          <Text fontSize="$2" marginTop="$2" color="$colorHover">\n            Adapts to theme changes\n          </Text>\n        </ThemeInfoCard>\n      </XStack>\n      \n      <YStack space="$2" marginTop="$4">\n        <Text>Try changing the theme in the ThemeSwitching example to see these components update.</Text>\n      </YStack>\n    </YStack>;\n}',...ThemeAwareComponents.parameters?.docs?.source}}},ThemeWithCssVariables.parameters={...ThemeWithCssVariables.parameters,docs:{...ThemeWithCssVariables.parameters?.docs,source:{originalSource:'() => {\n  const theme = useTheme();\n  const cssVars = {\n    \'--primary\': theme.blue8?.val || \'#0066cc\',\n    \'--primary-hover\': theme.blue9?.val || \'#0052a3\',\n    \'--text\': theme.color?.val || \'#000000\',\n    \'--bg\': theme.background?.val || \'#ffffff\',\n    \'--border\': theme.borderColor?.val || \'#e0e0e0\'\n  };\n  const CssButton = styled(Button, {\n    backgroundColor: \'var(--primary)\',\n    color: \'white\',\n    hoverStyle: {\n      backgroundColor: \'var(--primary-hover)\'\n    }\n  });\n  return <YStack space="$4" padding="$4" style={cssVars as any} backgroundColor="var(--bg)" color="var(--text)" borderRadius="$4" borderWidth={1} borderColor="var(--border)" maxWidth={600} width="100%">\n      <Text fontSize="$6" fontWeight="bold">Theme with CSS Variables</Text>\n      \n      <Text>\n        This example shows how to use CSS variables with Tamagui themes. The variables are \n        derived from the current theme and can be used in both Tamagui styles and raw CSS.\n      </Text>\n      \n      <XStack space="$4" marginTop="$4">\n        <CssButton>Primary Button</CssButton>\n        <Button theme="gray">Secondary Button</Button>\n      </XStack>\n      \n      <YStack space="$2" marginTop="$4">\n        <Text fontWeight="bold">CSS Variables in Use:</Text>\n        <pre style={{\n        backgroundColor: \'rgba(0,0,0,0.05)\',\n        padding: 16,\n        borderRadius: 8,\n        margin: 0,\n        overflowX: \'auto\',\n        fontSize: 13,\n        lineHeight: 1.5\n      }}>\n          {Object.entries(cssVars).map(([key, value]) => <div key={key} style={{\n          fontFamily: \'monospace\'\n        }}>\n              <span style={{\n            color: \'#0066cc\'\n          }}>{key}</span>: {value};\n            </div>)}\n        </pre>\n      </YStack>\n      \n      <XStack marginTop="$4" padding="$4" backgroundColor="color-mix(in srgb, var(--primary) 10%, transparent)" borderRadius="$4" borderLeftWidth={4} borderLeftColor="var(--primary)">\n        <Text>\n          This alert uses <code>color-mix()</code> with CSS variables to create a \n          semi-transparent background based on the primary color.\n        </Text>\n      </XStack>\n    </YStack>;\n}',...ThemeWithCssVariables.parameters?.docs?.source}}}}}]);