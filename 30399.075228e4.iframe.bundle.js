"use strict";(self.webpackChunkstorybook_app=self.webpackChunkstorybook_app||[]).push([[30399],{"../../packages/ui/dist/cjs/layout/page/Drawer.cjs":(module,__unused_webpack_exports,__webpack_require__)=>{var mod,__create=Object.create,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(to,from,except,desc)=>{if(from&&"object"==typeof from||"function"==typeof from)for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},Drawer_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(Drawer_exports,{Drawer:()=>Drawer,DrawerContext:()=>DrawerContext}),module.exports=(mod=Drawer_exports,__copyProps(__defProp({},"__esModule",{value:!0}),mod));var import_focus_scope=__webpack_require__("../../node_modules/@tamagui/focus-scope/dist/cjs/index.cjs"),import_portal=__webpack_require__("../../node_modules/@tamagui/portal/dist/cjs/index.cjs"),import_react=((mod,isNodeMode,target)=>(target=null!=mod?__create(__getProtoOf(mod)):{},__copyProps(!isNodeMode&&mod&&mod.__esModule?target:__defProp(target,"default",{value:mod,enumerable:!0}),mod)))(__webpack_require__("../../node_modules/next/dist/compiled/react/index.js")),import_react_native=__webpack_require__("../../node_modules/react-native-web/dist/index.js"),import_tamagui=__webpack_require__("../../node_modules/tamagui/dist/cjs/index.cjs"),import_jsx_runtime=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js");const DrawerContext=(0,import_tamagui.createStyledContext)({open:!1,setOpen:()=>{}}),SwipeDismissableComponent=import_react.default.forwardRef((({onDismiss,children,dismissAfter=80,...rest},ref)=>{const{animationDriver}=(0,import_tamagui.useConfiguration)();if(!animationDriver)throw new Error("Must use animation driver");var _animationDriver_View;const{useAnimatedNumber,useAnimatedNumberStyle}=animationDriver,AnimatedView=null!==(_animationDriver_View=animationDriver.View)&&void 0!==_animationDriver_View?_animationDriver_View:import_tamagui.Stack,pan=useAnimatedNumber(0),[props,style]=(0,import_tamagui.usePropsAndStyle)(rest),[dragStarted,setDragStarted]=(0,import_react.useState)(!1),dismissAfterRef=(0,import_react.useRef)(dismissAfter),panResponder=(0,import_react.useRef)(import_react_native.PanResponder.create({onStartShouldSetPanResponder:(_,gestureState)=>Math.abs(gestureState.dx)>Math.abs(gestureState.dy),onPanResponderMove:(_,gestureState)=>{const{dx}=gestureState;dx<0&&(setDragStarted(!0),pan.setValue(dx,{type:"direct"}))},onPanResponderRelease:(e,gestureState)=>{setDragStarted(!1),gestureState.dx<-dismissAfterRef.current?onDismiss&&onDismiss():pan.setValue(0,{type:"spring",overshootClamping:!0})}})).current,panStyle=useAnimatedNumberStyle(pan,(val=>({transform:[{translateX:val}]})));return(0,import_jsx_runtime.jsx)(AnimatedView,{ref,style:[panStyle,{height:"100%",...style,...dragStarted&&{pointerEvents:"none"}}],...panResponder.panHandlers,...props,children})})),DrawerFrame=(0,import_tamagui.styled)(import_tamagui.YStack,{variants:{unstyled:{false:{themeInverse:!0,paddingVertical:"$2",tag:"nav",width:210,alignItems:"flex-start",justifyContent:"flex-start",backgroundColor:"$background",x:0,gap:"$4"}}},defaultVariants:{unstyled:!1}}),Overlay=(0,import_tamagui.styled)(import_tamagui.YStack,{name:"DrawerOverlay",context:DrawerContext,enterStyle:{opacity:0},exitStyle:{opacity:0},variants:{unstyled:{false:{fullscreen:!0,position:"absolute",backgroundColor:"rgba(0, 0, 0, 0.5)",zIndex:99999,pointerEvents:"auto"}}},defaultVariants:{unstyled:"1"==={}.TAMAGUI_HEADLESS}}),DrawerOverlay=Overlay.styleable(((props,ref)=>{const{setOpen}=DrawerContext.useStyledContext();return(0,import_jsx_runtime.jsx)(Overlay,{ref,onPress:()=>setOpen(!1),...props})})),DrawerSwipeable=(0,import_react.forwardRef)(((props,ref)=>{const{setOpen,open:_open}=DrawerContext.useStyledContext();return(0,import_jsx_runtime.jsx)(SwipeDismissableComponent,{onDismiss:()=>setOpen(!1),zIndex:1e9,position:"absolute",...props,ref})})),DrawerContent=DrawerFrame.styleable(((props,ref)=>{const{children,...rest}=props;return(0,import_jsx_runtime.jsx)(import_focus_scope.FocusScope,{trapped:!0,enabled:!0,loop:!0,children:(0,import_jsx_runtime.jsx)(DrawerFrame,{ref,animation:"medium",enterStyle:{x:-(rest.width||rest.w||210)},exitStyle:{x:-(rest.width||rest.w||210)},...rest,children})})})),Drawer=(0,import_tamagui.withStaticProperties)((({open=!1,onOpenChange,children,portalToRoot,...rest})=>{const[_open,setOpen]=(0,import_tamagui.useControllableState)({prop:open,defaultProp:!1,onChange:onOpenChange}),content=open&&(0,import_jsx_runtime.jsx)(import_jsx_runtime.Fragment,{children});return(0,import_jsx_runtime.jsx)(DrawerContext.Provider,{open:_open,setOpen,children:(0,import_jsx_runtime.jsx)(import_tamagui.AnimatePresence,{children:open&&content})})}),{Content:DrawerContent,Overlay:DrawerOverlay,Swipeable:DrawerSwipeable,Portal:props=>import_react_native.Platform.select({web:(0,import_jsx_runtime.jsx)(import_portal.Portal,{zIndex:1e9,...props}),native:(0,import_jsx_runtime.jsx)(import_react_native.Modal,{animationType:"none",transparent:!0,children:props.children})})})}}]);