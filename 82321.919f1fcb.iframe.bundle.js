"use strict";(self.webpackChunkstorybook_app=self.webpackChunkstorybook_app||[]).push([[82321],{"../../packages/ui/src/stories/base/Animations.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AnimationOrchestration:()=>AnimationOrchestration,AnimationStates:()=>AnimationStates,BasicAnimations:()=>BasicAnimations,CustomAnimations:()=>CustomAnimations,EnterExitAnimations:()=>EnterExitAnimations,GestureAnimations:()=>GestureAnimations,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/next/dist/compiled/react/index.js"),tamagui__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/@tamagui/core/dist/esm/index.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../node_modules/@tamagui/stacks/dist/esm/Stacks.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../node_modules/tamagui/dist/esm/views/Text.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../node_modules/@tamagui/button/dist/esm/Button.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("../../node_modules/tamagui/dist/esm/index.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("../../node_modules/@tamagui/animate-presence/dist/esm/AnimatePresence.mjs"),tamagui__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__("../../node_modules/@tamagui/web/dist/esm/styled.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"tamagui/base/Animations",component:tamagui__WEBPACK_IMPORTED_MODULE_2__.View,parameters:{layout:"centered",docs:{description:{component:"Demonstration of Tamagui animations and transitions"}}}},BasicAnimations=()=>{const[isActive,setIsActive]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$4",padding:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.E,{fontSize:"$6",fontWeight:"bold",children:"Basic Animations"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.lW,{space:"$4",flexWrap:"wrap",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.$n,{animation:"bouncy",scale:isActive?1.2:1,onPress:()=>setIsActive(!isActive),children:isActive?"Active":"Inactive"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.$n,{animation:"quick",rotate:isActive?"10deg":"0deg",onPress:()=>setIsActive(!isActive),children:"Rotate"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.$n,{animation:"lazy",opacity:isActive?.5:1,onPress:()=>setIsActive(!isActive),children:"Fade"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.lW,{space:"$4",padding:"$4",backgroundColor:"$gray3",borderRadius:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{width:60,height:60,backgroundColor:"$blue8",borderRadius:"$4",animation:"bouncy",hoverStyle:{scale:1.1,backgroundColor:"$blue9"},pressStyle:{scale:.9}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{width:60,height:60,backgroundColor:"$red8",borderRadius:"$4",animation:"quick",hoverStyle:{rotate:"10deg",backgroundColor:"$red9"},pressStyle:{rotate:"-10deg"}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{width:60,height:60,backgroundColor:"$green8",borderRadius:"$4",animation:"lazy",hoverStyle:{y:-10,backgroundColor:"$green9"},pressStyle:{y:0}})]})]})]})},AnimationStates=()=>{const animationState=(0,tamagui__WEBPACK_IMPORTED_MODULE_6__.useAnimationState)({from:{opacity:0,scale:.5},to:{opacity:1,scale:1,transition:{type:"spring",damping:10}},exit:{opacity:0,scale:.5,transition:{type:"spring",damping:10}}});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$4",padding:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.E,{fontSize:"$6",fontWeight:"bold",children:"Animation States"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.lW,{space:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.$n,{onPress:()=>animationState.transitionTo("from"),children:"Hide"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.$n,{onPress:()=>animationState.transitionTo("to"),children:"Show"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.$n,{onPress:()=>animationState.transitionTo("exit"),children:"Exit"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{width:100,height:100,backgroundColor:"$blue8",borderRadius:"$4",...animationState,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.E,{color:"white",textAlign:"center",marginTop:"$4",children:animationState.currentState})})]})},EnterExitAnimations=()=>{const[show,setShow]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!0);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$4",padding:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.E,{fontSize:"$6",fontWeight:"bold",children:"Enter/Exit Animations"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.$n,{onPress:()=>setShow(!show),children:show?"Hide":"Show"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_7__.N,{children:show&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{width:100,height:100,backgroundColor:"$green8",borderRadius:"$4",animation:"quick",enterStyle:{x:-50,opacity:0},exitStyle:{x:100,opacity:0},x:0,opacity:1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.E,{color:"white",textAlign:"center",marginTop:"$4",children:"Hello!"})})})]})},AnimatedBox=(0,tamagui__WEBPACK_IMPORTED_MODULE_8__.I)(tamagui__WEBPACK_IMPORTED_MODULE_2__.Stack,{width:100,height:100,backgroundColor:"$blue8",borderRadius:"$4",variants:{isPulsing:{true:{animation:"pulse 2s infinite",keyframes:{"0%":{opacity:1,scale:1},"50%":{opacity:.7,scale:1.1},"100%":{opacity:1,scale:1}}}},isSpinning:{true:{animation:"spin 1s linear infinite",keyframes:{"0%":{rotate:"0deg"},"100%":{rotate:"360deg"}}}}}}),CustomAnimations=()=>{const[isPulsing,setIsPulsing]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[isSpinning,setIsSpinning]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$4",padding:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.E,{fontSize:"$6",fontWeight:"bold",children:"Custom Animations"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.lW,{space:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.$n,{onPress:()=>setIsPulsing(!isPulsing),children:isPulsing?"Stop Pulse":"Start Pulse"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.$n,{onPress:()=>setIsSpinning(!isSpinning),children:isSpinning?"Stop Spin":"Start Spin"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.lW,{space:"$4",justifyContent:"center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(AnimatedBox,{isPulsing,isSpinning,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.E,{color:"white",textAlign:"center",marginTop:"$4",children:isPulsing?"Pulsing":isSpinning?"Spinning":"Idle"})})})]})]})},GestureAnimations=()=>{const[position,setPosition]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({x:0,y:0}),[isDragging,setIsDragging]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$4",padding:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.E,{fontSize:"$6",fontWeight:"bold",children:"Gesture Animations"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.E,{children:"Drag the box below:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{width:200,height:200,backgroundColor:"$gray3",borderRadius:"$4",position:"relative",overflow:"hidden",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{width:60,height:60,backgroundColor:"$blue8",borderRadius:"$4",position:"absolute",x:position.x,y:position.y,animation:"quick",cursor:"grab",userSelect:"none",onHoverIn:()=>document.body.style.cursor="grab",onHoverOut:()=>document.body.style.cursor="default",onPressIn:()=>{setIsDragging(!0),document.body.style.cursor="grabbing"},onPressOut:()=>{setIsDragging(!1),document.body.style.cursor="grab"},onHoverOut:()=>{isDragging||(document.body.style.cursor="default")},onPan:event=>{isDragging&&setPosition({x:Math.max(0,Math.min(140,position.x+event.deltaX)),y:Math.max(0,Math.min(140,position.y+event.deltaY))})},pressStyle:{scale:.95,backgroundColor:"$blue9"},hoverStyle:{scale:1.05},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.E,{color:"white",textAlign:"center",marginTop:"$4",children:"Drag Me"})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_4__.E,{children:["Position: X: ",Math.round(position.x),", Y: ",Math.round(position.y)]})]})},AnimationOrchestration=()=>{const[isExpanded,setIsExpanded]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tamagui__WEBPACK_IMPORTED_MODULE_3__.Se,{space:"$4",padding:"$4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.E,{fontSize:"$6",fontWeight:"bold",children:"Animation Orchestration"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_5__.$n,{onPress:()=>setIsExpanded(!isExpanded),children:isExpanded?"Collapse":"Expand"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_3__.lW,{space:"$4",flexWrap:"wrap",children:[0,1,2,3,4].map((i=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_2__.View,{width:isExpanded?80:40,height:isExpanded?80:40,backgroundColor:"$blue8",borderRadius:"$4",animation:"bouncy",enterStyle:{x:-50,opacity:0},exitStyle:{x:100,opacity:0},x:0,opacity:1,delay:100*i,transition:{type:"spring",damping:10,stiffness:100,delay:50*i},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tamagui__WEBPACK_IMPORTED_MODULE_4__.E,{color:"white",textAlign:"center",marginTop:"$4",children:i+1})},i)))})]})},__namedExportsOrder=["BasicAnimations","AnimationStates","EnterExitAnimations","CustomAnimations","GestureAnimations","AnimationOrchestration"];BasicAnimations.parameters={...BasicAnimations.parameters,docs:{...BasicAnimations.parameters?.docs,source:{originalSource:'() => {\n  const [isActive, setIsActive] = useState(false);\n  return <YStack space="$4" padding="$4">\n      <Text fontSize="$6" fontWeight="bold">Basic Animations</Text>\n      \n      <YStack space="$4">\n        <XStack space="$4" flexWrap="wrap">\n          <Button animation="bouncy" scale={isActive ? 1.2 : 1} onPress={() => setIsActive(!isActive)}>\n            {isActive ? \'Active\' : \'Inactive\'}\n          </Button>\n          \n          <Button animation="quick" rotate={isActive ? \'10deg\' : \'0deg\'} onPress={() => setIsActive(!isActive)}>\n            Rotate\n          </Button>\n          \n          <Button animation="lazy" opacity={isActive ? 0.5 : 1} onPress={() => setIsActive(!isActive)}>\n            Fade\n          </Button>\n        </XStack>\n        \n        <XStack space="$4" padding="$4" backgroundColor="$gray3" borderRadius="$4">\n          <View width={60} height={60} backgroundColor="$blue8" borderRadius="$4" animation="bouncy" hoverStyle={{\n          scale: 1.1,\n          backgroundColor: \'$blue9\'\n        }} pressStyle={{\n          scale: 0.9\n        }} />\n          \n          <View width={60} height={60} backgroundColor="$red8" borderRadius="$4" animation="quick" hoverStyle={{\n          rotate: \'10deg\',\n          backgroundColor: \'$red9\'\n        }} pressStyle={{\n          rotate: \'-10deg\'\n        }} />\n          \n          <View width={60} height={60} backgroundColor="$green8" borderRadius="$4" animation="lazy" hoverStyle={{\n          y: -10,\n          backgroundColor: \'$green9\'\n        }} pressStyle={{\n          y: 0\n        }} />\n        </XStack>\n      </YStack>\n    </YStack>;\n}',...BasicAnimations.parameters?.docs?.source}}},AnimationStates.parameters={...AnimationStates.parameters,docs:{...AnimationStates.parameters?.docs,source:{originalSource:'() => {\n  const animationState = useAnimationState({\n    from: {\n      opacity: 0,\n      scale: 0.5\n    },\n    to: {\n      opacity: 1,\n      scale: 1,\n      transition: {\n        type: \'spring\',\n        damping: 10\n      }\n    },\n    exit: {\n      opacity: 0,\n      scale: 0.5,\n      transition: {\n        type: \'spring\',\n        damping: 10\n      }\n    }\n  });\n  return <YStack space="$4" padding="$4">\n      <Text fontSize="$6" fontWeight="bold">Animation States</Text>\n      \n      <XStack space="$4">\n        <Button onPress={() => animationState.transitionTo(\'from\')}>\n          Hide\n        </Button>\n        <Button onPress={() => animationState.transitionTo(\'to\')}>\n          Show\n        </Button>\n        <Button onPress={() => animationState.transitionTo(\'exit\')}>\n          Exit\n        </Button>\n      </XStack>\n      \n      <View width={100} height={100} backgroundColor="$blue8" borderRadius="$4" {...animationState}>\n        <Text color="white" textAlign="center" marginTop="$4">\n          {animationState.currentState}\n        </Text>\n      </View>\n    </YStack>;\n}',...AnimationStates.parameters?.docs?.source}}},EnterExitAnimations.parameters={...EnterExitAnimations.parameters,docs:{...EnterExitAnimations.parameters?.docs,source:{originalSource:'() => {\n  const [show, setShow] = useState(true);\n  return <YStack space="$4" padding="$4">\n      <Text fontSize="$6" fontWeight="bold">Enter/Exit Animations</Text>\n      \n      <Button onPress={() => setShow(!show)}>\n        {show ? \'Hide\' : \'Show\'}\n      </Button>\n      \n      <AnimatePresence>\n        {show && <View width={100} height={100} backgroundColor="$green8" borderRadius="$4" animation="quick" enterStyle={{\n        x: -50,\n        opacity: 0\n      }} exitStyle={{\n        x: 100,\n        opacity: 0\n      }} x={0} opacity={1}>\n            <Text color="white" textAlign="center" marginTop="$4">\n              Hello!\n            </Text>\n          </View>}\n      </AnimatePresence>\n    </YStack>;\n}',...EnterExitAnimations.parameters?.docs?.source}}},CustomAnimations.parameters={...CustomAnimations.parameters,docs:{...CustomAnimations.parameters?.docs,source:{originalSource:'() => {\n  const [isPulsing, setIsPulsing] = useState(false);\n  const [isSpinning, setIsSpinning] = useState(false);\n  return <YStack space="$4" padding="$4">\n      <Text fontSize="$6" fontWeight="bold">Custom Animations</Text>\n      \n      <YStack space="$4">\n        <XStack space="$4">\n          <Button onPress={() => setIsPulsing(!isPulsing)}>\n            {isPulsing ? \'Stop Pulse\' : \'Start Pulse\'}\n          </Button>\n          <Button onPress={() => setIsSpinning(!isSpinning)}>\n            {isSpinning ? \'Stop Spin\' : \'Start Spin\'}\n          </Button>\n        </XStack>\n        \n        <XStack space="$4" justifyContent="center">\n          <AnimatedBox isPulsing={isPulsing} isSpinning={isSpinning}>\n            <Text color="white" textAlign="center" marginTop="$4">\n              {isPulsing ? \'Pulsing\' : isSpinning ? \'Spinning\' : \'Idle\'}\n            </Text>\n          </AnimatedBox>\n        </XStack>\n      </YStack>\n    </YStack>;\n}',...CustomAnimations.parameters?.docs?.source}}},GestureAnimations.parameters={...GestureAnimations.parameters,docs:{...GestureAnimations.parameters?.docs,source:{originalSource:'() => {\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  return <YStack space="$4" padding="$4">\n      <Text fontSize="$6" fontWeight="bold">Gesture Animations</Text>\n      \n      <Text>Drag the box below:</Text>\n      \n      <View width={200} height={200} backgroundColor="$gray3" borderRadius="$4" position="relative" overflow="hidden">\n        <View width={60} height={60} backgroundColor="$blue8" borderRadius="$4" position="absolute" x={position.x} y={position.y} animation="quick" cursor="grab" userSelect="none" onHoverIn={() => document.body.style.cursor = \'grab\'} onHoverOut={() => document.body.style.cursor = \'default\'} onPressIn={() => {\n        setIsDragging(true);\n        document.body.style.cursor = \'grabbing\';\n      }} onPressOut={() => {\n        setIsDragging(false);\n        document.body.style.cursor = \'grab\';\n      }} onHoverOut={() => {\n        if (!isDragging) document.body.style.cursor = \'default\';\n      }} onPan={event => {\n        if (!isDragging) return;\n        setPosition({\n          x: Math.max(0, Math.min(140, position.x + event.deltaX)),\n          y: Math.max(0, Math.min(140, position.y + event.deltaY))\n        });\n      }} pressStyle={{\n        scale: 0.95,\n        backgroundColor: \'$blue9\'\n      }} hoverStyle={{\n        scale: 1.05\n      }}>\n          <Text color="white" textAlign="center" marginTop="$4">\n            Drag Me\n          </Text>\n        </View>\n      </View>\n      \n      <Text>Position: X: {Math.round(position.x)}, Y: {Math.round(position.y)}</Text>\n    </YStack>;\n}',...GestureAnimations.parameters?.docs?.source}}},AnimationOrchestration.parameters={...AnimationOrchestration.parameters,docs:{...AnimationOrchestration.parameters?.docs,source:{originalSource:'() => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  return <YStack space="$4" padding="$4">\n      <Text fontSize="$6" fontWeight="bold">Animation Orchestration</Text>\n      \n      <Button onPress={() => setIsExpanded(!isExpanded)}>\n        {isExpanded ? \'Collapse\' : \'Expand\'}\n      </Button>\n      \n      <XStack space="$4" flexWrap="wrap">\n        {[0, 1, 2, 3, 4].map(i => <View key={i} width={isExpanded ? 80 : 40} height={isExpanded ? 80 : 40} backgroundColor="$blue8" borderRadius="$4" animation="bouncy" enterStyle={{\n        x: -50,\n        opacity: 0\n      }} exitStyle={{\n        x: 100,\n        opacity: 0\n      }} x={0} opacity={1} delay={i * 100} transition={{\n        type: \'spring\',\n        damping: 10,\n        stiffness: 100,\n        delay: i * 50\n      }}>\n            <Text color="white" textAlign="center" marginTop="$4">\n              {i + 1}\n            </Text>\n          </View>)}\n      </XStack>\n    </YStack>;\n}',...AnimationOrchestration.parameters?.docs?.source}}}}}]);